{
    "sourceFile": "Frontend/src/app/layout/default-layout/default-header/default-header.component.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 9,
            "patches": [
                {
                    "date": 1747829053737,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1747839691171,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import { NgTemplateOutlet } from '@angular/common';\r\n import { Component, computed, inject, input } from '@angular/core';\r\n-import { RouterLink, RouterLinkActive } from '@angular/router';\r\n+import { Router, RouterLink, RouterLinkActive } from '@angular/router';\r\n \r\n import {\r\n   AvatarComponent,\r\n   BadgeComponent,\r\n@@ -22,8 +22,9 @@\n   SidebarToggleDirective\r\n } from '@coreui/angular';\r\n \r\n import { IconDirective } from '@coreui/icons-angular';\r\n+import { PredictionService } from '../../../views/dashboard/prediction.service';\r\n \r\n @Component({\r\n     selector: 'app-default-header',\r\n     templateUrl: './default-header.component.html',\r\n@@ -44,9 +45,9 @@\n     const currentMode = this.colorMode();\r\n     return this.colorModes.find(mode => mode.name === currentMode)?.icon ?? 'cilSun';\r\n   });\r\n \r\n-  constructor() {\r\n+  constructor(private predictionService: PredictionService, private router: Router) {\r\n     super();\r\n   }\r\n \r\n   sidebarId = input('sidebar1');\r\n@@ -125,5 +126,9 @@\n     { id: 3, title: 'Add new layouts', value: 75, color: 'info' },\r\n     { id: 4, title: 'Angular Version', value: 100, color: 'success' }\r\n   ];\r\n \r\n+  logout(): void {\r\n+    this.predictionService.logout();\r\n+    this.router.navigate(['/login']);\r\n+  }\r\n }\r\n"
                },
                {
                    "date": 1748186799083,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n import { NgTemplateOutlet } from '@angular/common';\r\n import { Component, computed, inject, input } from '@angular/core';\r\n import { Router, RouterLink, RouterLinkActive } from '@angular/router';\r\n+import { ClassToggleService, HeaderComponent } from '@coreui/angular';\r\n \r\n import {\r\n   AvatarComponent,\r\n   BadgeComponent,\r\n@@ -13,9 +14,8 @@\n   DropdownHeaderDirective,\r\n   DropdownItemDirective,\r\n   DropdownMenuDirective,\r\n   DropdownToggleDirective,\r\n-  HeaderComponent,\r\n   HeaderNavComponent,\r\n   HeaderTogglerDirective,\r\n   NavItemComponent,\r\n   NavLinkDirective,\r\n@@ -23,13 +23,14 @@\n } from '@coreui/angular';\r\n \r\n import { IconDirective } from '@coreui/icons-angular';\r\n import { PredictionService } from '../../../views/dashboard/prediction.service';\r\n+import { UserAvatarComponent } from '../../../components/user-avatar/user-avatar.component';\r\n \r\n @Component({\r\n     selector: 'app-default-header',\r\n     templateUrl: './default-header.component.html',\r\n-  imports: [ContainerComponent, HeaderTogglerDirective, SidebarToggleDirective, IconDirective, HeaderNavComponent, NavItemComponent, NavLinkDirective, RouterLink, RouterLinkActive, NgTemplateOutlet, BreadcrumbRouterComponent, DropdownComponent, DropdownToggleDirective, AvatarComponent, DropdownMenuDirective, DropdownHeaderDirective, DropdownItemDirective, BadgeComponent, DropdownDividerDirective]\r\n+  imports: [ContainerComponent, HeaderTogglerDirective, SidebarToggleDirective, IconDirective, HeaderNavComponent, NavItemComponent, NavLinkDirective, RouterLink, RouterLinkActive, NgTemplateOutlet, BreadcrumbRouterComponent, DropdownComponent, DropdownToggleDirective, AvatarComponent, DropdownMenuDirective, DropdownHeaderDirective, DropdownItemDirective, BadgeComponent, DropdownDividerDirective, UserAvatarComponent]\r\n })\r\n export class DefaultHeaderComponent extends HeaderComponent {\r\n \r\n   readonly #colorModeService = inject(ColorModeService);\r\n@@ -45,9 +46,13 @@\n     const currentMode = this.colorMode();\r\n     return this.colorModes.find(mode => mode.name === currentMode)?.icon ?? 'cilSun';\r\n   });\r\n \r\n-  constructor(private predictionService: PredictionService, private router: Router) {\r\n+  constructor(\r\n+    private classToggler: ClassToggleService,\r\n+    private predictionService: PredictionService,\r\n+    private router: Router\r\n+  ) {\r\n     super();\r\n   }\r\n \r\n   sidebarId = input('sidebar1');\r\n@@ -126,8 +131,12 @@\n     { id: 3, title: 'Add new layouts', value: 75, color: 'info' },\r\n     { id: 4, title: 'Angular Version', value: 100, color: 'success' }\r\n   ];\r\n \r\n+  getCurrentUsername(): string {\r\n+    return this.predictionService.getCurrentUsername() || 'User';\r\n+  }\r\n+\r\n   logout(): void {\r\n     this.predictionService.logout();\r\n     this.router.navigate(['/login']);\r\n   }\r\n"
                },
                {
                    "date": 1748186834754,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,7 @@\n import { NgTemplateOutlet } from '@angular/common';\r\n import { Component, computed, inject, input } from '@angular/core';\r\n import { Router, RouterLink, RouterLinkActive } from '@angular/router';\r\n-import { ClassToggleService, HeaderComponent } from '@coreui/angular';\r\n \r\n import {\r\n   AvatarComponent,\r\n   BadgeComponent,\r\n@@ -14,8 +13,9 @@\n   DropdownHeaderDirective,\r\n   DropdownItemDirective,\r\n   DropdownMenuDirective,\r\n   DropdownToggleDirective,\r\n+  HeaderComponent,\r\n   HeaderNavComponent,\r\n   HeaderTogglerDirective,\r\n   NavItemComponent,\r\n   NavLinkDirective,\r\n@@ -23,14 +23,13 @@\n } from '@coreui/angular';\r\n \r\n import { IconDirective } from '@coreui/icons-angular';\r\n import { PredictionService } from '../../../views/dashboard/prediction.service';\r\n-import { UserAvatarComponent } from '../../../components/user-avatar/user-avatar.component';\r\n \r\n @Component({\r\n     selector: 'app-default-header',\r\n     templateUrl: './default-header.component.html',\r\n-  imports: [ContainerComponent, HeaderTogglerDirective, SidebarToggleDirective, IconDirective, HeaderNavComponent, NavItemComponent, NavLinkDirective, RouterLink, RouterLinkActive, NgTemplateOutlet, BreadcrumbRouterComponent, DropdownComponent, DropdownToggleDirective, AvatarComponent, DropdownMenuDirective, DropdownHeaderDirective, DropdownItemDirective, BadgeComponent, DropdownDividerDirective, UserAvatarComponent]\r\n+  imports: [ContainerComponent, HeaderTogglerDirective, SidebarToggleDirective, IconDirective, HeaderNavComponent, NavItemComponent, NavLinkDirective, RouterLink, RouterLinkActive, NgTemplateOutlet, BreadcrumbRouterComponent, DropdownComponent, DropdownToggleDirective, AvatarComponent, DropdownMenuDirective, DropdownHeaderDirective, DropdownItemDirective, BadgeComponent, DropdownDividerDirective]\r\n })\r\n export class DefaultHeaderComponent extends HeaderComponent {\r\n \r\n   readonly #colorModeService = inject(ColorModeService);\r\n@@ -46,13 +45,9 @@\n     const currentMode = this.colorMode();\r\n     return this.colorModes.find(mode => mode.name === currentMode)?.icon ?? 'cilSun';\r\n   });\r\n \r\n-  constructor(\r\n-    private classToggler: ClassToggleService,\r\n-    private predictionService: PredictionService,\r\n-    private router: Router\r\n-  ) {\r\n+  constructor(private predictionService: PredictionService, private router: Router) {\r\n     super();\r\n   }\r\n \r\n   sidebarId = input('sidebar1');\r\n@@ -131,12 +126,8 @@\n     { id: 3, title: 'Add new layouts', value: 75, color: 'info' },\r\n     { id: 4, title: 'Angular Version', value: 100, color: 'success' }\r\n   ];\r\n \r\n-  getCurrentUsername(): string {\r\n-    return this.predictionService.getCurrentUsername() || 'User';\r\n-  }\r\n-\r\n   logout(): void {\r\n     this.predictionService.logout();\r\n     this.router.navigate(['/login']);\r\n   }\r\n"
                },
                {
                    "date": 1748187184306,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n \r\n @Component({\r\n     selector: 'app-default-header',\r\n     templateUrl: './default-header.component.html',\r\n-  imports: [ContainerComponent, HeaderTogglerDirective, SidebarToggleDirective, IconDirective, HeaderNavComponent, NavItemComponent, NavLinkDirective, RouterLink, RouterLinkActive, NgTemplateOutlet, BreadcrumbRouterComponent, DropdownComponent, DropdownToggleDirective, AvatarComponent, DropdownMenuDirective, DropdownHeaderDirective, DropdownItemDirective, BadgeComponent, DropdownDividerDirective]\r\n+  imports: [ContainerComponent, HeaderTogglerDirective, SidebarToggleDirective, IconDirective, HeaderNavComponent, NavItemComponent, NavLinkDirective, RouterLink, RouterLinkActive, NgTemplateOutlet, BreadcrumbRouterComponent, DropdownComponent, DropdownToggleDirective, AvatarComponent, DropdownMenuDirective, DropdownHeaderDirective, DropdownItemDirective, BadgeComponent, DropdownDividerDirective, UserAvatarComponent]\r\n })\r\n export class DefaultHeaderComponent extends HeaderComponent {\r\n \r\n   readonly #colorModeService = inject(ColorModeService);\r\n"
                },
                {
                    "date": 1748187197453,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,8 +23,9 @@\n } from '@coreui/angular';\r\n \r\n import { IconDirective } from '@coreui/icons-angular';\r\n import { PredictionService } from '../../../views/dashboard/prediction.service';\r\n+import { UserAvatarComponent } from '../../../components/user-avatar/user-avatar.component';\r\n \r\n @Component({\r\n     selector: 'app-default-header',\r\n     templateUrl: './default-header.component.html',\r\n@@ -130,5 +131,10 @@\n   logout(): void {\r\n     this.predictionService.logout();\r\n     this.router.navigate(['/login']);\r\n   }\r\n+\r\n+    getCurrentUsername(): string {\r\n+    return this.predictionService.getCurrentUsername() || 'User';\r\n+  }\r\n+\r\n }\r\n"
                },
                {
                    "date": 1748187210648,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -132,9 +132,9 @@\n     this.predictionService.logout();\r\n     this.router.navigate(['/login']);\r\n   }\r\n \r\n-    getCurrentUsername(): string {\r\n+  getCurrentUsername(): string {\r\n     return this.predictionService.getCurrentUsername() || 'User';\r\n   }\r\n \r\n }\r\n"
                },
                {
                    "date": 1748187248324,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -133,8 +133,9 @@\n     this.router.navigate(['/login']);\r\n   }\r\n \r\n   getCurrentUsername(): string {\r\n-    return this.predictionService.getCurrentUsername() || 'User';\r\n+    const storedUsername = localStorage.getItem('username');\r\n+    return storedUsername || this.predictionService.getCurrentUsername() || 'User';\r\n   }\r\n \r\n }\r\n"
                },
                {
                    "date": 1748187259873,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -134,8 +134,8 @@\n   }\r\n \r\n   getCurrentUsername(): string {\r\n     const storedUsername = localStorage.getItem('username');\r\n-    return storedUsername || this.predictionService.getCurrentUsername() || 'User';\r\n+    return storedUsername || this.predictionService.|| 'User';\r\n   }\r\n \r\n }\r\n"
                },
                {
                    "date": 1748187265806,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -134,8 +134,8 @@\n   }\r\n \r\n   getCurrentUsername(): string {\r\n     const storedUsername = localStorage.getItem('username');\r\n-    return storedUsername || this.predictionService.|| 'User';\r\n+    return storedUsername|| 'User';\r\n   }\r\n \r\n }\r\n"
                }
            ],
            "date": 1747829053737,
            "name": "Commit-0",
            "content": "import { NgTemplateOutlet } from '@angular/common';\r\nimport { Component, computed, inject, input } from '@angular/core';\r\nimport { RouterLink, RouterLinkActive } from '@angular/router';\r\n\r\nimport {\r\n  AvatarComponent,\r\n  BadgeComponent,\r\n  BreadcrumbRouterComponent,\r\n  ColorModeService,\r\n  ContainerComponent,\r\n  DropdownComponent,\r\n  DropdownDividerDirective,\r\n  DropdownHeaderDirective,\r\n  DropdownItemDirective,\r\n  DropdownMenuDirective,\r\n  DropdownToggleDirective,\r\n  HeaderComponent,\r\n  HeaderNavComponent,\r\n  HeaderTogglerDirective,\r\n  NavItemComponent,\r\n  NavLinkDirective,\r\n  SidebarToggleDirective\r\n} from '@coreui/angular';\r\n\r\nimport { IconDirective } from '@coreui/icons-angular';\r\n\r\n@Component({\r\n    selector: 'app-default-header',\r\n    templateUrl: './default-header.component.html',\r\n  imports: [ContainerComponent, HeaderTogglerDirective, SidebarToggleDirective, IconDirective, HeaderNavComponent, NavItemComponent, NavLinkDirective, RouterLink, RouterLinkActive, NgTemplateOutlet, BreadcrumbRouterComponent, DropdownComponent, DropdownToggleDirective, AvatarComponent, DropdownMenuDirective, DropdownHeaderDirective, DropdownItemDirective, BadgeComponent, DropdownDividerDirective]\r\n})\r\nexport class DefaultHeaderComponent extends HeaderComponent {\r\n\r\n  readonly #colorModeService = inject(ColorModeService);\r\n  readonly colorMode = this.#colorModeService.colorMode;\r\n\r\n  readonly colorModes = [\r\n    { name: 'light', text: 'Light', icon: 'cilSun' },\r\n    { name: 'dark', text: 'Dark', icon: 'cilMoon' },\r\n    { name: 'auto', text: 'Auto', icon: 'cilContrast' }\r\n  ];\r\n\r\n  readonly icons = computed(() => {\r\n    const currentMode = this.colorMode();\r\n    return this.colorModes.find(mode => mode.name === currentMode)?.icon ?? 'cilSun';\r\n  });\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  sidebarId = input('sidebar1');\r\n\r\n  public newMessages = [\r\n    {\r\n      id: 0,\r\n      from: 'Jessica Williams',\r\n      avatar: '7.jpg',\r\n      status: 'success',\r\n      title: 'Urgent: System Maintenance Tonight',\r\n      time: 'Just now',\r\n      link: 'apps/email/inbox/message',\r\n      message: 'Attention team, we\\'ll be conducting critical system maintenance tonight from 10 PM to 2 AM. Plan accordingly...'\r\n    },\r\n    {\r\n      id: 1,\r\n      from: 'Richard Johnson',\r\n      avatar: '6.jpg',\r\n      status: 'warning',\r\n      title: 'Project Update: Milestone Achieved',\r\n      time: '5 minutes ago',\r\n      link: 'apps/email/inbox/message',\r\n      message: 'Kudos on hitting sales targets last quarter! Let\\'s keep the momentum. New goals, new victories ahead...'\r\n    },\r\n    {\r\n      id: 2,\r\n      from: 'Angela Rodriguez',\r\n      avatar: '5.jpg',\r\n      status: 'danger',\r\n      title: 'Social Media Campaign Launch',\r\n      time: '1:52 PM',\r\n      link: 'apps/email/inbox/message',\r\n      message: 'Exciting news! Our new social media campaign goes live tomorrow. Brace yourselves for engagement...'\r\n    },\r\n    {\r\n      id: 3,\r\n      from: 'Jane Lewis',\r\n      avatar: '4.jpg',\r\n      status: 'info',\r\n      title: 'Inventory Checkpoint',\r\n      time: '4:03 AM',\r\n      link: 'apps/email/inbox/message',\r\n      message: 'Team, it\\'s time for our monthly inventory check. Accurate counts ensure smooth operations. Let\\'s nail it...'\r\n    },\r\n    {\r\n      id: 3,\r\n      from: 'Ryan Miller',\r\n      avatar: '4.jpg',\r\n      status: 'info',\r\n      title: 'Customer Feedback Results',\r\n      time: '3 days ago',\r\n      link: 'apps/email/inbox/message',\r\n      message: 'Our latest customer feedback is in. Let\\'s analyze and discuss improvements for an even better service...'\r\n    }\r\n  ];\r\n\r\n  public newNotifications = [\r\n    { id: 0, title: 'New user registered', icon: 'cilUserFollow', color: 'success' },\r\n    { id: 1, title: 'User deleted', icon: 'cilUserUnfollow', color: 'danger' },\r\n    { id: 2, title: 'Sales report is ready', icon: 'cilChartPie', color: 'info' },\r\n    { id: 3, title: 'New client', icon: 'cilBasket', color: 'primary' },\r\n    { id: 4, title: 'Server overloaded', icon: 'cilSpeedometer', color: 'warning' }\r\n  ];\r\n\r\n  public newStatus = [\r\n    { id: 0, title: 'CPU Usage', value: 25, color: 'info', details: '348 Processes. 1/4 Cores.' },\r\n    { id: 1, title: 'Memory Usage', value: 70, color: 'warning', details: '11444GB/16384MB' },\r\n    { id: 2, title: 'SSD 1 Usage', value: 90, color: 'danger', details: '243GB/256GB' }\r\n  ];\r\n\r\n  public newTasks = [\r\n    { id: 0, title: 'Upgrade NPM', value: 0, color: 'info' },\r\n    { id: 1, title: 'ReactJS Version', value: 25, color: 'danger' },\r\n    { id: 2, title: 'VueJS Version', value: 50, color: 'warning' },\r\n    { id: 3, title: 'Add new layouts', value: 75, color: 'info' },\r\n    { id: 4, title: 'Angular Version', value: 100, color: 'success' }\r\n  ];\r\n\r\n}\r\n"
        }
    ]
}