{
    "sourceFile": "Frontend/src/app/views/dashboard/dashboard.component.html",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 61,
            "patches": [
                {
                    "date": 1747820736092,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1747823201181,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,14 +32,13 @@\n                         <textarea cFormControl id=\"exampleFormControlTextarea1\" rows=\"3\" \r\n                                   formControlName=\"textInput\"></textarea>\r\n                       </div>\r\n                       <div class=\"d-flex justify-content-end\">\r\n-                        <button cButton color=\"primary\" type=\"button\" (click)=\"predictSingleText()\"\r\n-                                [disabled]=\"!singlePredictionForm.valid || isProcessingSinglePrediction\">\r\n-                          <span *ngIf=\"isProcessingSinglePrediction\" class=\"spinner-border spinner-border-sm me-1\" role=\"status\"></span>\r\n-                          {{ isProcessingSinglePrediction ? 'Processing...' : 'Predict' }}\r\n-                        </button>\r\n-                      </div>\r\n+<button cButton color=\"primary\" type=\"button\" (click)=\"predictSingleText()\"\r\n+      [disabled]=\"!singlePredictionForm.valid || isProcessingSinglePrediction\">\r\n+  <span *ngIf=\"isProcessingSinglePrediction\" class=\"spinner-border spinner-border-sm me-1\" role=\"status\"></span>\r\n+  {{ isProcessingSinglePrediction ? 'Processing...' : 'Predict' }}\r\n+</button>                      </div>\r\n                     </form>\r\n                   </c-card-body>\r\n                 </c-card>\r\n                 \r\n"
                },
                {
                    "date": 1747823206625,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,13 +32,14 @@\n                         <textarea cFormControl id=\"exampleFormControlTextarea1\" rows=\"3\" \r\n                                   formControlName=\"textInput\"></textarea>\r\n                       </div>\r\n                       <div class=\"d-flex justify-content-end\">\r\n-<button cButton color=\"primary\" type=\"button\" (click)=\"predictSingleText()\"\r\n-      [disabled]=\"!singlePredictionForm.valid || isProcessingSinglePrediction\">\r\n-  <span *ngIf=\"isProcessingSinglePrediction\" class=\"spinner-border spinner-border-sm me-1\" role=\"status\"></span>\r\n-  {{ isProcessingSinglePrediction ? 'Processing...' : 'Predict' }}\r\n-</button>                      </div>\r\n+                        <button cButton color=\"primary\" type=\"button\" (click)=\"predictSingleText()\"\r\n+                              [disabled]=\"!singlePredictionForm.valid || isProcessingSinglePrediction\">\r\n+                          <span *ngIf=\"isProcessingSinglePrediction\" class=\"spinner-border spinner-border-sm me-1\" role=\"status\"></span>\r\n+                          {{ isProcessingSinglePrediction ? 'Processing...' : 'Predict' }}\r\n+                        </button>\r\n+                      </div>\r\n                     </form>\r\n                   </c-card-body>\r\n                 </c-card>\r\n                 \r\n"
                },
                {
                    "date": 1747824437040,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,14 +32,16 @@\n                         <textarea cFormControl id=\"exampleFormControlTextarea1\" rows=\"3\" \r\n                                   formControlName=\"textInput\"></textarea>\r\n                       </div>\r\n                       <div class=\"d-flex justify-content-end\">\r\n-                        <button cButton color=\"primary\" type=\"button\" (click)=\"predictSingleText()\"\r\n-                              [disabled]=\"!singlePredictionForm.valid || isProcessingSinglePrediction\">\r\n-                          <span *ngIf=\"isProcessingSinglePrediction\" class=\"spinner-border spinner-border-sm me-1\" role=\"status\"></span>\r\n-                          {{ isProcessingSinglePrediction ? 'Processing...' : 'Predict' }}\r\n-                        </button>\r\n-                      </div>\r\n+<button \r\n+  cButton \r\n+  color=\"primary\" \r\n+  type=\"button\" \r\n+  (click)=\"console.log('[DEBUG] Predict button clicked'); predictSingleText()\"\r\n+  [disabled]=\"!singlePredictionForm.valid || isProcessingSinglePrediction\">\r\n+  Predict\r\n+</button>                      </div>\r\n                     </form>\r\n                   </c-card-body>\r\n                 </c-card>\r\n                 \r\n"
                },
                {
                    "date": 1747824443377,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,16 +32,17 @@\n                         <textarea cFormControl id=\"exampleFormControlTextarea1\" rows=\"3\" \r\n                                   formControlName=\"textInput\"></textarea>\r\n                       </div>\r\n                       <div class=\"d-flex justify-content-end\">\r\n-<button \r\n-  cButton \r\n-  color=\"primary\" \r\n-  type=\"button\" \r\n-  (click)=\"console.log('[DEBUG] Predict button clicked'); predictSingleText()\"\r\n-  [disabled]=\"!singlePredictionForm.valid || isProcessingSinglePrediction\">\r\n-  Predict\r\n-</button>                      </div>\r\n+                        <button \r\n+                          cButton \r\n+                          color=\"primary\" \r\n+                          type=\"button\" \r\n+                          (click)=\"console.log('[DEBUG] Predict button clicked'); predictSingleText()\"\r\n+                          [disabled]=\"!singlePredictionForm.valid || isProcessingSinglePrediction\">\r\n+                          Predict\r\n+                        </button>\r\n+                      </div>\r\n                     </form>\r\n                   </c-card-body>\r\n                 </c-card>\r\n                 \r\n"
                },
                {
                    "date": 1747824467708,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n                         <button \r\n                           cButton \r\n                           color=\"primary\" \r\n                           type=\"button\" \r\n-                          (click)=\"console.log('[DEBUG] Predict button clicked'); predictSingleText()\"\r\n+                          (click)=\"predictSingleText()\"\r\n                           [disabled]=\"!singlePredictionForm.valid || isProcessingSinglePrediction\">\r\n                           Predict\r\n                         </button>\r\n                       </div>\r\n"
                },
                {
                    "date": 1747826560880,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,23 +1,28 @@\n <div class=\"dashboard-container\">\r\n   <c-card class=\"mx-auto\" style=\"max-width: 90%; width: 90%;\">\r\n     <c-card-body>\r\n       <c-card>\r\n-        <c-card-header>\r\n-          <c-nav layout=\"justified\" variant=\"pills\">\r\n-            <c-nav-item>\r\n-              <a [active]=\"activeTab === 'single'\" cNavLink (click)=\"activeTab = 'single'\">\r\n-                Single Line Prediction\r\n-              </a>\r\n-            </c-nav-item>\r\n-            <c-nav-item>\r\n-              <a [active]=\"activeTab === 'bulk'\" cNavLink (click)=\"activeTab = 'bulk'\">\r\n-                Bulk Prediction\r\n-              </a>\r\n-            </c-nav-item>\r\n-          </c-nav>\r\n-        </c-card-header>\r\n-        <c-card-body>\r\n+<c-card-header>\r\n+  <c-nav layout=\"justified\" variant=\"pills\">\r\n+    <c-nav-item>\r\n+      <a [routerLink]=\"['/dashboard/single']\" \r\n+         routerLinkActive=\"active\" \r\n+         [active]=\"activeTab === 'single'\" \r\n+         cNavLink>\r\n+        Single Line Prediction\r\n+      </a>\r\n+    </c-nav-item>\r\n+    <c-nav-item>\r\n+      <a [routerLink]=\"['/dashboard/bulk']\" \r\n+         routerLinkActive=\"active\" \r\n+         [active]=\"activeTab === 'bulk'\" \r\n+         cNavLink>\r\n+        Bulk Prediction\r\n+      </a>\r\n+    </c-nav-item>\r\n+  </c-nav>\r\n+</c-card-header>        <c-card-body>\r\n           <!-- Single Line Prediction Content -->\r\n           <div *ngIf=\"activeTab === 'single'\">\r\n             <c-row>\r\n               <c-col xs=\"12\" md=\"6\">\r\n"
                },
                {
                    "date": 1747826567035,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,28 +1,29 @@\n <div class=\"dashboard-container\">\r\n   <c-card class=\"mx-auto\" style=\"max-width: 90%; width: 90%;\">\r\n     <c-card-body>\r\n       <c-card>\r\n-<c-card-header>\r\n-  <c-nav layout=\"justified\" variant=\"pills\">\r\n-    <c-nav-item>\r\n-      <a [routerLink]=\"['/dashboard/single']\" \r\n-         routerLinkActive=\"active\" \r\n-         [active]=\"activeTab === 'single'\" \r\n-         cNavLink>\r\n-        Single Line Prediction\r\n-      </a>\r\n-    </c-nav-item>\r\n-    <c-nav-item>\r\n-      <a [routerLink]=\"['/dashboard/bulk']\" \r\n-         routerLinkActive=\"active\" \r\n-         [active]=\"activeTab === 'bulk'\" \r\n-         cNavLink>\r\n-        Bulk Prediction\r\n-      </a>\r\n-    </c-nav-item>\r\n-  </c-nav>\r\n-</c-card-header>        <c-card-body>\r\n+        <c-card-header>\r\n+          <c-nav layout=\"justified\" variant=\"pills\">\r\n+            <c-nav-item>\r\n+              <a [routerLink]=\"['/dashboard/single']\" \r\n+                routerLinkActive=\"active\" \r\n+                [active]=\"activeTab === 'single'\" \r\n+                cNavLink>\r\n+                Single Line Prediction\r\n+              </a>\r\n+            </c-nav-item>\r\n+            <c-nav-item>\r\n+              <a [routerLink]=\"['/dashboard/bulk']\" \r\n+                routerLinkActive=\"active\" \r\n+                [active]=\"activeTab === 'bulk'\" \r\n+                cNavLink>\r\n+                Bulk Prediction\r\n+              </a>\r\n+            </c-nav-item>\r\n+          </c-nav>\r\n+        </c-card-header>\r\n+        <c-card-body>\r\n           <!-- Single Line Prediction Content -->\r\n           <div *ngIf=\"activeTab === 'single'\">\r\n             <c-row>\r\n               <c-col xs=\"12\" md=\"6\">\r\n"
                },
                {
                    "date": 1747827292481,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,29 +1,26 @@\n <div class=\"dashboard-container\">\r\n   <c-card class=\"mx-auto\" style=\"max-width: 90%; width: 90%;\">\r\n     <c-card-body>\r\n       <c-card>\r\n-        <c-card-header>\r\n-          <c-nav layout=\"justified\" variant=\"pills\">\r\n-            <c-nav-item>\r\n-              <a [routerLink]=\"['/dashboard/single']\" \r\n-                routerLinkActive=\"active\" \r\n-                [active]=\"activeTab === 'single'\" \r\n-                cNavLink>\r\n-                Single Line Prediction\r\n-              </a>\r\n-            </c-nav-item>\r\n-            <c-nav-item>\r\n-              <a [routerLink]=\"['/dashboard/bulk']\" \r\n-                routerLinkActive=\"active\" \r\n-                [active]=\"activeTab === 'bulk'\" \r\n-                cNavLink>\r\n-                Bulk Prediction\r\n-              </a>\r\n-            </c-nav-item>\r\n-          </c-nav>\r\n-        </c-card-header>\r\n-        <c-card-body>\r\n+<c-card-header>\r\n+  <c-nav layout=\"justified\" variant=\"pills\">\r\n+    <c-nav-item>\r\n+      <a cNavLink \r\n+         [active]=\"activeTab === 'single'\" \r\n+         (click)=\"switchTab('single')\">\r\n+        Single Line Prediction\r\n+      </a>\r\n+    </c-nav-item>\r\n+    <c-nav-item>\r\n+      <a cNavLink \r\n+         [active]=\"activeTab === 'bulk'\" \r\n+         (click)=\"switchTab('bulk')\">\r\n+        Bulk Prediction\r\n+      </a>\r\n+    </c-nav-item>\r\n+  </c-nav>\r\n+</c-card-header>        <c-card-body>\r\n           <!-- Single Line Prediction Content -->\r\n           <div *ngIf=\"activeTab === 'single'\">\r\n             <c-row>\r\n               <c-col xs=\"12\" md=\"6\">\r\n"
                },
                {
                    "date": 1747827297727,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,10 @@\n         Bulk Prediction\r\n       </a>\r\n     </c-nav-item>\r\n   </c-nav>\r\n-</c-card-header>        <c-card-body>\r\n+</c-card-header>\r\n+        <c-card-body>\r\n           <!-- Single Line Prediction Content -->\r\n           <div *ngIf=\"activeTab === 'single'\">\r\n             <c-row>\r\n               <c-col xs=\"12\" md=\"6\">\r\n"
                },
                {
                    "date": 1747827939230,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,26 +1,30 @@\n <div class=\"dashboard-container\">\r\n   <c-card class=\"mx-auto\" style=\"max-width: 90%; width: 90%;\">\r\n     <c-card-body>\r\n       <c-card>\r\n-<c-card-header>\r\n-  <c-nav layout=\"justified\" variant=\"pills\">\r\n-    <c-nav-item>\r\n-      <a cNavLink \r\n-         [active]=\"activeTab === 'single'\" \r\n-         (click)=\"switchTab('single')\">\r\n-        Single Line Prediction\r\n-      </a>\r\n-    </c-nav-item>\r\n-    <c-nav-item>\r\n-      <a cNavLink \r\n-         [active]=\"activeTab === 'bulk'\" \r\n-         (click)=\"switchTab('bulk')\">\r\n-        Bulk Prediction\r\n-      </a>\r\n-    </c-nav-item>\r\n-  </c-nav>\r\n-</c-card-header>\r\n+        <c-card-header>\r\n+          <c-nav layout=\"justified\" variant=\"pills\">\r\n+            <c-nav-item>\r\n+              <a cNavLink \r\n+                 [active]=\"activeTab === 'single'\" \r\n+                 (click)=\"switchTab('single')\"\r\n+                 [routerLink]=\"['/dashboard/single']\"\r\n+                 routerLinkActive=\"active\">\r\n+                Single Line Prediction\r\n+              </a>\r\n+            </c-nav-item>\r\n+            <c-nav-item>\r\n+              <a cNavLink \r\n+                 [active]=\"activeTab === 'bulk'\" \r\n+                 (click)=\"switchTab('bulk')\"\r\n+                 [routerLink]=\"['/dashboard/bulk']\"\r\n+                 routerLinkActive=\"active\">\r\n+                Bulk Prediction\r\n+              </a>\r\n+            </c-nav-item>\r\n+          </c-nav>\r\n+        </c-card-header>\r\n         <c-card-body>\r\n           <!-- Single Line Prediction Content -->\r\n           <div *ngIf=\"activeTab === 'single'\">\r\n             <c-row>\r\n"
                },
                {
                    "date": 1747832631060,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,31 +1,28 @@\n <div class=\"dashboard-container\">\r\n   <c-card class=\"mx-auto\" style=\"max-width: 90%; width: 90%;\">\r\n     <c-card-body>\r\n       <c-card>\r\n-        <c-card-header>\r\n-          <c-nav layout=\"justified\" variant=\"pills\">\r\n-            <c-nav-item>\r\n-              <a cNavLink \r\n-                 [active]=\"activeTab === 'single'\" \r\n-                 (click)=\"switchTab('single')\"\r\n-                 [routerLink]=\"['/dashboard/single']\"\r\n-                 routerLinkActive=\"active\">\r\n-                Single Line Prediction\r\n-              </a>\r\n-            </c-nav-item>\r\n-            <c-nav-item>\r\n-              <a cNavLink \r\n-                 [active]=\"activeTab === 'bulk'\" \r\n-                 (click)=\"switchTab('bulk')\"\r\n-                 [routerLink]=\"['/dashboard/bulk']\"\r\n-                 routerLinkActive=\"active\">\r\n-                Bulk Prediction\r\n-              </a>\r\n-            </c-nav-item>\r\n-          </c-nav>\r\n-        </c-card-header>\r\n-        <c-card-body>\r\n+<c-card-header>\r\n+  <c-nav layout=\"justified\" variant=\"pills\">\r\n+    <c-nav-item>\r\n+      <a cNavLink \r\n+         [active]=\"activeTab === 'single'\" \r\n+         (click)=\"switchTab('single')\"\r\n+         style=\"cursor: pointer;\">\r\n+        Single Line Prediction\r\n+      </a>\r\n+    </c-nav-item>\r\n+    <c-nav-item>\r\n+      <a cNavLink \r\n+         [active]=\"activeTab === 'bulk'\" \r\n+         (click)=\"switchTab('bulk')\"\r\n+         style=\"cursor: pointer;\">\r\n+        Bulk Prediction\r\n+      </a>\r\n+    </c-nav-item>\r\n+  </c-nav>\r\n+</c-card-header>        <c-card-body>\r\n           <!-- Single Line Prediction Content -->\r\n           <div *ngIf=\"activeTab === 'single'\">\r\n             <c-row>\r\n               <c-col xs=\"12\" md=\"6\">\r\n"
                },
                {
                    "date": 1747841836409,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,28 +1,31 @@\n <div class=\"dashboard-container\">\r\n   <c-card class=\"mx-auto\" style=\"max-width: 90%; width: 90%;\">\r\n     <c-card-body>\r\n       <c-card>\r\n-<c-card-header>\r\n-  <c-nav layout=\"justified\" variant=\"pills\">\r\n-    <c-nav-item>\r\n-      <a cNavLink \r\n-         [active]=\"activeTab === 'single'\" \r\n-         (click)=\"switchTab('single')\"\r\n-         style=\"cursor: pointer;\">\r\n-        Single Line Prediction\r\n-      </a>\r\n-    </c-nav-item>\r\n-    <c-nav-item>\r\n-      <a cNavLink \r\n-         [active]=\"activeTab === 'bulk'\" \r\n-         (click)=\"switchTab('bulk')\"\r\n-         style=\"cursor: pointer;\">\r\n-        Bulk Prediction\r\n-      </a>\r\n-    </c-nav-item>\r\n-  </c-nav>\r\n-</c-card-header>        <c-card-body>\r\n+        <!-- Update the tab navigation in the header -->\r\n+        <c-card-header>\r\n+          <c-nav layout=\"justified\" variant=\"pills\">\r\n+            <c-nav-item>\r\n+              <a cNavLink \r\n+                 [active]=\"activeTab === 'single'\" \r\n+                 (click)=\"switchTab('single')\"\r\n+                 style=\"cursor: pointer;\">\r\n+                Single Line Prediction\r\n+              </a>\r\n+            </c-nav-item>\r\n+            <c-nav-item>\r\n+              <a cNavLink \r\n+                 [active]=\"activeTab === 'bulk'\" \r\n+                 (click)=\"switchTab('bulk')\"\r\n+                 style=\"cursor: pointer;\">\r\n+                Bulk Prediction\r\n+                <span *ngIf=\"!hasBulkAccess\" class=\"badge bg-secondary ms-1\">PRO</span>\r\n+              </a>\r\n+            </c-nav-item>\r\n+          </c-nav>\r\n+        </c-card-header>\r\n+        <c-card-body>\r\n           <!-- Single Line Prediction Content -->\r\n           <div *ngIf=\"activeTab === 'single'\">\r\n             <c-row>\r\n               <c-col xs=\"12\" md=\"6\">\r\n@@ -159,8 +162,22 @@\n             </c-row>\r\n           </div>\r\n           <!-- Bulk Prediction Content -->\r\n           <div *ngIf=\"activeTab === 'bulk'\">\r\n+            <!-- Add a banner at the top of bulk tab to upgrade -->\r\n+            <div *ngIf=\"activeTab === 'bulk' && !hasBulkAccess\">\r\n+              <c-alert color=\"warning\" class=\"d-flex align-items-center\">\r\n+                <svg cIcon name=\"cilLockLocked\" width=\"24\" height=\"24\" class=\"me-2\"></svg>\r\n+                <div>\r\n+                  <strong>Pro Subscription Required</strong>\r\n+                  <p class=\"mb-0\">\r\n+                    Bulk CSV prediction requires a Pro subscription. \r\n+                    <a routerLink=\"/subscription\" cButton color=\"warning\" size=\"sm\" class=\"ms-2\">Upgrade Now</a>\r\n+                  </p>\r\n+                </div>\r\n+              </c-alert>\r\n+            </div>\r\n+\r\n             <c-row>\r\n               <!-- Left Column: CSV Data Visualization -->\r\n               <c-col md=\"8\">\r\n                 <!-- CSV Data Visualization (file upload card moved to right column) -->\r\n"
                },
                {
                    "date": 1747850112347,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -161,295 +161,244 @@\n               </c-col>\r\n             </c-row>\r\n           </div>\r\n           <!-- Bulk Prediction Content -->\r\n-          <div *ngIf=\"activeTab === 'bulk'\">\r\n-            <!-- Add a banner at the top of bulk tab to upgrade -->\r\n-            <div *ngIf=\"activeTab === 'bulk' && !hasBulkAccess\">\r\n-              <c-alert color=\"warning\" class=\"d-flex align-items-center\">\r\n-                <svg cIcon name=\"cilLockLocked\" width=\"24\" height=\"24\" class=\"me-2\"></svg>\r\n-                <div>\r\n-                  <strong>Pro Subscription Required</strong>\r\n-                  <p class=\"mb-0\">\r\n-                    Bulk CSV prediction requires a Pro subscription. \r\n-                    <a routerLink=\"/subscription\" cButton color=\"warning\" size=\"sm\" class=\"ms-2\">Upgrade Now</a>\r\n-                  </p>\r\n-                </div>\r\n-              </c-alert>\r\n-            </div>\r\n+          <div *ngIf=\"activeTab === 'bulk'\" class=\"premium-content-container\">\r\n+            <!-- PRO Badge in the corner -->\r\n+            <div class=\"premium-tag\" *ngIf=\"!hasBulkAccess\">PRO</div>\r\n \r\n-            <c-row>\r\n-              <!-- Left Column: CSV Data Visualization -->\r\n-              <c-col md=\"8\">\r\n-                <!-- CSV Data Visualization (file upload card moved to right column) -->\r\n-                <c-card>\r\n-                  <c-card-header>\r\n-                    <c-nav variant=\"tabs\">\r\n-                      <c-nav-item *ngFor=\"let csvFile of csvFiles\">\r\n-                        <a [active]=\"activeCsvFile === csvFile.id\" \r\n-                          cNavLink \r\n-                          class=\"d-flex align-items-center\"\r\n-                          (click)=\"selectCsvFile(csvFile.id)\">\r\n-                          {{ csvFile.name }}\r\n-                          <!-- Delete button -->\r\n-                          <button \r\n-                            *ngIf=\"!csvFile.isDefault\"\r\n-                            cButton \r\n-                            color=\"danger\" \r\n-                            size=\"sm\" \r\n-                            variant=\"ghost\"\r\n-                            class=\"ms-2 p-0 px-1\"\r\n-                            style=\"line-height: 1;\"\r\n-                            title=\"Remove file\"\r\n-                            (click)=\"deleteCsvFile(csvFile.id, $event)\">\r\n-                            <span>&times;</span>\r\n-                          </button>\r\n-                        </a>\r\n-                      </c-nav-item>\r\n-                    </c-nav>\r\n-                  </c-card-header>\r\n-                  <c-card-body *ngIf=\"currentCsvFile\">\r\n-                    <!-- Radar Chart -->\r\n-                    <c-card class=\"mb-4\">\r\n-                      <c-card-header>\r\n-                        <strong>{{ currentCsvFile.name }} - Radar Chart</strong>\r\n-                      </c-card-header>\r\n-                      <c-card-body>\r\n-                        <c-chart type=\"radar\" \r\n-                                [data]=\"currentCsvFile.chartData\" \r\n-                                [options]=\"options\" />\r\n-                      </c-card-body>\r\n-                    </c-card>\r\n+            <!-- Content will be blurred if no access -->\r\n+            <div [class.premium-content-blur]=\"!hasBulkAccess\">\r\n+              <c-row>\r\n+                <!-- Left Column: CSV Data Visualization -->\r\n+                <c-col md=\"8\">\r\n+                  <!-- CSV Data Visualization -->\r\n+                  <c-card>\r\n+                    <c-card-header>\r\n+                      <c-nav variant=\"tabs\">\r\n+                        <c-nav-item *ngFor=\"let csvFile of csvFiles\">\r\n+                          <a [active]=\"activeCsvFile === csvFile.id\" \r\n+                             cNavLink \r\n+                             class=\"d-flex align-items-center\"\r\n+                             (click)=\"selectCsvFile(csvFile.id)\">\r\n+                            {{ csvFile.name }}\r\n+                            <!-- Delete button -->\r\n+                            <button \r\n+                              *ngIf=\"!csvFile.isDefault\"\r\n+                              cButton \r\n+                              color=\"danger\" \r\n+                              size=\"sm\" \r\n+                              variant=\"ghost\"\r\n+                              class=\"ms-2 p-0 px-1\"\r\n+                              style=\"line-height: 1;\"\r\n+                              (click)=\"deleteCsvFile(csvFile.id, $event)\">\r\n+                              &times;\r\n+                            </button>\r\n+                          </a>\r\n+                        </c-nav-item>\r\n+                      </c-nav>\r\n+                    </c-card-header>\r\n+                    <c-card-body *ngIf=\"currentCsvFile\">\r\n+                      <!-- Radar Chart -->\r\n+                      <c-card class=\"mb-4\">\r\n+                        <c-card-header>\r\n+                          <strong>{{ currentCsvFile.name }} - Radar Chart</strong>\r\n+                        </c-card-header>\r\n+                        <c-card-body>\r\n+                          <c-chart type=\"radar\" \r\n+                                  [data]=\"currentCsvFile.chartData\" \r\n+                                  [options]=\"options\" />\r\n+                        </c-card-body>\r\n+                      </c-card>\r\n \r\n-                    <c-card>\r\n-                      <c-card-header>\r\n-                        <strong>{{ currentCsvFile.name }} - Data</strong>\r\n-                      </c-card-header>\r\n-                      <c-card-body>\r\n-                        <div class=\"table-responsive\" style=\"max-height: 450px; overflow-y: auto;\">\r\n-                          <table cTable hover>\r\n-                            <thead>\r\n-                              <tr>\r\n-                                <th *ngFor=\"let header of getHeaders(currentCsvFile.data[0])\">\r\n-                                  {{ header }}\r\n-                                </th>\r\n-                              </tr>\r\n-                            </thead>\r\n-                            <tbody>\r\n-                              <tr *ngFor=\"let row of getPaginatedData(currentCsvFile.data, currentPage, pageSize)\">\r\n-                                <ng-container *ngFor=\"let header of getHeaders(currentCsvFile.data[0])\">\r\n-                                  <td *ngIf=\"header !== 'categories'; else categoriesCell\">\r\n-                                    <!-- Special handling for different data types -->\r\n-                                    <ng-container *ngIf=\"header === 'Confidence'; else regularContent\">\r\n-                                      {{ row[header] }}%\r\n-                                    </ng-container>\r\n-                                    <ng-template #regularContent>\r\n-                                      {{ row[header] }}\r\n-                                    </ng-template>\r\n-                                  </td>\r\n-                                  \r\n-                                  <ng-template #categoriesCell>\r\n-                                    <td>\r\n-                                      <!-- Display categories as a tooltip or formatted text -->\r\n-                                      <div class=\"categories-summary\" [title]=\"formatCategoriesForTooltip(row[header])\">\r\n-                                        <span class=\"badge\" *ngFor=\"let cat of row[header].slice(0, 2)\" \r\n-                                              [style.background-color]=\"getCategoryColor(cat.name)\"\r\n-                                              style=\"margin-right: 3px; font-size: 0.7rem;\">\r\n+                      <c-card>\r\n+                        <c-card-header>\r\n+                          <strong>{{ currentCsvFile.name }} - Data</strong>\r\n+                        </c-card-header>\r\n+                        <c-card-body>\r\n+                          <div class=\"table-responsive\" style=\"max-height: 450px; overflow-y: auto;\">\r\n+                            <table cTable hover>\r\n+                              <thead>\r\n+                                <tr>\r\n+                                  <th *ngFor=\"let header of getHeaders(currentCsvFile.data[0])\">\r\n+                                    {{ header }}\r\n+                                  </th>\r\n+                                </tr>\r\n+                              </thead>\r\n+                              <tbody>\r\n+                                <tr *ngFor=\"let row of getPaginatedData(currentCsvFile.data, currentPage, pageSize)\">\r\n+                                  <ng-container *ngFor=\"let header of getHeaders(currentCsvFile.data[0])\">\r\n+                                    <td *ngIf=\"header !== 'categories'; else categoriesCell\">\r\n+                                      <!-- Special handling for different data types -->\r\n+                                      <ng-container *ngIf=\"header === 'Confidence'; else regularContent\">\r\n+                                        {{ row[header] }}%\r\n+                                      </ng-container>\r\n+                                      <ng-template #regularContent>\r\n+                                        {{ row[header] }}\r\n+                                      </ng-template>\r\n+                                    </td>\r\n+                                    \r\n+                                    <ng-template #categoriesCell>\r\n+                                      <td>\r\n+                                        <!-- Display categories as a tooltip or formatted text -->\r\n+                                        <div class=\"categories-summary\" [title]=\"formatCategoriesForTooltip(row[header])\">\r\n+                                          <span class=\"badge\" *ngFor=\"let cat of row[header].slice(0, 2)\" \r\n+                                                [style.background-color]=\"getCategoryColor(cat.name)\"\r\n+                                                style=\"margin-right: 3px; font-size: 0.7rem;\">\r\n                                           {{ cat.name }}: {{ cat.value }}%\r\n+                                          </span>\r\n+                                          <span *ngIf=\"row[header].length > 2\" style=\"font-size: 0.7rem;\">\r\n+                                            +{{ row[header].length - 2 }} more\r\n+                                          </span>\r\n+                                        </div>\r\n+                                      </td>\r\n+                                      <td>\r\n+                                        <span class=\"badge rounded-pill bg-primary\" (click)=\"showCategoriesModal(row[header])\" style=\"cursor: pointer;\">\r\n+                                          View Details\r\n                                         </span>\r\n-                                        <span *ngIf=\"row[header].length > 2\" style=\"font-size: 0.7rem;\">\r\n-                                          +{{ row[header].length - 2 }} more\r\n-                                        </span>\r\n-                                      </div>\r\n-                                    </td>\r\n-                                    <td>\r\n-                                      <span class=\"badge rounded-pill bg-primary\" (click)=\"showCategoriesModal(row[header])\" style=\"cursor: pointer;\">\r\n-                                        View Details\r\n-                                      </span>\r\n-                                    </td>\r\n-                                  </ng-template>\r\n-                                </ng-container>\r\n-                              </tr>                            \r\n-                            </tbody>\r\n-                          </table>\r\n-                        </div> \r\n-                        <!-- Pagination controls -->\r\n-                        <div class=\"d-flex justify-content-between align-items-center mt-3\">\r\n-                          <div>\r\n-                            <small class=\"text-muted\">\r\n-                              Showing {{ currentPage * pageSize + 1 }} to \r\n-                              {{ Math.min((currentPage + 1) * pageSize, currentCsvFile.data.length) }} of \r\n-                              {{ currentCsvFile.data.length }} rows\r\n-                            </small>\r\n-                          </div>\r\n-                          <c-pagination aria-label=\"Data table pages\" size=\"sm\">\r\n-                            <c-page-item [disabled]=\"currentPage === 0\">\r\n-                              <a cPageLink (click)=\"changePage(0, 'bulk')\" style=\"cursor: pointer;\">First</a>\r\n-                            </c-page-item>\r\n-                            <c-page-item [disabled]=\"currentPage === 0\">\r\n-                              <a cPageLink (click)=\"changePage(currentPage - 1, 'bulk')\" style=\"cursor: pointer;\">\r\n-                                <span aria-hidden=\"true\">&laquo;</span>\r\n-                              </a>\r\n-                            </c-page-item>\r\n+                                      </td>\r\n+                                    </ng-template>\r\n+                                  </ng-container>\r\n+                                </tr>                            \r\n+                              </tbody>\r\n+                            </table>\r\n+                          </div> \r\n+                          <!-- Pagination controls -->\r\n+                          <div class=\"d-flex justify-content-between align-items-center mt-3\">\r\n+                            <div>\r\n+                              <small class=\"text-muted\">\r\n+                                Showing {{ currentPage * pageSize + 1 }} to \r\n+                                {{ Math.min((currentPage + 1) * pageSize, currentCsvFile.data.length) }} of \r\n+                                {{ currentCsvFile.data.length }} rows\r\n+                              </small>\r\n+                            </div>\r\n+                            <c-pagination aria-label=\"Data table pages\" size=\"sm\">\r\n+                              <c-page-item [disabled]=\"currentPage === 0\">\r\n+                                <a cPageLink (click)=\"changePage(0, 'bulk')\" style=\"cursor: pointer;\">First</a>\r\n+                              </c-page-item>\r\n+                              <c-page-item [disabled]=\"currentPage === 0\">\r\n+                                <a cPageLink (click)=\"changePage(currentPage - 1, 'bulk')\" style=\"cursor: pointer;\">\r\n+                                  <span aria-hidden=\"true\">&laquo;</span>\r\n+                                </a>\r\n+                              </c-page-item>\r\n+                              \r\n+                              <c-page-item *ngFor=\"let page of getVisiblePageNumbers(currentCsvFile.data.length, pageSize, currentPage)\" \r\n+                                          [active]=\"currentPage === page\">\r\n+                                <a cPageLink (click)=\"changePage(page, 'bulk')\" style=\"cursor: pointer;\">\r\n+                                  {{ page + 1 }}\r\n+                                </a>\r\n+                              </c-page-item>\r\n+                              \r\n+                              <c-page-item [disabled]=\"currentPage >= Math.ceil(currentCsvFile.data.length / pageSize) - 1\">\r\n+                                <a cPageLink (click)=\"changePage(currentPage + 1, 'bulk')\" style=\"cursor: pointer;\">\r\n+                                  <span aria-hidden=\"true\">&raquo;</span>\r\n+                                </a>\r\n+                              </c-page-item>\r\n+                              <c-page-item [disabled]=\"currentPage >= Math.ceil(currentCsvFile.data.length / pageSize) - 1\">\r\n+                                <a cPageLink (click)=\"changePage(Math.ceil(currentCsvFile.data.length / pageSize) - 1, 'bulk')\" style=\"cursor: pointer;\">Last</a>\r\n+                              </c-page-item>\r\n+                            </c-pagination>\r\n                             \r\n-                            <c-page-item *ngFor=\"let page of getVisiblePageNumbers(currentCsvFile.data.length, pageSize, currentPage)\" \r\n-                                        [active]=\"currentPage === page\">\r\n-                              <a cPageLink (click)=\"changePage(page, 'bulk')\" style=\"cursor: pointer;\">\r\n-                                {{ page + 1 }}\r\n-                              </a>\r\n-                            </c-page-item>\r\n-                            \r\n-                            <c-page-item [disabled]=\"currentPage >= Math.ceil(currentCsvFile.data.length / pageSize) - 1\">\r\n-                              <a cPageLink (click)=\"changePage(currentPage + 1, 'bulk')\" style=\"cursor: pointer;\">\r\n-                                <span aria-hidden=\"true\">&raquo;</span>\r\n-                              </a>\r\n-                            </c-page-item>\r\n-                            <c-page-item [disabled]=\"currentPage >= Math.ceil(currentCsvFile.data.length / pageSize) - 1\">\r\n-                              <a cPageLink (click)=\"changePage(Math.ceil(currentCsvFile.data.length / pageSize) - 1, 'bulk')\" style=\"cursor: pointer;\">Last</a>\r\n-                            </c-page-item>\r\n-                          </c-pagination>\r\n-                          \r\n-                          <div>\r\n-                            <select \r\n-                              cSelect \r\n-                              size=\"sm\" \r\n-                              [(ngModel)]=\"pageSize\" \r\n-                              (change)=\"onPageSizeChange('bulk')\" \r\n-                              style=\"width: auto;\"\r\n-                              [ngModelOptions]=\"{standalone: true}\">\r\n-                              <option [value]=\"10\">10 rows</option>\r\n-                              <option [value]=\"25\">25 rows</option>\r\n-                              <option [value]=\"50\">50 rows</option>\r\n-                              <option [value]=\"100\">100 rows</option>\r\n-                            </select>\r\n+                            <div>\r\n+                              <select \r\n+                                cSelect \r\n+                                size=\"sm\" \r\n+                                [(ngModel)]=\"pageSize\" \r\n+                                (change)=\"onPageSizeChange('bulk')\" \r\n+                                style=\"width: auto;\"\r\n+                                [ngModelOptions]=\"{standalone: true}\">\r\n+                                <option [value]=\"10\">10 rows</option>\r\n+                                <option [value]=\"25\">25 rows</option>\r\n+                                <option [value]=\"50\">50 rows</option>\r\n+                                <option [value]=\"100\">100 rows</option>\r\n+                              </select>\r\n+                            </div>\r\n                           </div>\r\n+                        </c-card-body>\r\n+                      </c-card>\r\n+                    </c-card-body>\r\n+                    <c-card-body *ngIf=\"!currentCsvFile\" class=\"text-center py-5\">\r\n+                      <p class=\"text-muted\">No files selected. Please select a file from \"My Files\".</p>\r\n+                    </c-card-body>\r\n+                  </c-card>\r\n+                </c-col>\r\n+\r\n+                <!-- Right Column: Upload and File Management -->\r\n+                <c-col md=\"4\">\r\n+                  <!-- File Upload Card -->\r\n+                  <c-card class=\"mb-4\">\r\n+                    <c-card-header>\r\n+                      <strong>Upload CSV File</strong>\r\n+                    </c-card-header>\r\n+                    <c-card-body>\r\n+                      <form cForm [formGroup]=\"fileUploadForm\">\r\n+                        <div class=\"mb-3\">\r\n+                          <label cLabel for=\"formFile\">Choose CSV file</label>\r\n+                          <input cFormControl type=\"file\" id=\"formFile\" accept=\".csv\" (change)=\"onFileSelected($event)\">\r\n+                          <p *ngIf=\"fileUploadForm.get('fileName')?.value\" class=\"mt-2 mb-0\">\r\n+                            Selected: {{ fileUploadForm.get('fileName')?.value }}\r\n+                          </p>\r\n                         </div>\r\n-                      </c-card-body>\r\n-                    </c-card>\r\n-                  </c-card-body>\r\n-                  <c-card-body *ngIf=\"!currentCsvFile\" class=\"text-center py-5\">\r\n-                    <p class=\"text-muted\">No files selected. Please select a file from \"My Files\".</p>\r\n-                  </c-card-body>\r\n-                </c-card>\r\n-              </c-col>\r\n-\r\n-              <!-- Right Column: File Management -->\r\n-              <c-col md=\"4\">\r\n-                <!-- File Upload Card - MOVED HERE from left column -->\r\n-                <c-card class=\"mb-4\">\r\n-                  <c-card-header>\r\n-                    <strong>Upload CSV File</strong>\r\n-                  </c-card-header>\r\n-                  <c-card-body>\r\n-                    <form cForm [formGroup]=\"fileUploadForm\">\r\n-                      <div class=\"mb-3\">\r\n-                        <label cLabel for=\"formFile\">Choose CSV file</label>\r\n-                        <input cFormControl type=\"file\" id=\"formFile\" accept=\".csv\" (change)=\"onFileSelected($event)\">\r\n-                        <p *ngIf=\"fileUploadForm.get('fileName')?.value\" class=\"mt-2 mb-0\">\r\n-                          Selected: {{ fileUploadForm.get('fileName')?.value }}\r\n-                        </p>\r\n+                        <div class=\"d-grid\">\r\n+                          <button cButton color=\"primary\" type=\"button\" (click)=\"predictCsvFile()\"\r\n+                            [disabled]=\"!fileUploadForm.get('csvFile')?.value\">\r\n+                            Predict\r\n+                          </button>\r\n+                        </div>\r\n+                      </form>\r\n+                    </c-card-body>\r\n+                  </c-card>\r\n+                  \r\n+                  <!-- Pending Files Card -->\r\n+                  <c-card class=\"mb-4\">\r\n+                    <c-card-header>\r\n+                      <strong>Pending Files</strong>\r\n+                    </c-card-header>\r\n+                    <c-card-body>\r\n+                      <div *ngIf=\"pendingFiles.length === 0\" class=\"text-center py-3\">\r\n+                        <p class=\"text-muted mb-0\">No pending files</p>\r\n                       </div>\r\n-                      <div class=\"d-grid\">\r\n-                        <button cButton color=\"primary\" type=\"button\" (click)=\"predictCsvFile()\"\r\n-                          [disabled]=\"!fileUploadForm.get('csvFile')?.value\">\r\n-                          Predict\r\n-                        </button>\r\n+                      <div style=\"max-height: 200px; overflow-y: auto;\" *ngIf=\"pendingFiles.length > 0\">\r\n+                        <ul cListGroup>\r\n+                          <li cListGroupItem *ngFor=\"let file of pendingFiles\" class=\"d-flex align-items-center\">\r\n+                            <div class=\"spinner-border spinner-border-sm text-primary me-2\" role=\"status\">\r\n+                              <span class=\"visually-hidden\">Processing...</span>\r\n+                            </div>\r\n+                            <span class=\"text-truncate\">{{ file.name }}</span>\r\n+                            <small class=\"text-muted ms-auto\">processing...</small>\r\n+                          </li>\r\n+                        </ul>\r\n                       </div>\r\n-                    </form>\r\n-                  </c-card-body>\r\n-                </c-card>\r\n-                <!-- Update the Pending Files section -->\r\n-                <c-card class=\"mb-4\">\r\n-                  <c-card-header>\r\n-                    <strong>Pending Files</strong>\r\n-                  </c-card-header>\r\n-                  <c-card-body>\r\n-                    <div *ngIf=\"pendingFiles.length === 0\" class=\"text-center py-3\">\r\n-                      <p class=\"text-muted mb-0\">No pending files</p>\r\n-                    </div>\r\n-                    <div style=\"max-height: 200px; overflow-y: auto;\" *ngIf=\"pendingFiles.length > 0\">\r\n-                      <ul cListGroup>\r\n-                        <li cListGroupItem *ngFor=\"let file of pendingFiles\" class=\"d-flex align-items-center\">\r\n-                          <div class=\"spinner-border spinner-border-sm text-primary me-2\" role=\"status\">\r\n-                            <span class=\"visually-hidden\">Processing...</span>\r\n-                          </div>\r\n-                          <span class=\"text-truncate\">{{ file.name }}</span>\r\n-                          <small class=\"text-muted ms-auto\">processing...</small>\r\n-                        </li>\r\n-                      </ul>\r\n-                    </div>\r\n-                    <div *ngIf=\"pendingFiles.length > 5\" class=\"text-end mt-2\">\r\n-                      <small class=\"text-muted\">Showing {{ pendingFiles.length }} files</small>\r\n-                    </div>\r\n-                  </c-card-body>\r\n-                </c-card>\r\n-\r\n-                <!-- Update the My Files section with search -->\r\n-                <c-card>\r\n-                  <c-card-header>\r\n-                    <strong>My Files</strong>\r\n-                  </c-card-header>\r\n-                  <c-card-body>\r\n-                    <!-- Add search input -->\r\n-                    <div class=\"mb-3\">\r\n-                      <div class=\"input-group\">\r\n-                        <!-- <svg cIcon name=\"cil-search\"></svg> -->\r\n-                        <input \r\n-                          cFormControl \r\n-                          type=\"text\" \r\n-                          placeholder=\"Search files...\" \r\n-                          [(ngModel)]=\"fileSearchQuery\"\r\n-                          [ngModelOptions]=\"{standalone: true}\"\r\n-                          (input)=\"filterFiles()\">\r\n-                        <button \r\n-                          *ngIf=\"fileSearchQuery\" \r\n-                          cButton \r\n-                          color=\"secondary\" \r\n-                          variant=\"outline\" \r\n-                          type=\"button\"\r\n-                          (click)=\"clearFileSearch()\">\r\n-                          &times;\r\n-                        </button>\r\n+                      <div *ngIf=\"pendingFiles.length > 5\" class=\"text-end mt-2\">\r\n+                        <small class=\"text-muted\">Showing {{ pendingFiles.length }} files</small>\r\n                       </div>\r\n-                    </div>\r\n-                    \r\n-                    <div *ngIf=\"filteredFiles.length === 0\" class=\"text-center py-3\">\r\n-                      <p class=\"text-muted mb-0\">\r\n-                        {{ myFiles.length === 0 ? 'No files available' : 'No matching files' }}\r\n-                      </p>\r\n-                    </div>\r\n-                    \r\n-                    <div style=\"max-height: 240px; overflow-y: auto;\" *ngIf=\"filteredFiles.length > 0\">\r\n-                      <ul cListGroup>\r\n-                        <li cListGroupItem \r\n-                          *ngFor=\"let file of filteredFiles\"\r\n-                          [active]=\"activeCsvFile === file.id\"\r\n-                          style=\"cursor: pointer;\"\r\n-                          (click)=\"loadFileToVisualization(file.id)\">\r\n-                          <div class=\"d-flex align-items-center\">\r\n-                            <span class=\"text-truncate\">{{ file.name }}</span>\r\n-                            <small class=\"text-muted ms-auto\">\r\n-                              {{ file.timestamp | date:'short' }}\r\n-                            </small>\r\n-                          </div>\r\n-                        </li>\r\n-                      </ul>\r\n-                    </div>\r\n-                    \r\n-                    <div *ngIf=\"!fileSearchQuery && myFiles.length > 5\" class=\"text-end mt-2\">\r\n-                      <small class=\"text-muted\">\r\n-                        Showing {{ filteredFiles.length }} of {{ myFiles.length }} files\r\n-                      </small>\r\n-                    </div>\r\n-                    <div *ngIf=\"fileSearchQuery && filteredFiles.length > 0\" class=\"text-end mt-2\">\r\n-                      <small class=\"text-muted\">\r\n-                        Found {{ filteredFiles.length }} {{ filteredFiles.length === 1 ? 'match' : 'matches' }}\r\n-                      </small>\r\n-                    </div>\r\n-                  </c-card-body>\r\n-                </c-card>\r\n-              </c-col>\r\n-            </c-row>\r\n+                    </c-card-body>\r\n+                  </c-card>\r\n+                </c-col>\r\n+              </c-row>\r\n+            </div>\r\n+            \r\n+            <!-- Premium Overlay - only shown when user doesn't have access -->\r\n+            <div class=\"premium-overlay\" *ngIf=\"!hasBulkAccess\">\r\n+              <div class=\"premium-message\">\r\n+                <h4>Upgrade to Pro to Access Bulk Prediction</h4>\r\n+                <p>Process entire CSV files at once with our premium bulk prediction feature.</p>\r\n+                <ul class=\"text-start mb-4\">\r\n+                  <li>Upload & analyze full datasets</li>\r\n+                  <li>Get batch results instantly</li>\r\n+                  <li>Export complete result sets</li>\r\n+                  <li>Track processing history</li>\r\n+                </ul>\r\n+                <button \r\n+                  cButton \r\n+                  color=\"primary\" \r\n+                  size=\"lg\" \r\n+                  class=\"px-4\"\r\n+                  routerLink=\"/subscription\">\r\n+                  Upgrade to Pro\r\n+                </button>\r\n+              </div>\r\n+            </div>\r\n           </div>\r\n         </c-card-body>\r\n       </c-card>\r\n     </c-card-body>\r\n"
                },
                {
                    "date": 1747850492128,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -392,9 +392,9 @@\n                   cButton \r\n                   color=\"primary\" \r\n                   size=\"lg\" \r\n                   class=\"px-4\"\r\n-                  routerLink=\"/subscription\">\r\n+                  (click)=\"navigateToSubscription()\">\r\n                   Upgrade to Pro\r\n                 </button>\r\n               </div>\r\n             </div>\r\n"
                },
                {
                    "date": 1747850552894,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -395,8 +395,13 @@\n                   class=\"px-4\"\r\n                   (click)=\"navigateToSubscription()\">\r\n                   Upgrade to Pro\r\n                 </button>\r\n+                <div class=\"mt-3\">\r\n+                  <small>\r\n+                    If the button doesn't work, <a href=\"/subscription\">click here</a> instead.\r\n+                  </small>\r\n+                </div>\r\n               </div>\r\n             </div>\r\n           </div>\r\n         </c-card-body>\r\n"
                },
                {
                    "date": 1747851144764,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -372,8 +372,72 @@\n                         <small class=\"text-muted\">Showing {{ pendingFiles.length }} files</small>\r\n                       </div>\r\n                     </c-card-body>\r\n                   </c-card>\r\n+                                  <c-card>\r\n+                  <c-card-header>\r\n+                    <strong>My Files</strong>\r\n+                  </c-card-header>\r\n+                  <c-card-body>\r\n+                    <!-- Add search input -->\r\n+                    <div class=\"mb-3\">\r\n+                      <div class=\"input-group\">\r\n+                        <!-- <svg cIcon name=\"cil-search\"></svg> -->\r\n+                        <input \r\n+                          cFormControl \r\n+                          type=\"text\" \r\n+                          placeholder=\"Search files...\" \r\n+                          [(ngModel)]=\"fileSearchQuery\"\r\n+                          [ngModelOptions]=\"{standalone: true}\"\r\n+                          (input)=\"filterFiles()\">\r\n+                        <button \r\n+                          *ngIf=\"fileSearchQuery\" \r\n+                          cButton \r\n+                          color=\"secondary\" \r\n+                          variant=\"outline\" \r\n+                          type=\"button\"\r\n+                          (click)=\"clearFileSearch()\">\r\n+                          &times;\r\n+                        </button>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div *ngIf=\"filteredFiles.length === 0\" class=\"text-center py-3\">\r\n+                      <p class=\"text-muted mb-0\">\r\n+                        {{ myFiles.length === 0 ? 'No files available' : 'No matching files' }}\r\n+                      </p>\r\n+                    </div>\r\n+                    \r\n+                    <div style=\"max-height: 240px; overflow-y: auto;\" *ngIf=\"filteredFiles.length > 0\">\r\n+                      <ul cListGroup>\r\n+                        <li cListGroupItem \r\n+                          *ngFor=\"let file of filteredFiles\"\r\n+                          [active]=\"activeCsvFile === file.id\"\r\n+                          style=\"cursor: pointer;\"\r\n+                          (click)=\"loadFileToVisualization(file.id)\">\r\n+                          <div class=\"d-flex align-items-center\">\r\n+                            <span class=\"text-truncate\">{{ file.name }}</span>\r\n+                            <small class=\"text-muted ms-auto\">\r\n+                              {{ file.timestamp | date:'short' }}\r\n+                            </small>\r\n+                          </div>\r\n+                        </li>\r\n+                      </ul>\r\n+                    </div>\r\n+                    \r\n+                    <div *ngIf=\"!fileSearchQuery && myFiles.length > 5\" class=\"text-end mt-2\">\r\n+                      <small class=\"text-muted\">\r\n+                        Showing {{ filteredFiles.length }} of {{ myFiles.length }} files\r\n+                      </small>\r\n+                    </div>\r\n+                    <div *ngIf=\"fileSearchQuery && filteredFiles.length > 0\" class=\"text-end mt-2\">\r\n+                      <small class=\"text-muted\">\r\n+                        Found {{ filteredFiles.length }} {{ filteredFiles.length === 1 ? 'match' : 'matches' }}\r\n+                      </small>\r\n+                    </div>\r\n+                  </c-card-body>\r\n+                </c-card>\r\n+\r\n                 </c-col>\r\n               </c-row>\r\n             </div>\r\n             \r\n"
                },
                {
                    "date": 1748182503884,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,35 +77,53 @@\n                     <div *ngIf=\"singlePredictionHistory.length === 0\" class=\"text-center py-5\">\r\n                       <p class=\"text-muted\">No prediction history available. Make a prediction to see results here.</p>\r\n                     </div>\r\n \r\n+                    <!-- Update the Single Prediction History table -->\r\n                     <div class=\"table-responsive\" style=\"max-height: 600px; overflow-y: auto;\" *ngIf=\"singlePredictionHistory.length > 0\">\r\n                       <table cTable hover>\r\n                         <thead>\r\n                           <tr>\r\n                             <th>Text</th>\r\n                             <th>Prediction</th>\r\n                             <th>Confidence</th>\r\n-                            <th>Timestamp</th>\r\n+                            <th>Sentiment Scores</th>\r\n                           </tr>\r\n                         </thead>\r\n                         <tbody>\r\n-                          <tr *ngFor=\"let prediction of getPaginatedData(singlePredictionHistory, historyCurrentPage, historyPageSize)\" \r\n+                          <tr *ngFor=\"let prediction of getPaginatedData(singlePredictionHistory, historyCurrentPage, historyPageSize)\"\r\n                               (click)=\"showHistoryItemChart(prediction)\"\r\n                               [class.selected-history-item]=\"isSelectedHistoryItem(prediction)\"\r\n                               style=\"cursor: pointer;\">\r\n+                            <!-- Text column -->\r\n                             <td style=\"max-width: 200px; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;\" \r\n                                 [title]=\"prediction.text\">\r\n                               {{ prediction.text }}\r\n                             </td>\r\n-                            <td>{{ prediction.result }}</td>\r\n+                            \r\n+                            <!-- Prediction column -->\r\n+                            <td>\r\n+                              <span class=\"badge\" [style.background-color]=\"getCategoryColor(prediction.final_prediction)\">\r\n+                                {{ prediction.final_prediction }}\r\n+                              </span>\r\n+                            </td>\r\n+                            \r\n+                            <!-- Confidence column -->\r\n                             <td>{{ prediction.confidence }}%</td>\r\n-                            <td>{{ prediction.timestamp | date:'short' }}</td>\r\n+                            \r\n+                            <!-- Sentiment Scores column -->\r\n+                            <td>\r\n+                              <span class=\"badge rounded-pill bg-primary\" \r\n+                                    (click)=\"showCategoriesModal(prediction.sentiment_scores); $event.stopPropagation();\" \r\n+                                    style=\"cursor: pointer;\">\r\n+                                View Details\r\n+                              </span>\r\n+                            </td>\r\n                           </tr>\r\n                         </tbody>\r\n                       </table>\r\n                     </div>\r\n-                    \r\n+\r\n                     <!-- Prediction History Pagination controls - Always show but with disabled state when appropriate -->\r\n                     <div class=\"d-flex justify-content-between align-items-center mt-3\">\r\n                       <div>\r\n                         <small class=\"text-muted\">\r\n@@ -218,48 +236,41 @@\n                           <div class=\"table-responsive\" style=\"max-height: 450px; overflow-y: auto;\">\r\n                             <table cTable hover>\r\n                               <thead>\r\n                                 <tr>\r\n-                                  <th *ngFor=\"let header of getHeaders(currentCsvFile.data[0])\">\r\n-                                    {{ header }}\r\n-                                  </th>\r\n+                                  <th>Text</th>\r\n+                                  <th>Prediction</th>\r\n+                                  <th>Confidence</th>\r\n+                                  <th>Sentiment Scores</th>\r\n                                 </tr>\r\n                               </thead>\r\n                               <tbody>\r\n                                 <tr *ngFor=\"let row of getPaginatedData(currentCsvFile.data, currentPage, pageSize)\">\r\n-                                  <ng-container *ngFor=\"let header of getHeaders(currentCsvFile.data[0])\">\r\n-                                    <td *ngIf=\"header !== 'categories'; else categoriesCell\">\r\n-                                      <!-- Special handling for different data types -->\r\n-                                      <ng-container *ngIf=\"header === 'Confidence'; else regularContent\">\r\n-                                        {{ row[header] }}%\r\n-                                      </ng-container>\r\n-                                      <ng-template #regularContent>\r\n-                                        {{ row[header] }}\r\n-                                      </ng-template>\r\n-                                    </td>\r\n-                                    \r\n-                                    <ng-template #categoriesCell>\r\n-                                      <td>\r\n-                                        <!-- Display categories as a tooltip or formatted text -->\r\n-                                        <div class=\"categories-summary\" [title]=\"formatCategoriesForTooltip(row[header])\">\r\n-                                          <span class=\"badge\" *ngFor=\"let cat of row[header].slice(0, 2)\" \r\n-                                                [style.background-color]=\"getCategoryColor(cat.name)\"\r\n-                                                style=\"margin-right: 3px; font-size: 0.7rem;\">\r\n-                                          {{ cat.name }}: {{ cat.value }}%\r\n-                                          </span>\r\n-                                          <span *ngIf=\"row[header].length > 2\" style=\"font-size: 0.7rem;\">\r\n-                                            +{{ row[header].length - 2 }} more\r\n-                                          </span>\r\n-                                        </div>\r\n-                                      </td>\r\n-                                      <td>\r\n-                                        <span class=\"badge rounded-pill bg-primary\" (click)=\"showCategoriesModal(row[header])\" style=\"cursor: pointer;\">\r\n-                                          View Details\r\n-                                        </span>\r\n-                                      </td>\r\n-                                    </ng-template>\r\n-                                  </ng-container>\r\n-                                </tr>                            \r\n+                                  <!-- Text column -->\r\n+                                  <td style=\"max-width: 200px; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;\" \r\n+                                      [title]=\"row.text || row.Text\">\r\n+                                    {{ row.text || row.Text }}\r\n+                                  </td>\r\n+                                  \r\n+                                  <!-- Prediction column -->\r\n+                                  <td>\r\n+                                    <span class=\"badge\" [style.background-color]=\"getCategoryColor(row.final_prediction || row.Prediction)\">\r\n+                                      {{ row.final_prediction || row.Prediction }}\r\n+                                    </span>\r\n+                                  </td>\r\n+                                  \r\n+                                  <!-- Confidence column -->\r\n+                                  <td>{{ row.confidence || row.Confidence }}%</td>\r\n+                                  \r\n+                                  <!-- Categories/Sentiment Scores column -->\r\n+                                  <td>\r\n+                                    <span class=\"badge rounded-pill bg-primary\" \r\n+                                          (click)=\"showCategoriesModal(row.sentiment_scores || row.categories)\" \r\n+                                          style=\"cursor: pointer;\">\r\n+                                      View Details\r\n+                                    </span>\r\n+                                  </td>\r\n+                                </tr>\r\n                               </tbody>\r\n                             </table>\r\n                           </div> \r\n                           <!-- Pagination controls -->\r\n@@ -435,9 +446,8 @@\n                       </small>\r\n                     </div>\r\n                   </c-card-body>\r\n                 </c-card>\r\n-\r\n                 </c-col>\r\n               </c-row>\r\n             </div>\r\n             \r\n"
                },
                {
                    "date": 1748183731529,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -230,8 +230,19 @@\n \r\n                       <c-card>\r\n                         <c-card-header>\r\n                           <strong>{{ currentCsvFile.name }} - Data</strong>\r\n+                                                    <button \r\n+                              cButton \r\n+                              color=\"primary\" \r\n+                              size=\"sm\" \r\n+                              variant=\"ghost\" \r\n+                              (click)=\"downloadFile(currentCsvFile.id)\"\r\n+                              title=\"Download data\">\r\n+                              <svg cIcon name=\"cilCloudDownload\"></svg>\r\n+                            </button>\r\n+\r\n+\r\n                         </c-card-header>\r\n                         <c-card-body>\r\n                           <div class=\"table-responsive\" style=\"max-height: 450px; overflow-y: auto;\">\r\n                             <table cTable hover>\r\n"
                },
                {
                    "date": 1748183869464,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -230,19 +230,17 @@\n \r\n                       <c-card>\r\n                         <c-card-header>\r\n                           <strong>{{ currentCsvFile.name }} - Data</strong>\r\n-                                                    <button \r\n+                            <button \r\n                               cButton \r\n                               color=\"primary\" \r\n                               size=\"sm\" \r\n                               variant=\"ghost\" \r\n                               (click)=\"downloadFile(currentCsvFile.id)\"\r\n                               title=\"Download data\">\r\n                               <svg cIcon name=\"cilCloudDownload\"></svg>\r\n                             </button>\r\n-\r\n-\r\n                         </c-card-header>\r\n                         <c-card-body>\r\n                           <div class=\"table-responsive\" style=\"max-height: 450px; overflow-y: auto;\">\r\n                             <table cTable hover>\r\n"
                },
                {
                    "date": 1748183883449,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -237,9 +237,9 @@\n                               size=\"sm\" \r\n                               variant=\"ghost\" \r\n                               (click)=\"downloadFile(currentCsvFile.id)\"\r\n                               title=\"Download data\">\r\n-                              <svg cIcon name=\"cilCloudDownload\"></svg>\r\n+                              <svg cIcon name=\"cil-cloudDownload\"></svg>\r\n                             </button>\r\n                         </c-card-header>\r\n                         <c-card-body>\r\n                           <div class=\"table-responsive\" style=\"max-height: 450px; overflow-y: auto;\">\r\n"
                },
                {
                    "date": 1748183945662,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -230,17 +230,21 @@\n \r\n                       <c-card>\r\n                         <c-card-header>\r\n                           <strong>{{ currentCsvFile.name }} - Data</strong>\r\n+                          <div class=\"d-flex justify-content-between align-items-center\">\r\n+                            <strong>{{ currentCsvFile.name }} - Data</strong>\r\n                             <button \r\n                               cButton \r\n-                              color=\"primary\" \r\n+                              color=\"success\" \r\n                               size=\"sm\" \r\n-                              variant=\"ghost\" \r\n-                              (click)=\"downloadFile(currentCsvFile.id)\"\r\n-                              title=\"Download data\">\r\n-                              <svg cIcon name=\"cil-cloudDownload\"></svg>\r\n+                              variant=\"outline\"\r\n+                              (click)=\"downloadCsvData()\"\r\n+                              *ngIf=\"currentCsvFile?.data?.length > 0\">\r\n+                              <svg cIcon name=\"cilCloudDownload\" size=\"sm\" class=\"me-1\"></svg>\r\n+                              Download CSV\r\n                             </button>\r\n+                          </div>\r\n                         </c-card-header>\r\n                         <c-card-body>\r\n                           <div class=\"table-responsive\" style=\"max-height: 450px; overflow-y: auto;\">\r\n                             <table cTable hover>\r\n"
                },
                {
                    "date": 1748183951943,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -239,9 +239,9 @@\n                               size=\"sm\" \r\n                               variant=\"outline\"\r\n                               (click)=\"downloadCsvData()\"\r\n                               *ngIf=\"currentCsvFile?.data?.length > 0\">\r\n-                              <svg cIcon name=\"cilCloudDownload\" size=\"sm\" class=\"me-1\"></svg>\r\n+                              <svg cIcon name=\"cil-cloud-download\" size=\"sm\" class=\"me-1\"></svg>\r\n                               Download CSV\r\n                             </button>\r\n                           </div>\r\n                         </c-card-header>\r\n"
                },
                {
                    "date": 1748183961674,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -237,9 +237,9 @@\n                               cButton \r\n                               color=\"success\" \r\n                               size=\"sm\" \r\n                               variant=\"outline\"\r\n-                              (click)=\"downloadCsvData()\"\r\n+                              (click)=\"downloadFile()\"\r\n                               *ngIf=\"currentCsvFile?.data?.length > 0\">\r\n                               <svg cIcon name=\"cil-cloud-download\" size=\"sm\" class=\"me-1\"></svg>\r\n                               Download CSV\r\n                             </button>\r\n"
                },
                {
                    "date": 1748183989590,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -237,10 +237,9 @@\n                               cButton \r\n                               color=\"success\" \r\n                               size=\"sm\" \r\n                               variant=\"outline\"\r\n-                              (click)=\"downloadFile()\"\r\n-                              *ngIf=\"currentCsvFile?.data?.length > 0\">\r\n+                              (click)=\"downloadFile(currentCsvFile.id)\">\r\n                               <svg cIcon name=\"cil-cloud-download\" size=\"sm\" class=\"me-1\"></svg>\r\n                               Download CSV\r\n                             </button>\r\n                           </div>\r\n"
                },
                {
                    "date": 1748184015985,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -229,9 +229,8 @@\n                       </c-card>\r\n \r\n                       <c-card>\r\n                         <c-card-header>\r\n-                          <strong>{{ currentCsvFile.name }} - Data</strong>\r\n                           <div class=\"d-flex justify-content-between align-items-center\">\r\n                             <strong>{{ currentCsvFile.name }} - Data</strong>\r\n                             <button \r\n                               cButton \r\n"
                },
                {
                    "date": 1748184165205,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -231,18 +231,25 @@\n                       <c-card>\r\n                         <c-card-header>\r\n                           <div class=\"d-flex justify-content-between align-items-center\">\r\n                             <strong>{{ currentCsvFile.name }} - Data</strong>\r\n-                            <button \r\n-                              cButton \r\n-                              color=\"success\" \r\n-                              size=\"sm\" \r\n-                              variant=\"outline\"\r\n-                              (click)=\"downloadFile(currentCsvFile.id)\">\r\n-                              <svg cIcon name=\"cil-cloud-download\" size=\"sm\" class=\"me-1\"></svg>\r\n-                              Download CSV\r\n-                            </button>\r\n-                          </div>\r\n+<button \r\n+  cButton \r\n+  color=\"success\" \r\n+  size=\"sm\" \r\n+  variant=\"outline\"\r\n+  (click)=\"downloadFile(currentCsvFile.id)\">\r\n+  <svg \r\n+    xmlns=\"http://www.w3.org/2000/svg\" \r\n+    width=\"16\" \r\n+    height=\"16\" \r\n+    fill=\"currentColor\" \r\n+    class=\"me-1\"\r\n+    viewBox=\"0 0 16 16\">\r\n+    <path d=\"M8 0a8 8 0 0 0-8 8 8 8 0 0 0 8 8 8 8 0 0 0 8-8 8 8 0 0 0-8-8zm0 2.5a5.5 5.5 0 1 1 0 11 5.5 5.5 0 0 1 0-11zM6 8v3h4V8h2l-4-4-4 4h2z\"/>\r\n+  </svg>\r\n+  Download CSV\r\n+</button>                          </div>\r\n                         </c-card-header>\r\n                         <c-card-body>\r\n                           <div class=\"table-responsive\" style=\"max-height: 450px; overflow-y: auto;\">\r\n                             <table cTable hover>\r\n"
                },
                {
                    "date": 1748184172709,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -231,25 +231,26 @@\n                       <c-card>\r\n                         <c-card-header>\r\n                           <div class=\"d-flex justify-content-between align-items-center\">\r\n                             <strong>{{ currentCsvFile.name }} - Data</strong>\r\n-<button \r\n-  cButton \r\n-  color=\"success\" \r\n-  size=\"sm\" \r\n-  variant=\"outline\"\r\n-  (click)=\"downloadFile(currentCsvFile.id)\">\r\n-  <svg \r\n-    xmlns=\"http://www.w3.org/2000/svg\" \r\n-    width=\"16\" \r\n-    height=\"16\" \r\n-    fill=\"currentColor\" \r\n-    class=\"me-1\"\r\n-    viewBox=\"0 0 16 16\">\r\n-    <path d=\"M8 0a8 8 0 0 0-8 8 8 8 0 0 0 8 8 8 8 0 0 0 8-8 8 8 0 0 0-8-8zm0 2.5a5.5 5.5 0 1 1 0 11 5.5 5.5 0 0 1 0-11zM6 8v3h4V8h2l-4-4-4 4h2z\"/>\r\n-  </svg>\r\n-  Download CSV\r\n-</button>                          </div>\r\n+                            <button \r\n+                              cButton \r\n+                              color=\"success\" \r\n+                              size=\"sm\" \r\n+                              variant=\"outline\"\r\n+                              (click)=\"downloadFile(currentCsvFile.id)\">\r\n+                              <svg \r\n+                                xmlns=\"http://www.w3.org/2000/svg\" \r\n+                                width=\"16\" \r\n+                                height=\"16\" \r\n+                                fill=\"currentColor\" \r\n+                                class=\"me-1\"\r\n+                                viewBox=\"0 0 16 16\">\r\n+                                <path d=\"M8 0a8 8 0 0 0-8 8 8 8 0 0 0 8 8 8 8 0 0 0 8-8 8 8 0 0 0-8-8zm0 2.5a5.5 5.5 0 1 1 0 11 5.5 5.5 0 0 1 0-11zM6 8v3h4V8h2l-4-4-4 4h2z\"/>\r\n+                              </svg>\r\n+                              Download CSV\r\n+                            </button>\r\n+                          </div>\r\n                         </c-card-header>\r\n                         <c-card-body>\r\n                           <div class=\"table-responsive\" style=\"max-height: 450px; overflow-y: auto;\">\r\n                             <table cTable hover>\r\n"
                },
                {
                    "date": 1748184231528,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -237,17 +237,9 @@\n                               color=\"success\" \r\n                               size=\"sm\" \r\n                               variant=\"outline\"\r\n                               (click)=\"downloadFile(currentCsvFile.id)\">\r\n-                              <svg \r\n-                                xmlns=\"http://www.w3.org/2000/svg\" \r\n-                                width=\"16\" \r\n-                                height=\"16\" \r\n-                                fill=\"currentColor\" \r\n-                                class=\"me-1\"\r\n-                                viewBox=\"0 0 16 16\">\r\n-                                <path d=\"M8 0a8 8 0 0 0-8 8 8 8 0 0 0 8 8 8 8 0 0 0 8-8 8 8 0 0 0-8-8zm0 2.5a5.5 5.5 0 1 1 0 11 5.5 5.5 0 0 1 0-11zM6 8v3h4V8h2l-4-4-4 4h2z\"/>\r\n-                              </svg>\r\n+                              <svg cIcon name=\"cil-cloud-download\" size=\"sm\" class=\"me-1\"></svg>\r\n                               Download CSV\r\n                             </button>\r\n                           </div>\r\n                         </c-card-header>\r\n"
                },
                {
                    "date": 1748184241293,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -237,9 +237,17 @@\n                               color=\"success\" \r\n                               size=\"sm\" \r\n                               variant=\"outline\"\r\n                               (click)=\"downloadFile(currentCsvFile.id)\">\r\n-                              <svg cIcon name=\"cil-cloud-download\" size=\"sm\" class=\"me-1\"></svg>\r\n+                              <svg \r\n+                                xmlns=\"http://www.w3.org/2000/svg\" \r\n+                                width=\"16\" \r\n+                                height=\"16\" \r\n+                                fill=\"currentColor\" \r\n+                                class=\"me-1\"\r\n+                                viewBox=\"0 0 16 16\">\r\n+                                <path d=\"M8 0a8 8 0 0 0-8 8 8 8 0 0 0 8 8 8 8 0 0 0 8-8 8 8 0 0 0-8-8zm0 2.5a5.5 5.5 0 1 1 0 11 5.5 5.5 0 0 1 0-11zM6 8v3h4V8h2l-4-4-4 4h2z\"/>\r\n+                              </svg>\r\n                               Download CSV\r\n                             </button>\r\n                           </div>\r\n                         </c-card-header>\r\n"
                },
                {
                    "date": 1748184301104,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -242,8 +242,9 @@\n                                 xmlns=\"http://www.w3.org/2000/svg\" \r\n                                 width=\"16\" \r\n                                 height=\"16\" \r\n                                 fill=\"currentColor\" \r\n+                                style=\"transform: scaleX(-1);\">\r\n                                 class=\"me-1\"\r\n                                 viewBox=\"0 0 16 16\">\r\n                                 <path d=\"M8 0a8 8 0 0 0-8 8 8 8 0 0 0 8 8 8 8 0 0 0 8-8 8 8 0 0 0-8-8zm0 2.5a5.5 5.5 0 1 1 0 11 5.5 5.5 0 0 1 0-11zM6 8v3h4V8h2l-4-4-4 4h2z\"/>\r\n                               </svg>\r\n"
                },
                {
                    "date": 1748184346082,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -242,9 +242,9 @@\n                                 xmlns=\"http://www.w3.org/2000/svg\" \r\n                                 width=\"16\" \r\n                                 height=\"16\" \r\n                                 fill=\"currentColor\" \r\n-                                style=\"transform: scaleX(-1);\">\r\n+                                style=\"transform: scaleY(-1);\">\r\n                                 class=\"me-1\"\r\n                                 viewBox=\"0 0 16 16\">\r\n                                 <path d=\"M8 0a8 8 0 0 0-8 8 8 8 0 0 0 8 8 8 8 0 0 0 8-8 8 8 0 0 0-8-8zm0 2.5a5.5 5.5 0 1 1 0 11 5.5 5.5 0 0 1 0-11zM6 8v3h4V8h2l-4-4-4 4h2z\"/>\r\n                               </svg>\r\n"
                },
                {
                    "date": 1748260212090,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -216,19 +216,25 @@\n                       </c-nav>\r\n                     </c-card-header>\r\n                     <c-card-body *ngIf=\"currentCsvFile\">\r\n                       <!-- Radar Chart -->\r\n-                      <c-card class=\"mb-4\">\r\n-                        <c-card-header>\r\n-                          <strong>{{ currentCsvFile.name }} - Radar Chart</strong>\r\n-                        </c-card-header>\r\n-                        <c-card-body>\r\n-                          <c-chart type=\"radar\" \r\n-                                  [data]=\"currentCsvFile.chartData\" \r\n-                                  [options]=\"options\" />\r\n-                        </c-card-body>\r\n-                      </c-card>\r\n-\r\n+<c-card class=\"mb-4\">\r\n+  <c-card-header>\r\n+    <strong>{{ currentCsvFile.name }} - Radar Chart</strong>\r\n+  </c-card-header>\r\n+  <c-card-body>\r\n+    <div *ngIf=\"isLoadingFile\" class=\"text-center py-5\">\r\n+      <div class=\"spinner-border text-primary\" role=\"status\">\r\n+        <span class=\"visually-hidden\">Loading chart...</span>\r\n+      </div>\r\n+      <p class=\"mt-2\">Loading chart data...</p>\r\n+    </div>\r\n+    <c-chart *ngIf=\"!isLoadingFile && currentCsvFile?.chartData\" \r\n+            type=\"radar\" \r\n+            [data]=\"currentCsvFile.chartData\" \r\n+            [options]=\"options\" />\r\n+  </c-card-body>\r\n+</c-card>\r\n                       <c-card>\r\n                         <c-card-header>\r\n                           <div class=\"d-flex justify-content-between align-items-center\">\r\n                             <strong>{{ currentCsvFile.name }} - Data</strong>\r\n"
                },
                {
                    "date": 1748260723558,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -218,24 +218,34 @@\n                     <c-card-body *ngIf=\"currentCsvFile\">\r\n                       <!-- Radar Chart -->\r\n <c-card class=\"mb-4\">\r\n   <c-card-header>\r\n-    <strong>{{ currentCsvFile.name }} - Radar Chart</strong>\r\n+    <strong>{{ currentCsvFile?.name }} - Chart</strong>\r\n   </c-card-header>\r\n   <c-card-body>\r\n     <div *ngIf=\"isLoadingFile\" class=\"text-center py-5\">\r\n       <div class=\"spinner-border text-primary\" role=\"status\">\r\n         <span class=\"visually-hidden\">Loading chart...</span>\r\n       </div>\r\n       <p class=\"mt-2\">Loading chart data...</p>\r\n     </div>\r\n-    <c-chart *ngIf=\"!isLoadingFile && currentCsvFile?.chartData\" \r\n-            type=\"radar\" \r\n-            [data]=\"currentCsvFile.chartData\" \r\n-            [options]=\"options\" />\r\n+    \r\n+    <!-- Only show chart when not loading and data exists -->\r\n+    <ng-container *ngIf=\"!isLoadingFile && currentCsvFile?.chartData\">\r\n+      <!-- Each time a file changes, this will create a completely new chart component -->\r\n+      <div [attr.data-chart-id]=\"activeCsvFile\">\r\n+        <c-chart \r\n+          type=\"radar\" \r\n+          [data]=\"currentCsvFile.chartData\" \r\n+          [options]=\"options\" />\r\n+      </div>\r\n+    </ng-container>\r\n+    \r\n+    <div *ngIf=\"!isLoadingFile && (!currentCsvFile || !currentCsvFile.chartData)\" class=\"text-center py-5\">\r\n+      <p class=\"text-muted\">No chart data available</p>\r\n+    </div>\r\n   </c-card-body>\r\n-</c-card>\r\n-                      <c-card>\r\n+</c-card>                      <c-card>\r\n                         <c-card-header>\r\n                           <div class=\"d-flex justify-content-between align-items-center\">\r\n                             <strong>{{ currentCsvFile.name }} - Data</strong>\r\n                             <button \r\n"
                },
                {
                    "date": 1748260734887,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -216,46 +216,47 @@\n                       </c-nav>\r\n                     </c-card-header>\r\n                     <c-card-body *ngIf=\"currentCsvFile\">\r\n                       <!-- Radar Chart -->\r\n-<c-card class=\"mb-4\">\r\n-  <c-card-header>\r\n-    <strong>{{ currentCsvFile?.name }} - Chart</strong>\r\n-  </c-card-header>\r\n-  <c-card-body>\r\n-    <div *ngIf=\"isLoadingFile\" class=\"text-center py-5\">\r\n-      <div class=\"spinner-border text-primary\" role=\"status\">\r\n-        <span class=\"visually-hidden\">Loading chart...</span>\r\n+  <c-card class=\"mb-4\">\r\n+    <c-card-header>\r\n+      <strong>{{ currentCsvFile?.name }} - Chart</strong>\r\n+    </c-card-header>\r\n+    <c-card-body>\r\n+      <div *ngIf=\"isLoadingFile\" class=\"text-center py-5\">\r\n+        <div class=\"spinner-border text-primary\" role=\"status\">\r\n+          <span class=\"visually-hidden\">Loading chart...</span>\r\n+        </div>\r\n+        <p class=\"mt-2\">Loading chart data...</p>\r\n       </div>\r\n-      <p class=\"mt-2\">Loading chart data...</p>\r\n-    </div>\r\n-    \r\n-    <!-- Only show chart when not loading and data exists -->\r\n-    <ng-container *ngIf=\"!isLoadingFile && currentCsvFile?.chartData\">\r\n-      <!-- Each time a file changes, this will create a completely new chart component -->\r\n-      <div [attr.data-chart-id]=\"activeCsvFile\">\r\n-        <c-chart \r\n-          type=\"radar\" \r\n-          [data]=\"currentCsvFile.chartData\" \r\n-          [options]=\"options\" />\r\n+      \r\n+      <!-- Only show chart when not loading and data exists -->\r\n+      <ng-container *ngIf=\"!isLoadingFile && currentCsvFile?.chartData\">\r\n+        <!-- Each time a file changes, this will create a completely new chart component -->\r\n+        <div [attr.data-chart-id]=\"activeCsvFile\">\r\n+          <c-chart \r\n+            type=\"radar\" \r\n+            [data]=\"currentCsvFile.chartData\" \r\n+            [options]=\"options\" />\r\n+        </div>\r\n+      </ng-container>\r\n+      \r\n+      <div *ngIf=\"!isLoadingFile && (!currentCsvFile || !currentCsvFile.chartData)\" class=\"text-center py-5\">\r\n+        <p class=\"text-muted\">No chart data available</p>\r\n       </div>\r\n-    </ng-container>\r\n-    \r\n-    <div *ngIf=\"!isLoadingFile && (!currentCsvFile || !currentCsvFile.chartData)\" class=\"text-center py-5\">\r\n-      <p class=\"text-muted\">No chart data available</p>\r\n-    </div>\r\n-  </c-card-body>\r\n-</c-card>                      <c-card>\r\n-                        <c-card-header>\r\n-                          <div class=\"d-flex justify-content-between align-items-center\">\r\n-                            <strong>{{ currentCsvFile.name }} - Data</strong>\r\n-                            <button \r\n-                              cButton \r\n-                              color=\"success\" \r\n-                              size=\"sm\" \r\n-                              variant=\"outline\"\r\n-                              (click)=\"downloadFile(currentCsvFile.id)\">\r\n-                              <svg \r\n+    </c-card-body>\r\n+  </c-card>\r\n+<c-card>\r\n+  <c-card-header>\r\n+    <div class=\"d-flex justify-content-between align-items-center\">\r\n+      <strong>{{ currentCsvFile.name }} - Data</strong>\r\n+      <button \r\n+        cButton \r\n+        color=\"success\" \r\n+        size=\"sm\" \r\n+        variant=\"outline\"\r\n+        (click)=\"downloadFile(currentCsvFile.id)\">\r\n+        <svg \r\n                                 xmlns=\"http://www.w3.org/2000/svg\" \r\n                                 width=\"16\" \r\n                                 height=\"16\" \r\n                                 fill=\"currentColor\" \r\n"
                },
                {
                    "date": 1748260749511,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -216,37 +216,37 @@\n                       </c-nav>\r\n                     </c-card-header>\r\n                     <c-card-body *ngIf=\"currentCsvFile\">\r\n                       <!-- Radar Chart -->\r\n-  <c-card class=\"mb-4\">\r\n-    <c-card-header>\r\n-      <strong>{{ currentCsvFile?.name }} - Chart</strong>\r\n-    </c-card-header>\r\n-    <c-card-body>\r\n-      <div *ngIf=\"isLoadingFile\" class=\"text-center py-5\">\r\n-        <div class=\"spinner-border text-primary\" role=\"status\">\r\n-          <span class=\"visually-hidden\">Loading chart...</span>\r\n-        </div>\r\n-        <p class=\"mt-2\">Loading chart data...</p>\r\n-      </div>\r\n-      \r\n-      <!-- Only show chart when not loading and data exists -->\r\n-      <ng-container *ngIf=\"!isLoadingFile && currentCsvFile?.chartData\">\r\n-        <!-- Each time a file changes, this will create a completely new chart component -->\r\n-        <div [attr.data-chart-id]=\"activeCsvFile\">\r\n-          <c-chart \r\n-            type=\"radar\" \r\n-            [data]=\"currentCsvFile.chartData\" \r\n-            [options]=\"options\" />\r\n-        </div>\r\n-      </ng-container>\r\n-      \r\n-      <div *ngIf=\"!isLoadingFile && (!currentCsvFile || !currentCsvFile.chartData)\" class=\"text-center py-5\">\r\n-        <p class=\"text-muted\">No chart data available</p>\r\n-      </div>\r\n-    </c-card-body>\r\n-  </c-card>\r\n-<c-card>\r\n+                    <c-card class=\"mb-4\">\r\n+                      <c-card-header>\r\n+                        <strong>{{ currentCsvFile?.name }} - Chart</strong>\r\n+                      </c-card-header>\r\n+                      <c-card-body>\r\n+                        <div *ngIf=\"isLoadingFile\" class=\"text-center py-5\">\r\n+                          <div class=\"spinner-border text-primary\" role=\"status\">\r\n+                            <span class=\"visually-hidden\">Loading chart...</span>\r\n+                          </div>\r\n+                          <p class=\"mt-2\">Loading chart data...</p>\r\n+                        </div>\r\n+                        \r\n+                        <!-- Only show chart when not loading and data exists -->\r\n+                        <ng-container *ngIf=\"!isLoadingFile && currentCsvFile?.chartData\">\r\n+                          <!-- Each time a file changes, this will create a completely new chart component -->\r\n+                          <div [attr.data-chart-id]=\"activeCsvFile\">\r\n+                            <c-chart \r\n+                              type=\"radar\" \r\n+                              [data]=\"currentCsvFile.chartData\" \r\n+                              [options]=\"options\" />\r\n+                          </div>\r\n+                        </ng-container>\r\n+                        \r\n+                        <div *ngIf=\"!isLoadingFile && (!currentCsvFile || !currentCsvFile.chartData)\" class=\"text-center py-5\">\r\n+                          <p class=\"text-muted\">No chart data available</p>\r\n+                        </div>\r\n+                      </c-card-body>\r\n+                    </c-card>\r\n+                  <c-card>\r\n   <c-card-header>\r\n     <div class=\"d-flex justify-content-between align-items-center\">\r\n       <strong>{{ currentCsvFile.name }} - Data</strong>\r\n       <button \r\n"
                },
                {
                    "date": 1748260760507,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -245,18 +245,18 @@\n                         </div>\r\n                       </c-card-body>\r\n                     </c-card>\r\n                   <c-card>\r\n-  <c-card-header>\r\n-    <div class=\"d-flex justify-content-between align-items-center\">\r\n-      <strong>{{ currentCsvFile.name }} - Data</strong>\r\n-      <button \r\n-        cButton \r\n-        color=\"success\" \r\n-        size=\"sm\" \r\n-        variant=\"outline\"\r\n-        (click)=\"downloadFile(currentCsvFile.id)\">\r\n-        <svg \r\n+                            <c-card-header>\r\n+                              <div class=\"d-flex justify-content-between align-items-center\">\r\n+                                <strong>{{ currentCsvFile.name }} - Data</strong>\r\n+                                <button \r\n+                                  cButton \r\n+                                  color=\"success\" \r\n+                                  size=\"sm\" \r\n+                                  variant=\"outline\"\r\n+                                  (click)=\"downloadFile(currentCsvFile.id)\">\r\n+                                  <svg \r\n                                 xmlns=\"http://www.w3.org/2000/svg\" \r\n                                 width=\"16\" \r\n                                 height=\"16\" \r\n                                 fill=\"currentColor\" \r\n"
                },
                {
                    "date": 1748260770530,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -245,18 +245,18 @@\n                         </div>\r\n                       </c-card-body>\r\n                     </c-card>\r\n                   <c-card>\r\n-                            <c-card-header>\r\n-                              <div class=\"d-flex justify-content-between align-items-center\">\r\n-                                <strong>{{ currentCsvFile.name }} - Data</strong>\r\n-                                <button \r\n-                                  cButton \r\n-                                  color=\"success\" \r\n-                                  size=\"sm\" \r\n-                                  variant=\"outline\"\r\n-                                  (click)=\"downloadFile(currentCsvFile.id)\">\r\n-                                  <svg \r\n+                      <c-card-header>\r\n+                        <div class=\"d-flex justify-content-between align-items-center\">\r\n+                          <strong>{{ currentCsvFile.name }} - Data</strong>\r\n+                          <button \r\n+                            cButton \r\n+                            color=\"success\" \r\n+                            size=\"sm\" \r\n+                            variant=\"outline\"\r\n+                            (click)=\"downloadFile(currentCsvFile.id)\">\r\n+                            <svg \r\n                                 xmlns=\"http://www.w3.org/2000/svg\" \r\n                                 width=\"16\" \r\n                                 height=\"16\" \r\n                                 fill=\"currentColor\" \r\n"
                },
                {
                    "date": 1748260782581,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -216,47 +216,47 @@\n                       </c-nav>\r\n                     </c-card-header>\r\n                     <c-card-body *ngIf=\"currentCsvFile\">\r\n                       <!-- Radar Chart -->\r\n-                    <c-card class=\"mb-4\">\r\n-                      <c-card-header>\r\n-                        <strong>{{ currentCsvFile?.name }} - Chart</strong>\r\n-                      </c-card-header>\r\n-                      <c-card-body>\r\n-                        <div *ngIf=\"isLoadingFile\" class=\"text-center py-5\">\r\n-                          <div class=\"spinner-border text-primary\" role=\"status\">\r\n-                            <span class=\"visually-hidden\">Loading chart...</span>\r\n+                      <c-card class=\"mb-4\">\r\n+                        <c-card-header>\r\n+                          <strong>{{ currentCsvFile?.name }} - Chart</strong>\r\n+                        </c-card-header>\r\n+                        <c-card-body>\r\n+                          <div *ngIf=\"isLoadingFile\" class=\"text-center py-5\">\r\n+                            <div class=\"spinner-border text-primary\" role=\"status\">\r\n+                              <span class=\"visually-hidden\">Loading chart...</span>\r\n+                            </div>\r\n+                            <p class=\"mt-2\">Loading chart data...</p>\r\n                           </div>\r\n-                          <p class=\"mt-2\">Loading chart data...</p>\r\n-                        </div>\r\n-                        \r\n-                        <!-- Only show chart when not loading and data exists -->\r\n-                        <ng-container *ngIf=\"!isLoadingFile && currentCsvFile?.chartData\">\r\n-                          <!-- Each time a file changes, this will create a completely new chart component -->\r\n-                          <div [attr.data-chart-id]=\"activeCsvFile\">\r\n-                            <c-chart \r\n-                              type=\"radar\" \r\n-                              [data]=\"currentCsvFile.chartData\" \r\n-                              [options]=\"options\" />\r\n+                          \r\n+                          <!-- Only show chart when not loading and data exists -->\r\n+                          <ng-container *ngIf=\"!isLoadingFile && currentCsvFile?.chartData\">\r\n+                            <!-- Each time a file changes, this will create a completely new chart component -->\r\n+                            <div [attr.data-chart-id]=\"activeCsvFile\">\r\n+                              <c-chart \r\n+                                type=\"radar\" \r\n+                                [data]=\"currentCsvFile.chartData\" \r\n+                                [options]=\"options\" />\r\n+                            </div>\r\n+                          </ng-container>\r\n+                          \r\n+                          <div *ngIf=\"!isLoadingFile && (!currentCsvFile || !currentCsvFile.chartData)\" class=\"text-center py-5\">\r\n+                            <p class=\"text-muted\">No chart data available</p>\r\n                           </div>\r\n-                        </ng-container>\r\n-                        \r\n-                        <div *ngIf=\"!isLoadingFile && (!currentCsvFile || !currentCsvFile.chartData)\" class=\"text-center py-5\">\r\n-                          <p class=\"text-muted\">No chart data available</p>\r\n-                        </div>\r\n-                      </c-card-body>\r\n-                    </c-card>\r\n-                  <c-card>\r\n-                      <c-card-header>\r\n-                        <div class=\"d-flex justify-content-between align-items-center\">\r\n-                          <strong>{{ currentCsvFile.name }} - Data</strong>\r\n-                          <button \r\n-                            cButton \r\n-                            color=\"success\" \r\n-                            size=\"sm\" \r\n-                            variant=\"outline\"\r\n-                            (click)=\"downloadFile(currentCsvFile.id)\">\r\n-                            <svg \r\n+                        </c-card-body>\r\n+                      </c-card>\r\n+                    <c-card>\r\n+                        <c-card-header>\r\n+                          <div class=\"d-flex justify-content-between align-items-center\">\r\n+                            <strong>{{ currentCsvFile.name }} - Data</strong>\r\n+                            <button \r\n+                              cButton \r\n+                              color=\"success\" \r\n+                              size=\"sm\" \r\n+                              variant=\"outline\"\r\n+                              (click)=\"downloadFile(currentCsvFile.id)\">\r\n+                              <svg \r\n                                 xmlns=\"http://www.w3.org/2000/svg\" \r\n                                 width=\"16\" \r\n                                 height=\"16\" \r\n                                 fill=\"currentColor\" \r\n"
                },
                {
                    "date": 1748261380323,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -229,18 +229,18 @@\n                             <p class=\"mt-2\">Loading chart data...</p>\r\n                           </div>\r\n                           \r\n                           <!-- Only show chart when not loading and data exists -->\r\n-                          <ng-container *ngIf=\"!isLoadingFile && currentCsvFile?.chartData\">\r\n-                            <!-- Each time a file changes, this will create a completely new chart component -->\r\n-                            <div [attr.data-chart-id]=\"activeCsvFile\">\r\n-                              <c-chart \r\n-                                type=\"radar\" \r\n-                                [data]=\"currentCsvFile.chartData\" \r\n-                                [options]=\"options\" />\r\n-                            </div>\r\n-                          </ng-container>\r\n-                          \r\n+<ng-container *ngIf=\"!isLoadingFile && currentCsvFile?.chartData\">\r\n+  <!-- Use key binding to force chart recreation -->\r\n+  <div [id]=\"'chart-container-' + activeCsvFile\">\r\n+    <c-chart \r\n+      #radarChart\r\n+      type=\"radar\" \r\n+      [data]=\"getChartData(currentCsvFile)\"\r\n+      [options]=\"options\" />\r\n+  </div>\r\n+</ng-container>                          \r\n                           <div *ngIf=\"!isLoadingFile && (!currentCsvFile || !currentCsvFile.chartData)\" class=\"text-center py-5\">\r\n                             <p class=\"text-muted\">No chart data available</p>\r\n                           </div>\r\n                         </c-card-body>\r\n"
                },
                {
                    "date": 1748298808636,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -193,23 +193,14 @@\n                   <c-card>\r\n                     <c-card-header>\r\n                       <c-nav variant=\"tabs\">\r\n                         <c-nav-item *ngFor=\"let csvFile of csvFiles\">\r\n-                          <a [active]=\"activeCsvFile === csvFile.id\" \r\n-                             cNavLink \r\n-                             class=\"d-flex align-items-center\"\r\n-                             (click)=\"selectCsvFile(csvFile.id)\">\r\n+                          <a [active]=\"activeCsvFile === csvFile.id\" cNavLink class=\"d-flex align-items-center\"\r\n+                            (click)=\"selectCsvFile(csvFile.id)\">\r\n                             {{ csvFile.name }}\r\n                             <!-- Delete button -->\r\n-                            <button \r\n-                              *ngIf=\"!csvFile.isDefault\"\r\n-                              cButton \r\n-                              color=\"danger\" \r\n-                              size=\"sm\" \r\n-                              variant=\"ghost\"\r\n-                              class=\"ms-2 p-0 px-1\"\r\n-                              style=\"line-height: 1;\"\r\n-                              (click)=\"deleteCsvFile(csvFile.id, $event)\">\r\n+                            <button *ngIf=\"!csvFile.isDefault\" cButton color=\"danger\" size=\"sm\" variant=\"ghost\" class=\"ms-2 p-0 px-1\"\r\n+                              style=\"line-height: 1;\" (click)=\"deleteCsvFile(csvFile.id, $event)\">\r\n                               &times;\r\n                             </button>\r\n                           </a>\r\n                         </c-nav-item>\r\n@@ -229,18 +220,18 @@\n                             <p class=\"mt-2\">Loading chart data...</p>\r\n                           </div>\r\n                           \r\n                           <!-- Only show chart when not loading and data exists -->\r\n-<ng-container *ngIf=\"!isLoadingFile && currentCsvFile?.chartData\">\r\n-  <!-- Use key binding to force chart recreation -->\r\n-  <div [id]=\"'chart-container-' + activeCsvFile\">\r\n-    <c-chart \r\n-      #radarChart\r\n-      type=\"radar\" \r\n-      [data]=\"getChartData(currentCsvFile)\"\r\n-      [options]=\"options\" />\r\n-  </div>\r\n-</ng-container>                          \r\n+                          <ng-container *ngIf=\"!isLoadingFile && currentCsvFile?.chartData\">\r\n+                            <!-- Use key binding to force chart recreation -->\r\n+                            <div [id]=\"'chart-container-' + activeCsvFile\">\r\n+                              <c-chart \r\n+                                #radarChart\r\n+                                type=\"radar\" \r\n+                                [data]=\"getChartData(currentCsvFile)\"\r\n+                                [options]=\"options\" />\r\n+                            </div>\r\n+                          </ng-container>                          \r\n                           <div *ngIf=\"!isLoadingFile && (!currentCsvFile || !currentCsvFile.chartData)\" class=\"text-center py-5\">\r\n                             <p class=\"text-muted\">No chart data available</p>\r\n                           </div>\r\n                         </c-card-body>\r\n"
                },
                {
                    "date": 1748304086952,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -193,10 +193,12 @@\n                   <c-card>\r\n                     <c-card-header>\r\n                       <c-nav variant=\"tabs\">\r\n                         <c-nav-item *ngFor=\"let csvFile of csvFiles\">\r\n-                          <a [active]=\"activeCsvFile === csvFile.id\" cNavLink class=\"d-flex align-items-center\"\r\n-                            (click)=\"selectCsvFile(csvFile.id)\">\r\n+                          <a [active]=\"activeCsvFile === csvFile.id\" \r\n+                             cNavLink \r\n+                             class=\"d-flex align-items-center\"\r\n+                             (click)=\"selectCsvFile(csvFile.id)\">\r\n                             {{ csvFile.name }}\r\n                             <!-- Delete button -->\r\n                             <button *ngIf=\"!csvFile.isDefault\" cButton color=\"danger\" size=\"sm\" variant=\"ghost\" class=\"ms-2 p-0 px-1\"\r\n                               style=\"line-height: 1;\" (click)=\"deleteCsvFile(csvFile.id, $event)\">\r\n"
                },
                {
                    "date": 1748304095431,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -193,12 +193,10 @@\n                   <c-card>\r\n                     <c-card-header>\r\n                       <c-nav variant=\"tabs\">\r\n                         <c-nav-item *ngFor=\"let csvFile of csvFiles\">\r\n-                          <a [active]=\"activeCsvFile === csvFile.id\" \r\n-                             cNavLink \r\n-                             class=\"d-flex align-items-center\"\r\n-                             (click)=\"selectCsvFile(csvFile.id)\">\r\n+                          <a [active]=\"activeCsvFile === csvFile.id\" cNavLink class=\"d-flex align-items-center\"\r\n+                            (click)=\"selectCsvFile(csvFile.id)\">\r\n                             {{ csvFile.name }}\r\n                             <!-- Delete button -->\r\n                             <button *ngIf=\"!csvFile.isDefault\" cButton color=\"danger\" size=\"sm\" variant=\"ghost\" class=\"ms-2 p-0 px-1\"\r\n                               style=\"line-height: 1;\" (click)=\"deleteCsvFile(csvFile.id, $event)\">\r\n"
                },
                {
                    "date": 1748304110937,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -193,10 +193,12 @@\n                   <c-card>\r\n                     <c-card-header>\r\n                       <c-nav variant=\"tabs\">\r\n                         <c-nav-item *ngFor=\"let csvFile of csvFiles\">\r\n-                          <a [active]=\"activeCsvFile === csvFile.id\" cNavLink class=\"d-flex align-items-center\"\r\n-                            (click)=\"selectCsvFile(csvFile.id)\">\r\n+                          <a [active]=\"activeCsvFile === csvFile.id\" \r\n+                             cNavLink \r\n+                             class=\"d-flex align-items-center\"\r\n+                             (click)=\"selectCsvFile(csvFile.id)\">\r\n                             {{ csvFile.name }}\r\n                             <!-- Delete button -->\r\n                             <button *ngIf=\"!csvFile.isDefault\" cButton color=\"danger\" size=\"sm\" variant=\"ghost\" class=\"ms-2 p-0 px-1\"\r\n                               style=\"line-height: 1;\" (click)=\"deleteCsvFile(csvFile.id, $event)\">\r\n"
                },
                {
                    "date": 1748304136495,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -199,10 +199,17 @@\n                              class=\"d-flex align-items-center\"\r\n                              (click)=\"selectCsvFile(csvFile.id)\">\r\n                             {{ csvFile.name }}\r\n                             <!-- Delete button -->\r\n-                            <button *ngIf=\"!csvFile.isDefault\" cButton color=\"danger\" size=\"sm\" variant=\"ghost\" class=\"ms-2 p-0 px-1\"\r\n-                              style=\"line-height: 1;\" (click)=\"deleteCsvFile(csvFile.id, $event)\">\r\n+                            <button \r\n+                              *ngIf=\"!csvFile.isDefault\"\r\n+                              cButton \r\n+                              color=\"danger\" \r\n+                              size=\"sm\" \r\n+                              variant=\"ghost\"\r\n+                              class=\"ms-2 p-0 px-1\"\r\n+                              style=\"line-height: 1;\"\r\n+                              (click)=\"deleteCsvFile(csvFile.id, $event)\">\r\n                               &times;\r\n                             </button>\r\n                           </a>\r\n                         </c-nav-item>\r\n@@ -228,9 +235,9 @@\n                             <div [id]=\"'chart-container-' + activeCsvFile\">\r\n                               <c-chart \r\n                                 #radarChart\r\n                                 type=\"radar\" \r\n-                                [data]=\"getChartData(currentCsvFile)\"\r\n+                                [data]=\"currentCsvFile.chartData\"\r\n                                 [options]=\"options\" />\r\n                             </div>\r\n                           </ng-container>                          \r\n                           <div *ngIf=\"!isLoadingFile && (!currentCsvFile || !currentCsvFile.chartData)\" class=\"text-center py-5\">\r\n"
                },
                {
                    "date": 1748304145831,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -235,9 +235,9 @@\n                             <div [id]=\"'chart-container-' + activeCsvFile\">\r\n                               <c-chart \r\n                                 #radarChart\r\n                                 type=\"radar\" \r\n-                                [data]=\"currentCsvFile.chartData\"\r\n+                                [data]=\"getChartData(currentCsvFile)\"\r\n                                 [options]=\"options\" />\r\n                             </div>\r\n                           </ng-container>                          \r\n                           <div *ngIf=\"!isLoadingFile && (!currentCsvFile || !currentCsvFile.chartData)\" class=\"text-center py-5\">\r\n"
                },
                {
                    "date": 1748304180287,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,559 @@\n+<div class=\"dashboard-container\">\r\n+  <c-card class=\"mx-auto\" style=\"max-width: 90%; width: 90%;\">\r\n+    <c-card-body>\r\n+      <c-card>\r\n+        <!-- Update the tab navigation in the header -->\r\n+        <c-card-header>\r\n+          <c-nav layout=\"justified\" variant=\"pills\">\r\n+            <c-nav-item>\r\n+              <a cNavLink \r\n+                 [active]=\"activeTab === 'single'\" \r\n+                 (click)=\"switchTab('single')\"\r\n+                 style=\"cursor: pointer;\">\r\n+                Single Line Prediction\r\n+              </a>\r\n+            </c-nav-item>\r\n+            <c-nav-item>\r\n+              <a cNavLink \r\n+                 [active]=\"activeTab === 'bulk'\" \r\n+                 (click)=\"switchTab('bulk')\"\r\n+                 style=\"cursor: pointer;\">\r\n+                Bulk Prediction\r\n+                <span *ngIf=\"!hasBulkAccess\" class=\"badge bg-secondary ms-1\">PRO</span>\r\n+              </a>\r\n+            </c-nav-item>\r\n+          </c-nav>\r\n+        </c-card-header>\r\n+        <c-card-body>\r\n+          <!-- Single Line Prediction Content -->\r\n+          <div *ngIf=\"activeTab === 'single'\">\r\n+            <c-row>\r\n+              <c-col xs=\"12\" md=\"6\">\r\n+                <c-card class=\"mb-4\">\r\n+                  <c-card-header>\r\n+                    <strong>Single Line Input</strong>\r\n+                  </c-card-header>\r\n+                  <c-card-body>\r\n+                    <form cForm [formGroup]=\"singlePredictionForm\">\r\n+                      <div class=\"mb-3\">\r\n+                        <label cLabel for=\"exampleFormControlTextarea1\">Provide the text to Predict</label>\r\n+                        <textarea cFormControl id=\"exampleFormControlTextarea1\" rows=\"3\" \r\n+                                  formControlName=\"textInput\"></textarea>\r\n+                      </div>\r\n+                      <div class=\"d-flex justify-content-end\">\r\n+                        <button \r\n+                          cButton \r\n+                          color=\"primary\" \r\n+                          type=\"button\" \r\n+                          (click)=\"predictSingleText()\"\r\n+                          [disabled]=\"!singlePredictionForm.valid || isProcessingSinglePrediction\">\r\n+                          Predict\r\n+                        </button>\r\n+                      </div>\r\n+                    </form>\r\n+                  </c-card-body>\r\n+                </c-card>\r\n+                \r\n+                <!-- Add Prediction Results Pie Chart -->\r\n+                <c-card class=\"mb-4\" *ngIf=\"lastSinglePrediction\">\r\n+                  <c-card-header>\r\n+                    <strong>Prediction Results</strong>\r\n+                  </c-card-header>\r\n+                  <c-card-body>\r\n+                    <c-chart type=\"pie\" \r\n+                            [data]=\"singlePredictionChartData\" \r\n+                            [options]=\"pieChartOptions\" />\r\n+                  </c-card-body>\r\n+                </c-card>\r\n+              </c-col>\r\n+              \r\n+              <!-- Add Prediction History Table -->\r\n+              <c-col xs=\"12\" md=\"6\">\r\n+                <c-card>\r\n+                  <c-card-header>\r\n+                    <strong>Prediction History</strong>\r\n+                  </c-card-header>\r\n+                  <c-card-body>\r\n+                    <div *ngIf=\"singlePredictionHistory.length === 0\" class=\"text-center py-5\">\r\n+                      <p class=\"text-muted\">No prediction history available. Make a prediction to see results here.</p>\r\n+                    </div>\r\n+\r\n+                    <!-- Update the Single Prediction History table -->\r\n+                    <div class=\"table-responsive\" style=\"max-height: 600px; overflow-y: auto;\" *ngIf=\"singlePredictionHistory.length > 0\">\r\n+                      <table cTable hover>\r\n+                        <thead>\r\n+                          <tr>\r\n+                            <th>Text</th>\r\n+                            <th>Prediction</th>\r\n+                            <th>Confidence</th>\r\n+                            <th>Sentiment Scores</th>\r\n+                          </tr>\r\n+                        </thead>\r\n+                        <tbody>\r\n+                          <tr *ngFor=\"let prediction of getPaginatedData(singlePredictionHistory, historyCurrentPage, historyPageSize)\"\r\n+                              (click)=\"showHistoryItemChart(prediction)\"\r\n+                              [class.selected-history-item]=\"isSelectedHistoryItem(prediction)\"\r\n+                              style=\"cursor: pointer;\">\r\n+                            <!-- Text column -->\r\n+                            <td style=\"max-width: 200px; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;\" \r\n+                                [title]=\"prediction.text\">\r\n+                              {{ prediction.text }}\r\n+                            </td>\r\n+                            \r\n+                            <!-- Prediction column -->\r\n+                            <td>\r\n+                              <span class=\"badge\" [style.background-color]=\"getCategoryColor(prediction.final_prediction)\">\r\n+                                {{ prediction.final_prediction }}\r\n+                              </span>\r\n+                            </td>\r\n+                            \r\n+                            <!-- Confidence column -->\r\n+                            <td>{{ prediction.confidence }}%</td>\r\n+                            \r\n+                            <!-- Sentiment Scores column -->\r\n+                            <td>\r\n+                              <span class=\"badge rounded-pill bg-primary\" \r\n+                                    (click)=\"showCategoriesModal(prediction.sentiment_scores); $event.stopPropagation();\" \r\n+                                    style=\"cursor: pointer;\">\r\n+                                View Details\r\n+                              </span>\r\n+                            </td>\r\n+                          </tr>\r\n+                        </tbody>\r\n+                      </table>\r\n+                    </div>\r\n+\r\n+                    <!-- Prediction History Pagination controls - Always show but with disabled state when appropriate -->\r\n+                    <div class=\"d-flex justify-content-between align-items-center mt-3\">\r\n+                      <div>\r\n+                        <small class=\"text-muted\">\r\n+                          Showing {{ historyCurrentPage * historyPageSize + 1 }} to \r\n+                          {{ Math.min((historyCurrentPage + 1) * historyPageSize, singlePredictionHistory.length) }} of \r\n+                          {{ singlePredictionHistory.length }} predictions\r\n+                        </small>\r\n+                      </div>\r\n+                      <c-pagination aria-label=\"History pages\" size=\"sm\" *ngIf=\"singlePredictionHistory.length > 0\">\r\n+                        <c-page-item [disabled]=\"historyCurrentPage === 0 || singlePredictionHistory.length <= historyPageSize\">\r\n+                          <a cPageLink (click)=\"changePage(0, 'history')\" style=\"cursor: pointer;\">First</a>\r\n+                        </c-page-item>\r\n+                        <c-page-item [disabled]=\"historyCurrentPage === 0 || singlePredictionHistory.length <= historyPageSize\">\r\n+                          <a cPageLink (click)=\"changePage(historyCurrentPage - 1, 'history')\" style=\"cursor: pointer;\">\r\n+                            <span aria-hidden=\"true\">&laquo;</span>\r\n+                          </a>\r\n+                        </c-page-item>\r\n+                        \r\n+                        <c-page-item *ngFor=\"let page of getVisiblePageNumbers(singlePredictionHistory.length, historyPageSize, historyCurrentPage)\" \r\n+                                    [active]=\"historyCurrentPage === page\">\r\n+                          <a cPageLink (click)=\"changePage(page, 'history')\" style=\"cursor: pointer;\">\r\n+                            {{ page + 1 }}\r\n+                          </a>\r\n+                        </c-page-item>\r\n+                        \r\n+                        <c-page-item [disabled]=\"historyCurrentPage >= Math.ceil(singlePredictionHistory.length / historyPageSize) - 1 || singlePredictionHistory.length <= historyPageSize\">\r\n+                          <a cPageLink (click)=\"changePage(historyCurrentPage + 1, 'history')\" style=\"cursor: pointer;\">\r\n+                            <span aria-hidden=\"true\">&raquo;</span>\r\n+                          </a>\r\n+                        </c-page-item>\r\n+                        <c-page-item [disabled]=\"historyCurrentPage >= Math.ceil(singlePredictionHistory.length / historyPageSize) - 1 || singlePredictionHistory.length <= historyPageSize\">\r\n+                          <a cPageLink (click)=\"changePage(Math.ceil(singlePredictionHistory.length / historyPageSize) - 1, 'history')\" style=\"cursor: pointer;\">Last</a>\r\n+                        </c-page-item>\r\n+                      </c-pagination>\r\n+                      \r\n+                      <div>\r\n+                        <select \r\n+                          cSelect \r\n+                          size=\"sm\" \r\n+                          [(ngModel)]=\"historyPageSize\" \r\n+                          (change)=\"onPageSizeChange('history')\" \r\n+                          style=\"width: auto;\"\r\n+                          [ngModelOptions]=\"{standalone: true}\">\r\n+                          <option [value]=\"5\">5 rows</option>\r\n+                          <option [value]=\"10\">10 rows</option>\r\n+                          <option [value]=\"25\">25 rows</option>\r\n+                          <option [value]=\"50\">50 rows</option>\r\n+                        </select>\r\n+                      </div>\r\n+                    </div>\r\n+                  </c-card-body>\r\n+                </c-card>\r\n+              </c-col>\r\n+            </c-row>\r\n+          </div>\r\n+          <!-- Bulk Prediction Content -->\r\n+          <div *ngIf=\"activeTab === 'bulk'\" class=\"premium-content-container\">\r\n+            <!-- PRO Badge in the corner -->\r\n+            <div class=\"premium-tag\" *ngIf=\"!hasBulkAccess\">PRO</div>\r\n+\r\n+            <!-- Content will be blurred if no access -->\r\n+            <div [class.premium-content-blur]=\"!hasBulkAccess\">\r\n+              <c-row>\r\n+                <!-- Left Column: CSV Data Visualization -->\r\n+                <c-col md=\"8\">\r\n+                  <!-- CSV Data Visualization -->\r\n+                  <c-card>\r\n+                    <c-card-header>\r\n+                      <c-nav variant=\"tabs\">\r\n+                        <c-nav-item *ngFor=\"let csvFile of csvFiles\">\r\n+                          <a [active]=\"activeCsvFile === csvFile.id\" \r\n+                             cNavLink \r\n+                             class=\"d-flex align-items-center\"\r\n+                             (click)=\"selectCsvFile(csvFile.id)\">\r\n+                            {{ csvFile.name }}\r\n+                            <!-- Delete button -->\r\n+                            <button \r\n+                              *ngIf=\"!csvFile.isDefault\"\r\n+                              cButton \r\n+                              color=\"danger\" \r\n+                              size=\"sm\" \r\n+                              variant=\"ghost\"\r\n+                              class=\"ms-2 p-0 px-1\"\r\n+                              style=\"line-height: 1;\"\r\n+                              (click)=\"deleteCsvFile(csvFile.id, $event)\">\r\n+                              &times;\r\n+                            </button>\r\n+                          </a>\r\n+                        </c-nav-item>\r\n+                      </c-nav>\r\n+                    </c-card-header>\r\n+                    <c-card-body *ngIf=\"currentCsvFile\">\r\n+                      <!-- Radar Chart -->\r\n+                      <c-card class=\"mb-4\">\r\n+                        <c-card-header>\r\n+                          <strong>{{ currentCsvFile?.name }} - Chart</strong>\r\n+                        </c-card-header>\r\n+                        <c-card-body>\r\n+                          <div *ngIf=\"isLoadingFile\" class=\"text-center py-5\">\r\n+                            <div class=\"spinner-border text-primary\" role=\"status\">\r\n+                              <span class=\"visually-hidden\">Loading chart...</span>\r\n+                            </div>\r\n+                            <p class=\"mt-2\">Loading chart data...</p>\r\n+                          </div>\r\n+                          \r\n+                          <!-- Only show chart when not loading and data exists -->\r\n+                          <ng-container *ngIf=\"!isLoadingFile && currentCsvFile?.chartData\">\r\n+                            <!-- Use key binding to force chart recreation -->\r\n+                            <div [id]=\"'chart-container-' + activeCsvFile\">\r\n+                              <c-chart \r\n+                                #radarChart\r\n+                                type=\"radar\" \r\n+                                [data]=\"getChartData(currentCsvFile, csvFile.id)\"\r\n+                                [options]=\"options\" />\r\n+                            </div>\r\n+                          </ng-container>                          \r\n+                          <div *ngIf=\"!isLoadingFile && (!currentCsvFile || !currentCsvFile.chartData)\" class=\"text-center py-5\">\r\n+                            <p class=\"text-muted\">No chart data available</p>\r\n+                          </div>\r\n+                        </c-card-body>\r\n+                      </c-card>\r\n+                    <c-card>\r\n+                        <c-card-header>\r\n+                          <div class=\"d-flex justify-content-between align-items-center\">\r\n+                            <strong>{{ currentCsvFile.name }} - Data</strong>\r\n+                            <button \r\n+                              cButton \r\n+                              color=\"success\" \r\n+                              size=\"sm\" \r\n+                              variant=\"outline\"\r\n+                              (click)=\"downloadFile(currentCsvFile.id)\">\r\n+                              <svg \r\n+                                xmlns=\"http://www.w3.org/2000/svg\" \r\n+                                width=\"16\" \r\n+                                height=\"16\" \r\n+                                fill=\"currentColor\" \r\n+                                style=\"transform: scaleY(-1);\">\r\n+                                class=\"me-1\"\r\n+                                viewBox=\"0 0 16 16\">\r\n+                                <path d=\"M8 0a8 8 0 0 0-8 8 8 8 0 0 0 8 8 8 8 0 0 0 8-8 8 8 0 0 0-8-8zm0 2.5a5.5 5.5 0 1 1 0 11 5.5 5.5 0 0 1 0-11zM6 8v3h4V8h2l-4-4-4 4h2z\"/>\r\n+                              </svg>\r\n+                              Download CSV\r\n+                            </button>\r\n+                          </div>\r\n+                        </c-card-header>\r\n+                        <c-card-body>\r\n+                          <div class=\"table-responsive\" style=\"max-height: 450px; overflow-y: auto;\">\r\n+                            <table cTable hover>\r\n+                              <thead>\r\n+                                <tr>\r\n+                                  <th>Text</th>\r\n+                                  <th>Prediction</th>\r\n+                                  <th>Confidence</th>\r\n+                                  <th>Sentiment Scores</th>\r\n+                                </tr>\r\n+                              </thead>\r\n+                              <tbody>\r\n+                                <tr *ngFor=\"let row of getPaginatedData(currentCsvFile.data, currentPage, pageSize)\">\r\n+                                  <!-- Text column -->\r\n+                                  <td style=\"max-width: 200px; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;\" \r\n+                                      [title]=\"row.text || row.Text\">\r\n+                                    {{ row.text || row.Text }}\r\n+                                  </td>\r\n+                                  \r\n+                                  <!-- Prediction column -->\r\n+                                  <td>\r\n+                                    <span class=\"badge\" [style.background-color]=\"getCategoryColor(row.final_prediction || row.Prediction)\">\r\n+                                      {{ row.final_prediction || row.Prediction }}\r\n+                                    </span>\r\n+                                  </td>\r\n+                                  \r\n+                                  <!-- Confidence column -->\r\n+                                  <td>{{ row.confidence || row.Confidence }}%</td>\r\n+                                  \r\n+                                  <!-- Categories/Sentiment Scores column -->\r\n+                                  <td>\r\n+                                    <span class=\"badge rounded-pill bg-primary\" \r\n+                                          (click)=\"showCategoriesModal(row.sentiment_scores || row.categories)\" \r\n+                                          style=\"cursor: pointer;\">\r\n+                                      View Details\r\n+                                    </span>\r\n+                                  </td>\r\n+                                </tr>\r\n+                              </tbody>\r\n+                            </table>\r\n+                          </div> \r\n+                          <!-- Pagination controls -->\r\n+                          <div class=\"d-flex justify-content-between align-items-center mt-3\">\r\n+                            <div>\r\n+                              <small class=\"text-muted\">\r\n+                                Showing {{ currentPage * pageSize + 1 }} to \r\n+                                {{ Math.min((currentPage + 1) * pageSize, currentCsvFile.data.length) }} of \r\n+                                {{ currentCsvFile.data.length }} rows\r\n+                              </small>\r\n+                            </div>\r\n+                            <c-pagination aria-label=\"Data table pages\" size=\"sm\">\r\n+                              <c-page-item [disabled]=\"currentPage === 0\">\r\n+                                <a cPageLink (click)=\"changePage(0, 'bulk')\" style=\"cursor: pointer;\">First</a>\r\n+                              </c-page-item>\r\n+                              <c-page-item [disabled]=\"currentPage === 0\">\r\n+                                <a cPageLink (click)=\"changePage(currentPage - 1, 'bulk')\" style=\"cursor: pointer;\">\r\n+                                  <span aria-hidden=\"true\">&laquo;</span>\r\n+                                </a>\r\n+                              </c-page-item>\r\n+                              \r\n+                              <c-page-item *ngFor=\"let page of getVisiblePageNumbers(currentCsvFile.data.length, pageSize, currentPage)\" \r\n+                                          [active]=\"currentPage === page\">\r\n+                                <a cPageLink (click)=\"changePage(page, 'bulk')\" style=\"cursor: pointer;\">\r\n+                                  {{ page + 1 }}\r\n+                                </a>\r\n+                              </c-page-item>\r\n+                              \r\n+                              <c-page-item [disabled]=\"currentPage >= Math.ceil(currentCsvFile.data.length / pageSize) - 1\">\r\n+                                <a cPageLink (click)=\"changePage(currentPage + 1, 'bulk')\" style=\"cursor: pointer;\">\r\n+                                  <span aria-hidden=\"true\">&raquo;</span>\r\n+                                </a>\r\n+                              </c-page-item>\r\n+                              <c-page-item [disabled]=\"currentPage >= Math.ceil(currentCsvFile.data.length / pageSize) - 1\">\r\n+                                <a cPageLink (click)=\"changePage(Math.ceil(currentCsvFile.data.length / pageSize) - 1, 'bulk')\" style=\"cursor: pointer;\">Last</a>\r\n+                              </c-page-item>\r\n+                            </c-pagination>\r\n+                            \r\n+                            <div>\r\n+                              <select \r\n+                                cSelect \r\n+                                size=\"sm\" \r\n+                                [(ngModel)]=\"pageSize\" \r\n+                                (change)=\"onPageSizeChange('bulk')\" \r\n+                                style=\"width: auto;\"\r\n+                                [ngModelOptions]=\"{standalone: true}\">\r\n+                                <option [value]=\"10\">10 rows</option>\r\n+                                <option [value]=\"25\">25 rows</option>\r\n+                                <option [value]=\"50\">50 rows</option>\r\n+                                <option [value]=\"100\">100 rows</option>\r\n+                              </select>\r\n+                            </div>\r\n+                          </div>\r\n+                        </c-card-body>\r\n+                      </c-card>\r\n+                    </c-card-body>\r\n+                    <c-card-body *ngIf=\"!currentCsvFile\" class=\"text-center py-5\">\r\n+                      <p class=\"text-muted\">No files selected. Please select a file from \"My Files\".</p>\r\n+                    </c-card-body>\r\n+                  </c-card>\r\n+                </c-col>\r\n+\r\n+                <!-- Right Column: Upload and File Management -->\r\n+                <c-col md=\"4\">\r\n+                  <!-- File Upload Card -->\r\n+                  <c-card class=\"mb-4\">\r\n+                    <c-card-header>\r\n+                      <strong>Upload CSV File</strong>\r\n+                    </c-card-header>\r\n+                    <c-card-body>\r\n+                      <form cForm [formGroup]=\"fileUploadForm\">\r\n+                        <div class=\"mb-3\">\r\n+                          <label cLabel for=\"formFile\">Choose CSV file</label>\r\n+                          <input cFormControl type=\"file\" id=\"formFile\" accept=\".csv\" (change)=\"onFileSelected($event)\">\r\n+                          <p *ngIf=\"fileUploadForm.get('fileName')?.value\" class=\"mt-2 mb-0\">\r\n+                            Selected: {{ fileUploadForm.get('fileName')?.value }}\r\n+                          </p>\r\n+                        </div>\r\n+                        <div class=\"d-grid\">\r\n+                          <button cButton color=\"primary\" type=\"button\" (click)=\"predictCsvFile()\"\r\n+                            [disabled]=\"!fileUploadForm.get('csvFile')?.value\">\r\n+                            Predict\r\n+                          </button>\r\n+                        </div>\r\n+                      </form>\r\n+                    </c-card-body>\r\n+                  </c-card>\r\n+                  \r\n+                  <!-- Pending Files Card -->\r\n+                  <c-card class=\"mb-4\">\r\n+                    <c-card-header>\r\n+                      <strong>Pending Files</strong>\r\n+                    </c-card-header>\r\n+                    <c-card-body>\r\n+                      <div *ngIf=\"pendingFiles.length === 0\" class=\"text-center py-3\">\r\n+                        <p class=\"text-muted mb-0\">No pending files</p>\r\n+                      </div>\r\n+                      <div style=\"max-height: 200px; overflow-y: auto;\" *ngIf=\"pendingFiles.length > 0\">\r\n+                        <ul cListGroup>\r\n+                          <li cListGroupItem *ngFor=\"let file of pendingFiles\" class=\"d-flex align-items-center\">\r\n+                            <div class=\"spinner-border spinner-border-sm text-primary me-2\" role=\"status\">\r\n+                              <span class=\"visually-hidden\">Processing...</span>\r\n+                            </div>\r\n+                            <span class=\"text-truncate\">{{ file.name }}</span>\r\n+                            <small class=\"text-muted ms-auto\">processing...</small>\r\n+                          </li>\r\n+                        </ul>\r\n+                      </div>\r\n+                      <div *ngIf=\"pendingFiles.length > 5\" class=\"text-end mt-2\">\r\n+                        <small class=\"text-muted\">Showing {{ pendingFiles.length }} files</small>\r\n+                      </div>\r\n+                    </c-card-body>\r\n+                  </c-card>\r\n+                                  <c-card>\r\n+                  <c-card-header>\r\n+                    <strong>My Files</strong>\r\n+                  </c-card-header>\r\n+                  <c-card-body>\r\n+                    <!-- Add search input -->\r\n+                    <div class=\"mb-3\">\r\n+                      <div class=\"input-group\">\r\n+                        <!-- <svg cIcon name=\"cil-search\"></svg> -->\r\n+                        <input \r\n+                          cFormControl \r\n+                          type=\"text\" \r\n+                          placeholder=\"Search files...\" \r\n+                          [(ngModel)]=\"fileSearchQuery\"\r\n+                          [ngModelOptions]=\"{standalone: true}\"\r\n+                          (input)=\"filterFiles()\">\r\n+                        <button \r\n+                          *ngIf=\"fileSearchQuery\" \r\n+                          cButton \r\n+                          color=\"secondary\" \r\n+                          variant=\"outline\" \r\n+                          type=\"button\"\r\n+                          (click)=\"clearFileSearch()\">\r\n+                          &times;\r\n+                        </button>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div *ngIf=\"filteredFiles.length === 0\" class=\"text-center py-3\">\r\n+                      <p class=\"text-muted mb-0\">\r\n+                        {{ myFiles.length === 0 ? 'No files available' : 'No matching files' }}\r\n+                      </p>\r\n+                    </div>\r\n+                    \r\n+                    <div style=\"max-height: 240px; overflow-y: auto;\" *ngIf=\"filteredFiles.length > 0\">\r\n+                      <ul cListGroup>\r\n+                        <li cListGroupItem \r\n+                          *ngFor=\"let file of filteredFiles\"\r\n+                          [active]=\"activeCsvFile === file.id\"\r\n+                          style=\"cursor: pointer;\"\r\n+                          (click)=\"loadFileToVisualization(file.id)\">\r\n+                          <div class=\"d-flex align-items-center\">\r\n+                            <span class=\"text-truncate\">{{ file.name }}</span>\r\n+                            <small class=\"text-muted ms-auto\">\r\n+                              {{ file.timestamp | date:'short' }}\r\n+                            </small>\r\n+                          </div>\r\n+                        </li>\r\n+                      </ul>\r\n+                    </div>\r\n+                    \r\n+                    <div *ngIf=\"!fileSearchQuery && myFiles.length > 5\" class=\"text-end mt-2\">\r\n+                      <small class=\"text-muted\">\r\n+                        Showing {{ filteredFiles.length }} of {{ myFiles.length }} files\r\n+                      </small>\r\n+                    </div>\r\n+                    <div *ngIf=\"fileSearchQuery && filteredFiles.length > 0\" class=\"text-end mt-2\">\r\n+                      <small class=\"text-muted\">\r\n+                        Found {{ filteredFiles.length }} {{ filteredFiles.length === 1 ? 'match' : 'matches' }}\r\n+                      </small>\r\n+                    </div>\r\n+                  </c-card-body>\r\n+                </c-card>\r\n+                </c-col>\r\n+              </c-row>\r\n+            </div>\r\n+            \r\n+            <!-- Premium Overlay - only shown when user doesn't have access -->\r\n+            <div class=\"premium-overlay\" *ngIf=\"!hasBulkAccess\">\r\n+              <div class=\"premium-message\">\r\n+                <h4>Upgrade to Pro to Access Bulk Prediction</h4>\r\n+                <p>Process entire CSV files at once with our premium bulk prediction feature.</p>\r\n+                <ul class=\"text-start mb-4\">\r\n+                  <li>Upload & analyze full datasets</li>\r\n+                  <li>Get batch results instantly</li>\r\n+                  <li>Export complete result sets</li>\r\n+                  <li>Track processing history</li>\r\n+                </ul>\r\n+                <button \r\n+                  cButton \r\n+                  color=\"primary\" \r\n+                  size=\"lg\" \r\n+                  class=\"px-4\"\r\n+                  (click)=\"navigateToSubscription()\">\r\n+                  Upgrade to Pro\r\n+                </button>\r\n+                <div class=\"mt-3\">\r\n+                  <small>\r\n+                    If the button doesn't work, <a href=\"/subscription\">click here</a> instead.\r\n+                  </small>\r\n+                </div>\r\n+              </div>\r\n+            </div>\r\n+          </div>\r\n+        </c-card-body>\r\n+      </c-card>\r\n+    </c-card-body>\r\n+  </c-card>\r\n+\r\n+  <!-- Simple Categories Modal -->\r\n+  <c-card *ngIf=\"showCategoryModal\" class=\"position-fixed\" \r\n+          style=\"top: 50%; left: 50%; transform: translate(-50%, -50%); z-index: 1050; max-width: 500px;\">\r\n+    <c-card-header class=\"d-flex justify-content-between align-items-center\">\r\n+      <strong>Category Details</strong>\r\n+      <button cButton color=\"secondary\" variant=\"ghost\" size=\"sm\" (click)=\"showCategoryModal = false\">\r\n+        &times;\r\n+      </button>\r\n+    </c-card-header>\r\n+    <c-card-body>\r\n+      <table cTable striped>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>Category</th>\r\n+            <th>Confidence</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          <tr *ngFor=\"let category of selectedCategories\">\r\n+            <td>\r\n+              <span class=\"badge\" [style.background-color]=\"getCategoryColor(category.name)\">\r\n+                {{ category.name }}\r\n+              </span>\r\n+            </td>\r\n+            <td>{{ category.value }}%</td>\r\n+          </tr>\r\n+        </tbody>\r\n+      </table>\r\n+    </c-card-body>\r\n+  </c-card>\r\n+\r\n+  <!-- Modal backdrop -->\r\n+  <div *ngIf=\"showCategoryModal\" class=\"position-fixed top-0 start-0 w-100 h-100\" \r\n+      style=\"background-color: rgba(0,0,0,0.5); z-index: 1040;\"\r\n+      (click)=\"showCategoryModal = false\">\r\n+  </div>\r\n+</div>\n\\ No newline at end of file\n"
                },
                {
                    "date": 1748304211743,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -235,567 +235,8 @@\n                             <div [id]=\"'chart-container-' + activeCsvFile\">\r\n                               <c-chart \r\n                                 #radarChart\r\n                                 type=\"radar\" \r\n-                                [data]=\"getChartData(currentCsvFile, csvFile.id)\"\r\n-                                [options]=\"options\" />\r\n-                            </div>\r\n-                          </ng-container>                          \r\n-                          <div *ngIf=\"!isLoadingFile && (!currentCsvFile || !currentCsvFile.chartData)\" class=\"text-center py-5\">\r\n-                            <p class=\"text-muted\">No chart data available</p>\r\n-                          </div>\r\n-                        </c-card-body>\r\n-                      </c-card>\r\n-                    <c-card>\r\n-                        <c-card-header>\r\n-                          <div class=\"d-flex justify-content-between align-items-center\">\r\n-                            <strong>{{ currentCsvFile.name }} - Data</strong>\r\n-                            <button \r\n-                              cButton \r\n-                              color=\"success\" \r\n-                              size=\"sm\" \r\n-                              variant=\"outline\"\r\n-                              (click)=\"downloadFile(currentCsvFile.id)\">\r\n-                              <svg \r\n-                                xmlns=\"http://www.w3.org/2000/svg\" \r\n-                                width=\"16\" \r\n-                                height=\"16\" \r\n-                                fill=\"currentColor\" \r\n-                                style=\"transform: scaleY(-1);\">\r\n-                                class=\"me-1\"\r\n-                                viewBox=\"0 0 16 16\">\r\n-                                <path d=\"M8 0a8 8 0 0 0-8 8 8 8 0 0 0 8 8 8 8 0 0 0 8-8 8 8 0 0 0-8-8zm0 2.5a5.5 5.5 0 1 1 0 11 5.5 5.5 0 0 1 0-11zM6 8v3h4V8h2l-4-4-4 4h2z\"/>\r\n-                              </svg>\r\n-                              Download CSV\r\n-                            </button>\r\n-                          </div>\r\n-                        </c-card-header>\r\n-                        <c-card-body>\r\n-                          <div class=\"table-responsive\" style=\"max-height: 450px; overflow-y: auto;\">\r\n-                            <table cTable hover>\r\n-                              <thead>\r\n-                                <tr>\r\n-                                  <th>Text</th>\r\n-                                  <th>Prediction</th>\r\n-                                  <th>Confidence</th>\r\n-                                  <th>Sentiment Scores</th>\r\n-                                </tr>\r\n-                              </thead>\r\n-                              <tbody>\r\n-                                <tr *ngFor=\"let row of getPaginatedData(currentCsvFile.data, currentPage, pageSize)\">\r\n-                                  <!-- Text column -->\r\n-                                  <td style=\"max-width: 200px; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;\" \r\n-                                      [title]=\"row.text || row.Text\">\r\n-                                    {{ row.text || row.Text }}\r\n-                                  </td>\r\n-                                  \r\n-                                  <!-- Prediction column -->\r\n-                                  <td>\r\n-                                    <span class=\"badge\" [style.background-color]=\"getCategoryColor(row.final_prediction || row.Prediction)\">\r\n-                                      {{ row.final_prediction || row.Prediction }}\r\n-                                    </span>\r\n-                                  </td>\r\n-                                  \r\n-                                  <!-- Confidence column -->\r\n-                                  <td>{{ row.confidence || row.Confidence }}%</td>\r\n-                                  \r\n-                                  <!-- Categories/Sentiment Scores column -->\r\n-                                  <td>\r\n-                                    <span class=\"badge rounded-pill bg-primary\" \r\n-                                          (click)=\"showCategoriesModal(row.sentiment_scores || row.categories)\" \r\n-                                          style=\"cursor: pointer;\">\r\n-                                      View Details\r\n-                                    </span>\r\n-                                  </td>\r\n-                                </tr>\r\n-                              </tbody>\r\n-                            </table>\r\n-                          </div> \r\n-                          <!-- Pagination controls -->\r\n-                          <div class=\"d-flex justify-content-between align-items-center mt-3\">\r\n-                            <div>\r\n-                              <small class=\"text-muted\">\r\n-                                Showing {{ currentPage * pageSize + 1 }} to \r\n-                                {{ Math.min((currentPage + 1) * pageSize, currentCsvFile.data.length) }} of \r\n-                                {{ currentCsvFile.data.length }} rows\r\n-                              </small>\r\n-                            </div>\r\n-                            <c-pagination aria-label=\"Data table pages\" size=\"sm\">\r\n-                              <c-page-item [disabled]=\"currentPage === 0\">\r\n-                                <a cPageLink (click)=\"changePage(0, 'bulk')\" style=\"cursor: pointer;\">First</a>\r\n-                              </c-page-item>\r\n-                              <c-page-item [disabled]=\"currentPage === 0\">\r\n-                                <a cPageLink (click)=\"changePage(currentPage - 1, 'bulk')\" style=\"cursor: pointer;\">\r\n-                                  <span aria-hidden=\"true\">&laquo;</span>\r\n-                                </a>\r\n-                              </c-page-item>\r\n-                              \r\n-                              <c-page-item *ngFor=\"let page of getVisiblePageNumbers(currentCsvFile.data.length, pageSize, currentPage)\" \r\n-                                          [active]=\"currentPage === page\">\r\n-                                <a cPageLink (click)=\"changePage(page, 'bulk')\" style=\"cursor: pointer;\">\r\n-                                  {{ page + 1 }}\r\n-                                </a>\r\n-                              </c-page-item>\r\n-                              \r\n-                              <c-page-item [disabled]=\"currentPage >= Math.ceil(currentCsvFile.data.length / pageSize) - 1\">\r\n-                                <a cPageLink (click)=\"changePage(currentPage + 1, 'bulk')\" style=\"cursor: pointer;\">\r\n-                                  <span aria-hidden=\"true\">&raquo;</span>\r\n-                                </a>\r\n-                              </c-page-item>\r\n-                              <c-page-item [disabled]=\"currentPage >= Math.ceil(currentCsvFile.data.length / pageSize) - 1\">\r\n-                                <a cPageLink (click)=\"changePage(Math.ceil(currentCsvFile.data.length / pageSize) - 1, 'bulk')\" style=\"cursor: pointer;\">Last</a>\r\n-                              </c-page-item>\r\n-                            </c-pagination>\r\n-                            \r\n-                            <div>\r\n-                              <select \r\n-                                cSelect \r\n-                                size=\"sm\" \r\n-                                [(ngModel)]=\"pageSize\" \r\n-                                (change)=\"onPageSizeChange('bulk')\" \r\n-                                style=\"width: auto;\"\r\n-                                [ngModelOptions]=\"{standalone: true}\">\r\n-                                <option [value]=\"10\">10 rows</option>\r\n-                                <option [value]=\"25\">25 rows</option>\r\n-                                <option [value]=\"50\">50 rows</option>\r\n-                                <option [value]=\"100\">100 rows</option>\r\n-                              </select>\r\n-                            </div>\r\n-                          </div>\r\n-                        </c-card-body>\r\n-                      </c-card>\r\n-                    </c-card-body>\r\n-                    <c-card-body *ngIf=\"!currentCsvFile\" class=\"text-center py-5\">\r\n-                      <p class=\"text-muted\">No files selected. Please select a file from \"My Files\".</p>\r\n-                    </c-card-body>\r\n-                  </c-card>\r\n-                </c-col>\r\n-\r\n-                <!-- Right Column: Upload and File Management -->\r\n-                <c-col md=\"4\">\r\n-                  <!-- File Upload Card -->\r\n-                  <c-card class=\"mb-4\">\r\n-                    <c-card-header>\r\n-                      <strong>Upload CSV File</strong>\r\n-                    </c-card-header>\r\n-                    <c-card-body>\r\n-                      <form cForm [formGroup]=\"fileUploadForm\">\r\n-                        <div class=\"mb-3\">\r\n-                          <label cLabel for=\"formFile\">Choose CSV file</label>\r\n-                          <input cFormControl type=\"file\" id=\"formFile\" accept=\".csv\" (change)=\"onFileSelected($event)\">\r\n-                          <p *ngIf=\"fileUploadForm.get('fileName')?.value\" class=\"mt-2 mb-0\">\r\n-                            Selected: {{ fileUploadForm.get('fileName')?.value }}\r\n-                          </p>\r\n-                        </div>\r\n-                        <div class=\"d-grid\">\r\n-                          <button cButton color=\"primary\" type=\"button\" (click)=\"predictCsvFile()\"\r\n-                            [disabled]=\"!fileUploadForm.get('csvFile')?.value\">\r\n-                            Predict\r\n-                          </button>\r\n-                        </div>\r\n-                      </form>\r\n-                    </c-card-body>\r\n-                  </c-card>\r\n-                  \r\n-                  <!-- Pending Files Card -->\r\n-                  <c-card class=\"mb-4\">\r\n-                    <c-card-header>\r\n-                      <strong>Pending Files</strong>\r\n-                    </c-card-header>\r\n-                    <c-card-body>\r\n-                      <div *ngIf=\"pendingFiles.length === 0\" class=\"text-center py-3\">\r\n-                        <p class=\"text-muted mb-0\">No pending files</p>\r\n-                      </div>\r\n-                      <div style=\"max-height: 200px; overflow-y: auto;\" *ngIf=\"pendingFiles.length > 0\">\r\n-                        <ul cListGroup>\r\n-                          <li cListGroupItem *ngFor=\"let file of pendingFiles\" class=\"d-flex align-items-center\">\r\n-                            <div class=\"spinner-border spinner-border-sm text-primary me-2\" role=\"status\">\r\n-                              <span class=\"visually-hidden\">Processing...</span>\r\n-                            </div>\r\n-                            <span class=\"text-truncate\">{{ file.name }}</span>\r\n-                            <small class=\"text-muted ms-auto\">processing...</small>\r\n-                          </li>\r\n-                        </ul>\r\n-                      </div>\r\n-                      <div *ngIf=\"pendingFiles.length > 5\" class=\"text-end mt-2\">\r\n-                        <small class=\"text-muted\">Showing {{ pendingFiles.length }} files</small>\r\n-                      </div>\r\n-                    </c-card-body>\r\n-                  </c-card>\r\n-                                  <c-card>\r\n-                  <c-card-header>\r\n-                    <strong>My Files</strong>\r\n-                  </c-card-header>\r\n-                  <c-card-body>\r\n-                    <!-- Add search input -->\r\n-                    <div class=\"mb-3\">\r\n-                      <div class=\"input-group\">\r\n-                        <!-- <svg cIcon name=\"cil-search\"></svg> -->\r\n-                        <input \r\n-                          cFormControl \r\n-                          type=\"text\" \r\n-                          placeholder=\"Search files...\" \r\n-                          [(ngModel)]=\"fileSearchQuery\"\r\n-                          [ngModelOptions]=\"{standalone: true}\"\r\n-                          (input)=\"filterFiles()\">\r\n-                        <button \r\n-                          *ngIf=\"fileSearchQuery\" \r\n-                          cButton \r\n-                          color=\"secondary\" \r\n-                          variant=\"outline\" \r\n-                          type=\"button\"\r\n-                          (click)=\"clearFileSearch()\">\r\n-                          &times;\r\n-                        </button>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div *ngIf=\"filteredFiles.length === 0\" class=\"text-center py-3\">\r\n-                      <p class=\"text-muted mb-0\">\r\n-                        {{ myFiles.length === 0 ? 'No files available' : 'No matching files' }}\r\n-                      </p>\r\n-                    </div>\r\n-                    \r\n-                    <div style=\"max-height: 240px; overflow-y: auto;\" *ngIf=\"filteredFiles.length > 0\">\r\n-                      <ul cListGroup>\r\n-                        <li cListGroupItem \r\n-                          *ngFor=\"let file of filteredFiles\"\r\n-                          [active]=\"activeCsvFile === file.id\"\r\n-                          style=\"cursor: pointer;\"\r\n-                          (click)=\"loadFileToVisualization(file.id)\">\r\n-                          <div class=\"d-flex align-items-center\">\r\n-                            <span class=\"text-truncate\">{{ file.name }}</span>\r\n-                            <small class=\"text-muted ms-auto\">\r\n-                              {{ file.timestamp | date:'short' }}\r\n-                            </small>\r\n-                          </div>\r\n-                        </li>\r\n-                      </ul>\r\n-                    </div>\r\n-                    \r\n-                    <div *ngIf=\"!fileSearchQuery && myFiles.length > 5\" class=\"text-end mt-2\">\r\n-                      <small class=\"text-muted\">\r\n-                        Showing {{ filteredFiles.length }} of {{ myFiles.length }} files\r\n-                      </small>\r\n-                    </div>\r\n-                    <div *ngIf=\"fileSearchQuery && filteredFiles.length > 0\" class=\"text-end mt-2\">\r\n-                      <small class=\"text-muted\">\r\n-                        Found {{ filteredFiles.length }} {{ filteredFiles.length === 1 ? 'match' : 'matches' }}\r\n-                      </small>\r\n-                    </div>\r\n-                  </c-card-body>\r\n-                </c-card>\r\n-                </c-col>\r\n-              </c-row>\r\n-            </div>\r\n-            \r\n-            <!-- Premium Overlay - only shown when user doesn't have access -->\r\n-            <div class=\"premium-overlay\" *ngIf=\"!hasBulkAccess\">\r\n-              <div class=\"premium-message\">\r\n-                <h4>Upgrade to Pro to Access Bulk Prediction</h4>\r\n-                <p>Process entire CSV files at once with our premium bulk prediction feature.</p>\r\n-                <ul class=\"text-start mb-4\">\r\n-                  <li>Upload & analyze full datasets</li>\r\n-                  <li>Get batch results instantly</li>\r\n-                  <li>Export complete result sets</li>\r\n-                  <li>Track processing history</li>\r\n-                </ul>\r\n-                <button \r\n-                  cButton \r\n-                  color=\"primary\" \r\n-                  size=\"lg\" \r\n-                  class=\"px-4\"\r\n-                  (click)=\"navigateToSubscription()\">\r\n-                  Upgrade to Pro\r\n-                </button>\r\n-                <div class=\"mt-3\">\r\n-                  <small>\r\n-                    If the button doesn't work, <a href=\"/subscription\">click here</a> instead.\r\n-                  </small>\r\n-                </div>\r\n-              </div>\r\n-            </div>\r\n-          </div>\r\n-        </c-card-body>\r\n-      </c-card>\r\n-    </c-card-body>\r\n-  </c-card>\r\n-\r\n-  <!-- Simple Categories Modal -->\r\n-  <c-card *ngIf=\"showCategoryModal\" class=\"position-fixed\" \r\n-          style=\"top: 50%; left: 50%; transform: translate(-50%, -50%); z-index: 1050; max-width: 500px;\">\r\n-    <c-card-header class=\"d-flex justify-content-between align-items-center\">\r\n-      <strong>Category Details</strong>\r\n-      <button cButton color=\"secondary\" variant=\"ghost\" size=\"sm\" (click)=\"showCategoryModal = false\">\r\n-        &times;\r\n-      </button>\r\n-    </c-card-header>\r\n-    <c-card-body>\r\n-      <table cTable striped>\r\n-        <thead>\r\n-          <tr>\r\n-            <th>Category</th>\r\n-            <th>Confidence</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          <tr *ngFor=\"let category of selectedCategories\">\r\n-            <td>\r\n-              <span class=\"badge\" [style.background-color]=\"getCategoryColor(category.name)\">\r\n-                {{ category.name }}\r\n-              </span>\r\n-            </td>\r\n-            <td>{{ category.value }}%</td>\r\n-          </tr>\r\n-        </tbody>\r\n-      </table>\r\n-    </c-card-body>\r\n-  </c-card>\r\n-\r\n-  <!-- Modal backdrop -->\r\n-  <div *ngIf=\"showCategoryModal\" class=\"position-fixed top-0 start-0 w-100 h-100\" \r\n-      style=\"background-color: rgba(0,0,0,0.5); z-index: 1040;\"\r\n-      (click)=\"showCategoryModal = false\">\r\n-  </div>\r\n-</div>\n-<div class=\"dashboard-container\">\r\n-  <c-card class=\"mx-auto\" style=\"max-width: 90%; width: 90%;\">\r\n-    <c-card-body>\r\n-      <c-card>\r\n-        <!-- Update the tab navigation in the header -->\r\n-        <c-card-header>\r\n-          <c-nav layout=\"justified\" variant=\"pills\">\r\n-            <c-nav-item>\r\n-              <a cNavLink \r\n-                 [active]=\"activeTab === 'single'\" \r\n-                 (click)=\"switchTab('single')\"\r\n-                 style=\"cursor: pointer;\">\r\n-                Single Line Prediction\r\n-              </a>\r\n-            </c-nav-item>\r\n-            <c-nav-item>\r\n-              <a cNavLink \r\n-                 [active]=\"activeTab === 'bulk'\" \r\n-                 (click)=\"switchTab('bulk')\"\r\n-                 style=\"cursor: pointer;\">\r\n-                Bulk Prediction\r\n-                <span *ngIf=\"!hasBulkAccess\" class=\"badge bg-secondary ms-1\">PRO</span>\r\n-              </a>\r\n-            </c-nav-item>\r\n-          </c-nav>\r\n-        </c-card-header>\r\n-        <c-card-body>\r\n-          <!-- Single Line Prediction Content -->\r\n-          <div *ngIf=\"activeTab === 'single'\">\r\n-            <c-row>\r\n-              <c-col xs=\"12\" md=\"6\">\r\n-                <c-card class=\"mb-4\">\r\n-                  <c-card-header>\r\n-                    <strong>Single Line Input</strong>\r\n-                  </c-card-header>\r\n-                  <c-card-body>\r\n-                    <form cForm [formGroup]=\"singlePredictionForm\">\r\n-                      <div class=\"mb-3\">\r\n-                        <label cLabel for=\"exampleFormControlTextarea1\">Provide the text to Predict</label>\r\n-                        <textarea cFormControl id=\"exampleFormControlTextarea1\" rows=\"3\" \r\n-                                  formControlName=\"textInput\"></textarea>\r\n-                      </div>\r\n-                      <div class=\"d-flex justify-content-end\">\r\n-                        <button \r\n-                          cButton \r\n-                          color=\"primary\" \r\n-                          type=\"button\" \r\n-                          (click)=\"predictSingleText()\"\r\n-                          [disabled]=\"!singlePredictionForm.valid || isProcessingSinglePrediction\">\r\n-                          Predict\r\n-                        </button>\r\n-                      </div>\r\n-                    </form>\r\n-                  </c-card-body>\r\n-                </c-card>\r\n-                \r\n-                <!-- Add Prediction Results Pie Chart -->\r\n-                <c-card class=\"mb-4\" *ngIf=\"lastSinglePrediction\">\r\n-                  <c-card-header>\r\n-                    <strong>Prediction Results</strong>\r\n-                  </c-card-header>\r\n-                  <c-card-body>\r\n-                    <c-chart type=\"pie\" \r\n-                            [data]=\"singlePredictionChartData\" \r\n-                            [options]=\"pieChartOptions\" />\r\n-                  </c-card-body>\r\n-                </c-card>\r\n-              </c-col>\r\n-              \r\n-              <!-- Add Prediction History Table -->\r\n-              <c-col xs=\"12\" md=\"6\">\r\n-                <c-card>\r\n-                  <c-card-header>\r\n-                    <strong>Prediction History</strong>\r\n-                  </c-card-header>\r\n-                  <c-card-body>\r\n-                    <div *ngIf=\"singlePredictionHistory.length === 0\" class=\"text-center py-5\">\r\n-                      <p class=\"text-muted\">No prediction history available. Make a prediction to see results here.</p>\r\n-                    </div>\r\n-\r\n-                    <!-- Update the Single Prediction History table -->\r\n-                    <div class=\"table-responsive\" style=\"max-height: 600px; overflow-y: auto;\" *ngIf=\"singlePredictionHistory.length > 0\">\r\n-                      <table cTable hover>\r\n-                        <thead>\r\n-                          <tr>\r\n-                            <th>Text</th>\r\n-                            <th>Prediction</th>\r\n-                            <th>Confidence</th>\r\n-                            <th>Sentiment Scores</th>\r\n-                          </tr>\r\n-                        </thead>\r\n-                        <tbody>\r\n-                          <tr *ngFor=\"let prediction of getPaginatedData(singlePredictionHistory, historyCurrentPage, historyPageSize)\"\r\n-                              (click)=\"showHistoryItemChart(prediction)\"\r\n-                              [class.selected-history-item]=\"isSelectedHistoryItem(prediction)\"\r\n-                              style=\"cursor: pointer;\">\r\n-                            <!-- Text column -->\r\n-                            <td style=\"max-width: 200px; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;\" \r\n-                                [title]=\"prediction.text\">\r\n-                              {{ prediction.text }}\r\n-                            </td>\r\n-                            \r\n-                            <!-- Prediction column -->\r\n-                            <td>\r\n-                              <span class=\"badge\" [style.background-color]=\"getCategoryColor(prediction.final_prediction)\">\r\n-                                {{ prediction.final_prediction }}\r\n-                              </span>\r\n-                            </td>\r\n-                            \r\n-                            <!-- Confidence column -->\r\n-                            <td>{{ prediction.confidence }}%</td>\r\n-                            \r\n-                            <!-- Sentiment Scores column -->\r\n-                            <td>\r\n-                              <span class=\"badge rounded-pill bg-primary\" \r\n-                                    (click)=\"showCategoriesModal(prediction.sentiment_scores); $event.stopPropagation();\" \r\n-                                    style=\"cursor: pointer;\">\r\n-                                View Details\r\n-                              </span>\r\n-                            </td>\r\n-                          </tr>\r\n-                        </tbody>\r\n-                      </table>\r\n-                    </div>\r\n-\r\n-                    <!-- Prediction History Pagination controls - Always show but with disabled state when appropriate -->\r\n-                    <div class=\"d-flex justify-content-between align-items-center mt-3\">\r\n-                      <div>\r\n-                        <small class=\"text-muted\">\r\n-                          Showing {{ historyCurrentPage * historyPageSize + 1 }} to \r\n-                          {{ Math.min((historyCurrentPage + 1) * historyPageSize, singlePredictionHistory.length) }} of \r\n-                          {{ singlePredictionHistory.length }} predictions\r\n-                        </small>\r\n-                      </div>\r\n-                      <c-pagination aria-label=\"History pages\" size=\"sm\" *ngIf=\"singlePredictionHistory.length > 0\">\r\n-                        <c-page-item [disabled]=\"historyCurrentPage === 0 || singlePredictionHistory.length <= historyPageSize\">\r\n-                          <a cPageLink (click)=\"changePage(0, 'history')\" style=\"cursor: pointer;\">First</a>\r\n-                        </c-page-item>\r\n-                        <c-page-item [disabled]=\"historyCurrentPage === 0 || singlePredictionHistory.length <= historyPageSize\">\r\n-                          <a cPageLink (click)=\"changePage(historyCurrentPage - 1, 'history')\" style=\"cursor: pointer;\">\r\n-                            <span aria-hidden=\"true\">&laquo;</span>\r\n-                          </a>\r\n-                        </c-page-item>\r\n-                        \r\n-                        <c-page-item *ngFor=\"let page of getVisiblePageNumbers(singlePredictionHistory.length, historyPageSize, historyCurrentPage)\" \r\n-                                    [active]=\"historyCurrentPage === page\">\r\n-                          <a cPageLink (click)=\"changePage(page, 'history')\" style=\"cursor: pointer;\">\r\n-                            {{ page + 1 }}\r\n-                          </a>\r\n-                        </c-page-item>\r\n-                        \r\n-                        <c-page-item [disabled]=\"historyCurrentPage >= Math.ceil(singlePredictionHistory.length / historyPageSize) - 1 || singlePredictionHistory.length <= historyPageSize\">\r\n-                          <a cPageLink (click)=\"changePage(historyCurrentPage + 1, 'history')\" style=\"cursor: pointer;\">\r\n-                            <span aria-hidden=\"true\">&raquo;</span>\r\n-                          </a>\r\n-                        </c-page-item>\r\n-                        <c-page-item [disabled]=\"historyCurrentPage >= Math.ceil(singlePredictionHistory.length / historyPageSize) - 1 || singlePredictionHistory.length <= historyPageSize\">\r\n-                          <a cPageLink (click)=\"changePage(Math.ceil(singlePredictionHistory.length / historyPageSize) - 1, 'history')\" style=\"cursor: pointer;\">Last</a>\r\n-                        </c-page-item>\r\n-                      </c-pagination>\r\n-                      \r\n-                      <div>\r\n-                        <select \r\n-                          cSelect \r\n-                          size=\"sm\" \r\n-                          [(ngModel)]=\"historyPageSize\" \r\n-                          (change)=\"onPageSizeChange('history')\" \r\n-                          style=\"width: auto;\"\r\n-                          [ngModelOptions]=\"{standalone: true}\">\r\n-                          <option [value]=\"5\">5 rows</option>\r\n-                          <option [value]=\"10\">10 rows</option>\r\n-                          <option [value]=\"25\">25 rows</option>\r\n-                          <option [value]=\"50\">50 rows</option>\r\n-                        </select>\r\n-                      </div>\r\n-                    </div>\r\n-                  </c-card-body>\r\n-                </c-card>\r\n-              </c-col>\r\n-            </c-row>\r\n-          </div>\r\n-          <!-- Bulk Prediction Content -->\r\n-          <div *ngIf=\"activeTab === 'bulk'\" class=\"premium-content-container\">\r\n-            <!-- PRO Badge in the corner -->\r\n-            <div class=\"premium-tag\" *ngIf=\"!hasBulkAccess\">PRO</div>\r\n-\r\n-            <!-- Content will be blurred if no access -->\r\n-            <div [class.premium-content-blur]=\"!hasBulkAccess\">\r\n-              <c-row>\r\n-                <!-- Left Column: CSV Data Visualization -->\r\n-                <c-col md=\"8\">\r\n-                  <!-- CSV Data Visualization -->\r\n-                  <c-card>\r\n-                    <c-card-header>\r\n-                      <c-nav variant=\"tabs\">\r\n-                        <c-nav-item *ngFor=\"let csvFile of csvFiles\">\r\n-                          <a [active]=\"activeCsvFile === csvFile.id\" \r\n-                             cNavLink \r\n-                             class=\"d-flex align-items-center\"\r\n-                             (click)=\"selectCsvFile(csvFile.id)\">\r\n-                            {{ csvFile.name }}\r\n-                            <!-- Delete button -->\r\n-                            <button \r\n-                              *ngIf=\"!csvFile.isDefault\"\r\n-                              cButton \r\n-                              color=\"danger\" \r\n-                              size=\"sm\" \r\n-                              variant=\"ghost\"\r\n-                              class=\"ms-2 p-0 px-1\"\r\n-                              style=\"line-height: 1;\"\r\n-                              (click)=\"deleteCsvFile(csvFile.id, $event)\">\r\n-                              &times;\r\n-                            </button>\r\n-                          </a>\r\n-                        </c-nav-item>\r\n-                      </c-nav>\r\n-                    </c-card-header>\r\n-                    <c-card-body *ngIf=\"currentCsvFile\">\r\n-                      <!-- Radar Chart -->\r\n-                      <c-card class=\"mb-4\">\r\n-                        <c-card-header>\r\n-                          <strong>{{ currentCsvFile?.name }} - Chart</strong>\r\n-                        </c-card-header>\r\n-                        <c-card-body>\r\n-                          <div *ngIf=\"isLoadingFile\" class=\"text-center py-5\">\r\n-                            <div class=\"spinner-border text-primary\" role=\"status\">\r\n-                              <span class=\"visually-hidden\">Loading chart...</span>\r\n-                            </div>\r\n-                            <p class=\"mt-2\">Loading chart data...</p>\r\n-                          </div>\r\n-                          \r\n-                          <!-- Only show chart when not loading and data exists -->\r\n-                          <ng-container *ngIf=\"!isLoadingFile && currentCsvFile?.chartData\">\r\n-                            <!-- Use key binding to force chart recreation -->\r\n-                            <div [id]=\"'chart-container-' + activeCsvFile\">\r\n-                              <c-chart \r\n-                                #radarChart\r\n-                                type=\"radar\" \r\n                                 [data]=\"getChartData(currentCsvFile)\"\r\n                                 [options]=\"options\" />\r\n                             </div>\r\n                           </ng-container>                          \r\n"
                },
                {
                    "date": 1748304375422,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -235,9 +235,9 @@\n                             <div [id]=\"'chart-container-' + activeCsvFile\">\r\n                               <c-chart \r\n                                 #radarChart\r\n                                 type=\"radar\" \r\n-                                [data]=\"getChartData(currentCsvFile)\"\r\n+                                [data]=\"currentCsvFile.chartData\"\r\n                                 [options]=\"options\" />\r\n                             </div>\r\n                           </ng-container>                          \r\n                           <div *ngIf=\"!isLoadingFile && (!currentCsvFile || !currentCsvFile.chartData)\" class=\"text-center py-5\">\r\n"
                },
                {
                    "date": 1748304529933,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -244,9 +244,9 @@\n                             <p class=\"text-muted\">No chart data available</p>\r\n                           </div>\r\n                         </c-card-body>\r\n                       </c-card>\r\n-                    <c-card>\r\n+                      <c-card>\r\n                         <c-card-header>\r\n                           <div class=\"d-flex justify-content-between align-items-center\">\r\n                             <strong>{{ currentCsvFile.name }} - Data</strong>\r\n                             <button \r\n"
                },
                {
                    "date": 1748304539309,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -244,8 +244,9 @@\n                             <p class=\"text-muted\">No chart data available</p>\r\n                           </div>\r\n                         </c-card-body>\r\n                       </c-card>\r\n+\r\n                       <c-card>\r\n                         <c-card-header>\r\n                           <div class=\"d-flex justify-content-between align-items-center\">\r\n                             <strong>{{ currentCsvFile.name }} - Data</strong>\r\n"
                },
                {
                    "date": 1748305861604,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -460,10 +460,11 @@\n                       <ul cListGroup>\r\n                         <li cListGroupItem \r\n                           *ngFor=\"let file of filteredFiles\"\r\n                           [active]=\"activeCsvFile === file.id\"\r\n+                          [class.disabled]=\"disableOtherMyFiles && activeCsvFile !== file.id\"\r\n                           style=\"cursor: pointer;\"\r\n-                          (click)=\"loadFileToVisualization(file.id)\">\r\n+                          (click)=\"!disableOtherMyFiles || activeCsvFile === file.id ? loadFileToVisualization(file.id) : null\">\r\n                           <div class=\"d-flex align-items-center\">\r\n                             <span class=\"text-truncate\">{{ file.name }}</span>\r\n                             <small class=\"text-muted ms-auto\">\r\n                               {{ file.timestamp | date:'short' }}\r\n"
                },
                {
                    "date": 1748306111814,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -460,9 +460,9 @@\n                       <ul cListGroup>\r\n                         <li cListGroupItem \r\n                           *ngFor=\"let file of filteredFiles\"\r\n                           [active]=\"activeCsvFile === file.id\"\r\n-                          [class.disabled]=\"disableOtherMyFiles && activeCsvFile !== file.id\"\r\n+                          [class.disabled]=\"activeCsvFile !== file.id\"\r\n                           style=\"cursor: pointer;\"\r\n                           (click)=\"!disableOtherMyFiles || activeCsvFile === file.id ? loadFileToVisualization(file.id) : null\">\r\n                           <div class=\"d-flex align-items-center\">\r\n                             <span class=\"text-truncate\">{{ file.name }}</span>\r\n"
                },
                {
                    "date": 1748349747675,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -421,9 +421,9 @@\n                         <small class=\"text-muted\">Showing {{ pendingFiles.length }} files</small>\r\n                       </div>\r\n                     </c-card-body>\r\n                   </c-card>\r\n-                                  <c-card>\r\n+                  <c-card>\r\n                   <c-card-header>\r\n                     <strong>My Files</strong>\r\n                   </c-card-header>\r\n                   <c-card-body>\r\n@@ -460,11 +460,10 @@\n                       <ul cListGroup>\r\n                         <li cListGroupItem \r\n                           *ngFor=\"let file of filteredFiles\"\r\n                           [active]=\"activeCsvFile === file.id\"\r\n-                          [class.disabled]=\"activeCsvFile !== file.id\"\r\n                           style=\"cursor: pointer;\"\r\n-                          (click)=\"!disableOtherMyFiles || activeCsvFile === file.id ? loadFileToVisualization(file.id) : null\">\r\n+                          (click)=\"loadFileToVisualization(file.id)\">\r\n                           <div class=\"d-flex align-items-center\">\r\n                             <span class=\"text-truncate\">{{ file.name }}</span>\r\n                             <small class=\"text-muted ms-auto\">\r\n                               {{ file.timestamp | date:'short' }}\r\n"
                },
                {
                    "date": 1748349759654,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -483,9 +483,9 @@\n                         Found {{ filteredFiles.length }} {{ filteredFiles.length === 1 ? 'match' : 'matches' }}\r\n                       </small>\r\n                     </div>\r\n                   </c-card-body>\r\n-                </c-card>\r\n+                  </c-card>\r\n                 </c-col>\r\n               </c-row>\r\n             </div>\r\n             \r\n"
                },
                {
                    "date": 1748349778035,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -422,70 +422,89 @@\n                       </div>\r\n                     </c-card-body>\r\n                   </c-card>\r\n                   <c-card>\r\n-                  <c-card-header>\r\n-                    <strong>My Files</strong>\r\n-                  </c-card-header>\r\n-                  <c-card-body>\r\n-                    <!-- Add search input -->\r\n-                    <div class=\"mb-3\">\r\n-                      <div class=\"input-group\">\r\n-                        <!-- <svg cIcon name=\"cil-search\"></svg> -->\r\n-                        <input \r\n-                          cFormControl \r\n-                          type=\"text\" \r\n-                          placeholder=\"Search files...\" \r\n-                          [(ngModel)]=\"fileSearchQuery\"\r\n-                          [ngModelOptions]=\"{standalone: true}\"\r\n-                          (input)=\"filterFiles()\">\r\n-                        <button \r\n-                          *ngIf=\"fileSearchQuery\" \r\n-                          cButton \r\n-                          color=\"secondary\" \r\n-                          variant=\"outline\" \r\n-                          type=\"button\"\r\n-                          (click)=\"clearFileSearch()\">\r\n-                          &times;\r\n-                        </button>\r\n+                    <c-card-header>\r\n+                      <strong>My Files</strong>\r\n+                    </c-card-header>\r\n+                    <c-card-body>\r\n+                      <!-- Add search input -->\r\n+                      <div class=\"mb-3\">\r\n+                        <div class=\"input-group\">\r\n+                          <!-- <svg cIcon name=\"cil-search\"></svg> -->\r\n+                          <input \r\n+                            cFormControl \r\n+                            type=\"text\" \r\n+                            placeholder=\"Search files...\" \r\n+                            [(ngModel)]=\"fileSearchQuery\"\r\n+                            [ngModelOptions]=\"{standalone: true}\"\r\n+                            [disabled]=\"isLoadingFile\"\r\n+                            (input)=\"filterFiles()\">\r\n+                          <button \r\n+                            *ngIf=\"fileSearchQuery\" \r\n+                            cButton \r\n+                            color=\"secondary\" \r\n+                            variant=\"outline\" \r\n+                            type=\"button\"\r\n+                            [disabled]=\"isLoadingFile\"\r\n+                            (click)=\"clearFileSearch()\">\r\n+                            &times;\r\n+                          </button>\r\n+                        </div>\r\n                       </div>\r\n-                    </div>\r\n-                    \r\n-                    <div *ngIf=\"filteredFiles.length === 0\" class=\"text-center py-3\">\r\n-                      <p class=\"text-muted mb-0\">\r\n-                        {{ myFiles.length === 0 ? 'No files available' : 'No matching files' }}\r\n-                      </p>\r\n-                    </div>\r\n-                    \r\n-                    <div style=\"max-height: 240px; overflow-y: auto;\" *ngIf=\"filteredFiles.length > 0\">\r\n-                      <ul cListGroup>\r\n-                        <li cListGroupItem \r\n-                          *ngFor=\"let file of filteredFiles\"\r\n-                          [active]=\"activeCsvFile === file.id\"\r\n-                          style=\"cursor: pointer;\"\r\n-                          (click)=\"loadFileToVisualization(file.id)\">\r\n-                          <div class=\"d-flex align-items-center\">\r\n-                            <span class=\"text-truncate\">{{ file.name }}</span>\r\n-                            <small class=\"text-muted ms-auto\">\r\n-                              {{ file.timestamp | date:'short' }}\r\n-                            </small>\r\n-                          </div>\r\n-                        </li>\r\n-                      </ul>\r\n-                    </div>\r\n-                    \r\n-                    <div *ngIf=\"!fileSearchQuery && myFiles.length > 5\" class=\"text-end mt-2\">\r\n-                      <small class=\"text-muted\">\r\n-                        Showing {{ filteredFiles.length }} of {{ myFiles.length }} files\r\n-                      </small>\r\n-                    </div>\r\n-                    <div *ngIf=\"fileSearchQuery && filteredFiles.length > 0\" class=\"text-end mt-2\">\r\n-                      <small class=\"text-muted\">\r\n-                        Found {{ filteredFiles.length }} {{ filteredFiles.length === 1 ? 'match' : 'matches' }}\r\n-                      </small>\r\n-                    </div>\r\n-                  </c-card-body>\r\n-                  </c-card>\r\n+                      \r\n+                      <!-- Loading indicator -->\r\n+                      <div *ngIf=\"isLoadingFile\" class=\"text-center py-3\">\r\n+                        <div class=\"spinner-border spinner-border-sm text-primary\" role=\"status\">\r\n+                          <span class=\"visually-hidden\">Loading file...</span>\r\n+                        </div>\r\n+                        <p class=\"mt-2 text-muted small\">Loading file data and chart...</p>\r\n+                      </div>\r\n+                      \r\n+                      <div *ngIf=\"filteredFiles.length === 0 && !isLoadingFile\" class=\"text-center py-3\">\r\n+                        <p class=\"text-muted mb-0\">\r\n+                          {{ myFiles.length === 0 ? 'No files available' : 'No matching files' }}\r\n+                        </p>\r\n+                      </div>\r\n+                      \r\n+                      <div style=\"max-height: 240px; overflow-y: auto;\" *ngIf=\"filteredFiles.length > 0\">\r\n+                        <ul cListGroup>\r\n+                          <li cListGroupItem \r\n+                            *ngFor=\"let file of filteredFiles\"\r\n+                            [active]=\"activeCsvFile === file.id\"\r\n+                            [class.disabled]=\"disableOtherMyFiles && activeCsvFile !== file.id\"\r\n+                            style=\"cursor: pointer;\"\r\n+                            [style.opacity]=\"disableOtherMyFiles && activeCsvFile !== file.id ? '0.5' : '1'\"\r\n+                            [style.pointer-events]=\"disableOtherMyFiles && activeCsvFile !== file.id ? 'none' : 'auto'\"\r\n+                            (click)=\"!disableOtherMyFiles || activeCsvFile === file.id ? loadFileToVisualization(file.id) : null\">\r\n+                            <div class=\"d-flex align-items-center\">\r\n+                              <span class=\"text-truncate\">{{ file.name }}</span>\r\n+                              <small class=\"text-muted ms-auto\">\r\n+                                {{ file.timestamp | date:'short' }}\r\n+                              </small>\r\n+                              <!-- Loading indicator for active file -->\r\n+                              <div *ngIf=\"isLoadingFile && activeCsvFile === file.id\" \r\n+                                  class=\"spinner-border spinner-border-sm text-primary ms-2\" \r\n+                                  role=\"status\">\r\n+                                <span class=\"visually-hidden\">Loading...</span>\r\n+                              </div>\r\n+                            </div>\r\n+                          </li>\r\n+                        </ul>\r\n+                      </div>\r\n+                      \r\n+                      <div *ngIf=\"!fileSearchQuery && myFiles.length > 5 && !isLoadingFile\" class=\"text-end mt-2\">\r\n+                        <small class=\"text-muted\">\r\n+                          Showing {{ filteredFiles.length }} of {{ myFiles.length }} files\r\n+                        </small>\r\n+                      </div>\r\n+                      <div *ngIf=\"fileSearchQuery && filteredFiles.length > 0 && !isLoadingFile\" class=\"text-end mt-2\">\r\n+                        <small class=\"text-muted\">\r\n+                          Found {{ filteredFiles.length }} {{ filteredFiles.length === 1 ? 'match' : 'matches' }}\r\n+                        </small>\r\n+                      </div>\r\n+                    </c-card-body>\r\n+                </c-card>\r\n                 </c-col>\r\n               </c-row>\r\n             </div>\r\n             \r\n"
                },
                {
                    "date": 1748350107944,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -221,27 +221,28 @@\n                         <c-card-header>\r\n                           <strong>{{ currentCsvFile?.name }} - Chart</strong>\r\n                         </c-card-header>\r\n                         <c-card-body>\r\n-                          <div *ngIf=\"isLoadingFile\" class=\"text-center py-5\">\r\n+                          <div *ngIf=\"isLoadingFile || !isChartReady\" class=\"text-center py-5\">\r\n                             <div class=\"spinner-border text-primary\" role=\"status\">\r\n                               <span class=\"visually-hidden\">Loading chart...</span>\r\n                             </div>\r\n-                            <p class=\"mt-2\">Loading chart data...</p>\r\n+                            <p class=\"mt-2\">{{ isLoadingFile ? 'Loading file data and chart...' : 'Initializing chart...' }}</p>\r\n                           </div>\r\n                           \r\n-                          <!-- Only show chart when not loading and data exists -->\r\n-                          <ng-container *ngIf=\"!isLoadingFile && currentCsvFile?.chartData\">\r\n-                            <!-- Use key binding to force chart recreation -->\r\n-                            <div [id]=\"'chart-container-' + activeCsvFile\">\r\n+                          <!-- Only show chart when not loading, chart is ready, and data exists -->\r\n+                          <ng-container *ngIf=\"!isLoadingFile && isChartReady && currentCsvFile?.chartData\">\r\n+                            <!-- Use unique key to force chart recreation and prevent conflicts -->\r\n+                            <div [id]=\"'chart-container-' + activeCsvFile + '-' + currentCsvFile?.timestamp?.getTime()\">\r\n                               <c-chart \r\n                                 #radarChart\r\n                                 type=\"radar\" \r\n                                 [data]=\"currentCsvFile.chartData\"\r\n-                                [options]=\"options\" />\r\n+                                [options]=\"options\"\r\n+                                [key]=\"'chart-' + activeCsvFile + '-' + (currentCsvFile?.timestamp?.getTime() || 0)\" />\r\n                             </div>\r\n                           </ng-container>                          \r\n-                          <div *ngIf=\"!isLoadingFile && (!currentCsvFile || !currentCsvFile.chartData)\" class=\"text-center py-5\">\r\n+                          <div *ngIf=\"!isLoadingFile && isChartReady && (!currentCsvFile || !currentCsvFile.chartData)\" class=\"text-center py-5\">\r\n                             <p class=\"text-muted\">No chart data available</p>\r\n                           </div>\r\n                         </c-card-body>\r\n                       </c-card>\r\n@@ -502,9 +503,9 @@\n                           Found {{ filteredFiles.length }} {{ filteredFiles.length === 1 ? 'match' : 'matches' }}\r\n                         </small>\r\n                       </div>\r\n                     </c-card-body>\r\n-                </c-card>\r\n+                  </c-card>\r\n                 </c-col>\r\n               </c-row>\r\n             </div>\r\n             \r\n"
                },
                {
                    "date": 1748350133844,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -196,9 +196,12 @@\n                         <c-nav-item *ngFor=\"let csvFile of csvFiles\">\r\n                           <a [active]=\"activeCsvFile === csvFile.id\" \r\n                              cNavLink \r\n                              class=\"d-flex align-items-center\"\r\n-                             (click)=\"selectCsvFile(csvFile.id)\">\r\n+                             [class.disabled]=\"isLoadingFile\"\r\n+                             [style.opacity]=\"isLoadingFile ? '0.7' : '1'\"\r\n+                             [style.pointer-events]=\"isLoadingFile ? 'none' : 'auto'\"\r\n+                             (click)=\"!isLoadingFile ? selectCsvFile(csvFile.id) : null\">\r\n                             {{ csvFile.name }}\r\n                             <!-- Delete button -->\r\n                             <button \r\n                               *ngIf=\"!csvFile.isDefault\"\r\n@@ -207,9 +210,10 @@\n                               size=\"sm\" \r\n                               variant=\"ghost\"\r\n                               class=\"ms-2 p-0 px-1\"\r\n                               style=\"line-height: 1;\"\r\n-                              (click)=\"deleteCsvFile(csvFile.id, $event)\">\r\n+                              [disabled]=\"isLoadingFile\"\r\n+                              (click)=\"!isLoadingFile ? deleteCsvFile(csvFile.id, $event) : null\">\r\n                               &times;\r\n                             </button>\r\n                           </a>\r\n                         </c-nav-item>\r\n"
                },
                {
                    "date": 1748350153768,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,24 +7,31 @@\n           <c-nav layout=\"justified\" variant=\"pills\">\r\n             <c-nav-item>\r\n               <a cNavLink \r\n                  [active]=\"activeTab === 'single'\" \r\n-                 (click)=\"switchTab('single')\"\r\n+                 [class.disabled]=\"isLoadingFile\"\r\n+                 [style.opacity]=\"isLoadingFile ? '0.7' : '1'\"\r\n+                 [style.pointer-events]=\"isLoadingFile ? 'none' : 'auto'\"\r\n+                 (click)=\"!isLoadingFile ? switchTab('single') : null\"\r\n                  style=\"cursor: pointer;\">\r\n                 Single Line Prediction\r\n               </a>\r\n             </c-nav-item>\r\n             <c-nav-item>\r\n               <a cNavLink \r\n                  [active]=\"activeTab === 'bulk'\" \r\n-                 (click)=\"switchTab('bulk')\"\r\n+                 [class.disabled]=\"isLoadingFile\"\r\n+                 [style.opacity]=\"isLoadingFile ? '0.7' : '1'\"\r\n+                 [style.pointer-events]=\"isLoadingFile ? 'none' : 'auto'\"\r\n+                 (click)=\"!isLoadingFile ? switchTab('bulk') : null\"\r\n                  style=\"cursor: pointer;\">\r\n                 Bulk Prediction\r\n                 <span *ngIf=\"!hasBulkAccess\" class=\"badge bg-secondary ms-1\">PRO</span>\r\n               </a>\r\n             </c-nav-item>\r\n           </c-nav>\r\n         </c-card-header>\r\n+\r\n         <c-card-body>\r\n           <!-- Single Line Prediction Content -->\r\n           <div *ngIf=\"activeTab === 'single'\">\r\n             <c-row>\r\n"
                },
                {
                    "date": 1748351329314,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -187,9 +187,9 @@\n             </c-row>\r\n           </div>\r\n           <!-- Bulk Prediction Content -->\r\n           <div *ngIf=\"activeTab === 'bulk'\" class=\"premium-content-container\">\r\n-            <!-- PRO Badge in the corner -->\r\n+            <!-- PRO Badge in the corner -->radar\"\r\n             <div class=\"premium-tag\" *ngIf=\"!hasBulkAccess\">PRO</div>\r\n \r\n             <!-- Content will be blurred if no access -->\r\n             <div [class.premium-content-blur]=\"!hasBulkAccess\">\r\n"
                },
                {
                    "date": 1748351338330,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -187,9 +187,9 @@\n             </c-row>\r\n           </div>\r\n           <!-- Bulk Prediction Content -->\r\n           <div *ngIf=\"activeTab === 'bulk'\" class=\"premium-content-container\">\r\n-            <!-- PRO Badge in the corner -->radar\"\r\n+            <!-- PRO Badge in the corner -->\r\n             <div class=\"premium-tag\" *ngIf=\"!hasBulkAccess\">PRO</div>\r\n \r\n             <!-- Content will be blurred if no access -->\r\n             <div [class.premium-content-blur]=\"!hasBulkAccess\">\r\n@@ -241,18 +241,17 @@\n                           </div>\r\n                           \r\n                           <!-- Only show chart when not loading, chart is ready, and data exists -->\r\n                           <ng-container *ngIf=\"!isLoadingFile && isChartReady && currentCsvFile?.chartData\">\r\n-                            <!-- Use unique key to force chart recreation and prevent conflicts -->\r\n+                            <!-- Use unique container ID and trackBy to force chart recreation -->\r\n                             <div [id]=\"'chart-container-' + activeCsvFile + '-' + currentCsvFile?.timestamp?.getTime()\">\r\n                               <c-chart \r\n                                 #radarChart\r\n                                 type=\"radar\" \r\n                                 [data]=\"currentCsvFile.chartData\"\r\n-                                [options]=\"options\"\r\n-                                [key]=\"'chart-' + activeCsvFile + '-' + (currentCsvFile?.timestamp?.getTime() || 0)\" />\r\n+                                [options]=\"options\" />\r\n                             </div>\r\n-                          </ng-container>                          \r\n+                          </ng-container>\r\n                           <div *ngIf=\"!isLoadingFile && isChartReady && (!currentCsvFile || !currentCsvFile.chartData)\" class=\"text-center py-5\">\r\n                             <p class=\"text-muted\">No chart data available</p>\r\n                           </div>\r\n                         </c-card-body>\r\n"
                },
                {
                    "date": 1748351390221,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -241,18 +241,16 @@\n                           </div>\r\n                           \r\n                           <!-- Only show chart when not loading, chart is ready, and data exists -->\r\n                           <ng-container *ngIf=\"!isLoadingFile && isChartReady && currentCsvFile?.chartData\">\r\n-                            <!-- Use ng-container with ngIf and unique ID to force recreation -->\r\n-                            <ng-container *ngIf=\"chartKey\">\r\n-                              <div [id]=\"'chart-container-' + chartKey\">\r\n-                                <c-chart \r\n-                                  #radarChart\r\n-                                  type=\"radar\" \r\n-                                  [data]=\"currentCsvFile.chartData\"\r\n-                                  [options]=\"options\" />\r\n-                              </div>\r\n-                            </ng-container>\r\n+                            <!-- Use unique container ID and trackBy to force chart recreation -->\r\n+                            <div [id]=\"'chart-container-' + activeCsvFile + '-' + currentCsvFile?.timestamp?.getTime()\">\r\n+                              <c-chart \r\n+                                #radarChart\r\n+                                type=\"radar\" \r\n+                                [data]=\"currentCsvFile.chartData\"\r\n+                                [options]=\"options\" />\r\n+                            </div>\r\n                           </ng-container>\r\n                           <div *ngIf=\"!isLoadingFile && isChartReady && (!currentCsvFile || !currentCsvFile.chartData)\" class=\"text-center py-5\">\r\n                             <p class=\"text-muted\">No chart data available</p>\r\n                           </div>\r\n"
                }
            ],
            "date": 1747820736092,
            "name": "Commit-0",
            "content": "<div class=\"dashboard-container\">\r\n  <c-card class=\"mx-auto\" style=\"max-width: 90%; width: 90%;\">\r\n    <c-card-body>\r\n      <c-card>\r\n        <c-card-header>\r\n          <c-nav layout=\"justified\" variant=\"pills\">\r\n            <c-nav-item>\r\n              <a [active]=\"activeTab === 'single'\" cNavLink (click)=\"activeTab = 'single'\">\r\n                Single Line Prediction\r\n              </a>\r\n            </c-nav-item>\r\n            <c-nav-item>\r\n              <a [active]=\"activeTab === 'bulk'\" cNavLink (click)=\"activeTab = 'bulk'\">\r\n                Bulk Prediction\r\n              </a>\r\n            </c-nav-item>\r\n          </c-nav>\r\n        </c-card-header>\r\n        <c-card-body>\r\n          <!-- Single Line Prediction Content -->\r\n          <div *ngIf=\"activeTab === 'single'\">\r\n            <c-row>\r\n              <c-col xs=\"12\" md=\"6\">\r\n                <c-card class=\"mb-4\">\r\n                  <c-card-header>\r\n                    <strong>Single Line Input</strong>\r\n                  </c-card-header>\r\n                  <c-card-body>\r\n                    <form cForm [formGroup]=\"singlePredictionForm\">\r\n                      <div class=\"mb-3\">\r\n                        <label cLabel for=\"exampleFormControlTextarea1\">Provide the text to Predict</label>\r\n                        <textarea cFormControl id=\"exampleFormControlTextarea1\" rows=\"3\" \r\n                                  formControlName=\"textInput\"></textarea>\r\n                      </div>\r\n                      <div class=\"d-flex justify-content-end\">\r\n                        <button cButton color=\"primary\" type=\"button\" (click)=\"predictSingleText()\"\r\n                                [disabled]=\"!singlePredictionForm.valid || isProcessingSinglePrediction\">\r\n                          <span *ngIf=\"isProcessingSinglePrediction\" class=\"spinner-border spinner-border-sm me-1\" role=\"status\"></span>\r\n                          {{ isProcessingSinglePrediction ? 'Processing...' : 'Predict' }}\r\n                        </button>\r\n                      </div>\r\n                    </form>\r\n                  </c-card-body>\r\n                </c-card>\r\n                \r\n                <!-- Add Prediction Results Pie Chart -->\r\n                <c-card class=\"mb-4\" *ngIf=\"lastSinglePrediction\">\r\n                  <c-card-header>\r\n                    <strong>Prediction Results</strong>\r\n                  </c-card-header>\r\n                  <c-card-body>\r\n                    <c-chart type=\"pie\" \r\n                            [data]=\"singlePredictionChartData\" \r\n                            [options]=\"pieChartOptions\" />\r\n                  </c-card-body>\r\n                </c-card>\r\n              </c-col>\r\n              \r\n              <!-- Add Prediction History Table -->\r\n              <c-col xs=\"12\" md=\"6\">\r\n                <c-card>\r\n                  <c-card-header>\r\n                    <strong>Prediction History</strong>\r\n                  </c-card-header>\r\n                  <c-card-body>\r\n                    <div *ngIf=\"singlePredictionHistory.length === 0\" class=\"text-center py-5\">\r\n                      <p class=\"text-muted\">No prediction history available. Make a prediction to see results here.</p>\r\n                    </div>\r\n\r\n                    <div class=\"table-responsive\" style=\"max-height: 600px; overflow-y: auto;\" *ngIf=\"singlePredictionHistory.length > 0\">\r\n                      <table cTable hover>\r\n                        <thead>\r\n                          <tr>\r\n                            <th>Text</th>\r\n                            <th>Prediction</th>\r\n                            <th>Confidence</th>\r\n                            <th>Timestamp</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          <tr *ngFor=\"let prediction of getPaginatedData(singlePredictionHistory, historyCurrentPage, historyPageSize)\" \r\n                              (click)=\"showHistoryItemChart(prediction)\"\r\n                              [class.selected-history-item]=\"isSelectedHistoryItem(prediction)\"\r\n                              style=\"cursor: pointer;\">\r\n                            <td style=\"max-width: 200px; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;\" \r\n                                [title]=\"prediction.text\">\r\n                              {{ prediction.text }}\r\n                            </td>\r\n                            <td>{{ prediction.result }}</td>\r\n                            <td>{{ prediction.confidence }}%</td>\r\n                            <td>{{ prediction.timestamp | date:'short' }}</td>\r\n                          </tr>\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                    \r\n                    <!-- Prediction History Pagination controls - Always show but with disabled state when appropriate -->\r\n                    <div class=\"d-flex justify-content-between align-items-center mt-3\">\r\n                      <div>\r\n                        <small class=\"text-muted\">\r\n                          Showing {{ historyCurrentPage * historyPageSize + 1 }} to \r\n                          {{ Math.min((historyCurrentPage + 1) * historyPageSize, singlePredictionHistory.length) }} of \r\n                          {{ singlePredictionHistory.length }} predictions\r\n                        </small>\r\n                      </div>\r\n                      <c-pagination aria-label=\"History pages\" size=\"sm\" *ngIf=\"singlePredictionHistory.length > 0\">\r\n                        <c-page-item [disabled]=\"historyCurrentPage === 0 || singlePredictionHistory.length <= historyPageSize\">\r\n                          <a cPageLink (click)=\"changePage(0, 'history')\" style=\"cursor: pointer;\">First</a>\r\n                        </c-page-item>\r\n                        <c-page-item [disabled]=\"historyCurrentPage === 0 || singlePredictionHistory.length <= historyPageSize\">\r\n                          <a cPageLink (click)=\"changePage(historyCurrentPage - 1, 'history')\" style=\"cursor: pointer;\">\r\n                            <span aria-hidden=\"true\">&laquo;</span>\r\n                          </a>\r\n                        </c-page-item>\r\n                        \r\n                        <c-page-item *ngFor=\"let page of getVisiblePageNumbers(singlePredictionHistory.length, historyPageSize, historyCurrentPage)\" \r\n                                    [active]=\"historyCurrentPage === page\">\r\n                          <a cPageLink (click)=\"changePage(page, 'history')\" style=\"cursor: pointer;\">\r\n                            {{ page + 1 }}\r\n                          </a>\r\n                        </c-page-item>\r\n                        \r\n                        <c-page-item [disabled]=\"historyCurrentPage >= Math.ceil(singlePredictionHistory.length / historyPageSize) - 1 || singlePredictionHistory.length <= historyPageSize\">\r\n                          <a cPageLink (click)=\"changePage(historyCurrentPage + 1, 'history')\" style=\"cursor: pointer;\">\r\n                            <span aria-hidden=\"true\">&raquo;</span>\r\n                          </a>\r\n                        </c-page-item>\r\n                        <c-page-item [disabled]=\"historyCurrentPage >= Math.ceil(singlePredictionHistory.length / historyPageSize) - 1 || singlePredictionHistory.length <= historyPageSize\">\r\n                          <a cPageLink (click)=\"changePage(Math.ceil(singlePredictionHistory.length / historyPageSize) - 1, 'history')\" style=\"cursor: pointer;\">Last</a>\r\n                        </c-page-item>\r\n                      </c-pagination>\r\n                      \r\n                      <div>\r\n                        <select \r\n                          cSelect \r\n                          size=\"sm\" \r\n                          [(ngModel)]=\"historyPageSize\" \r\n                          (change)=\"onPageSizeChange('history')\" \r\n                          style=\"width: auto;\"\r\n                          [ngModelOptions]=\"{standalone: true}\">\r\n                          <option [value]=\"5\">5 rows</option>\r\n                          <option [value]=\"10\">10 rows</option>\r\n                          <option [value]=\"25\">25 rows</option>\r\n                          <option [value]=\"50\">50 rows</option>\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n                  </c-card-body>\r\n                </c-card>\r\n              </c-col>\r\n            </c-row>\r\n          </div>\r\n          <!-- Bulk Prediction Content -->\r\n          <div *ngIf=\"activeTab === 'bulk'\">\r\n            <c-row>\r\n              <!-- Left Column: CSV Data Visualization -->\r\n              <c-col md=\"8\">\r\n                <!-- CSV Data Visualization (file upload card moved to right column) -->\r\n                <c-card>\r\n                  <c-card-header>\r\n                    <c-nav variant=\"tabs\">\r\n                      <c-nav-item *ngFor=\"let csvFile of csvFiles\">\r\n                        <a [active]=\"activeCsvFile === csvFile.id\" \r\n                          cNavLink \r\n                          class=\"d-flex align-items-center\"\r\n                          (click)=\"selectCsvFile(csvFile.id)\">\r\n                          {{ csvFile.name }}\r\n                          <!-- Delete button -->\r\n                          <button \r\n                            *ngIf=\"!csvFile.isDefault\"\r\n                            cButton \r\n                            color=\"danger\" \r\n                            size=\"sm\" \r\n                            variant=\"ghost\"\r\n                            class=\"ms-2 p-0 px-1\"\r\n                            style=\"line-height: 1;\"\r\n                            title=\"Remove file\"\r\n                            (click)=\"deleteCsvFile(csvFile.id, $event)\">\r\n                            <span>&times;</span>\r\n                          </button>\r\n                        </a>\r\n                      </c-nav-item>\r\n                    </c-nav>\r\n                  </c-card-header>\r\n                  <c-card-body *ngIf=\"currentCsvFile\">\r\n                    <!-- Radar Chart -->\r\n                    <c-card class=\"mb-4\">\r\n                      <c-card-header>\r\n                        <strong>{{ currentCsvFile.name }} - Radar Chart</strong>\r\n                      </c-card-header>\r\n                      <c-card-body>\r\n                        <c-chart type=\"radar\" \r\n                                [data]=\"currentCsvFile.chartData\" \r\n                                [options]=\"options\" />\r\n                      </c-card-body>\r\n                    </c-card>\r\n\r\n                    <c-card>\r\n                      <c-card-header>\r\n                        <strong>{{ currentCsvFile.name }} - Data</strong>\r\n                      </c-card-header>\r\n                      <c-card-body>\r\n                        <div class=\"table-responsive\" style=\"max-height: 450px; overflow-y: auto;\">\r\n                          <table cTable hover>\r\n                            <thead>\r\n                              <tr>\r\n                                <th *ngFor=\"let header of getHeaders(currentCsvFile.data[0])\">\r\n                                  {{ header }}\r\n                                </th>\r\n                              </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                              <tr *ngFor=\"let row of getPaginatedData(currentCsvFile.data, currentPage, pageSize)\">\r\n                                <ng-container *ngFor=\"let header of getHeaders(currentCsvFile.data[0])\">\r\n                                  <td *ngIf=\"header !== 'categories'; else categoriesCell\">\r\n                                    <!-- Special handling for different data types -->\r\n                                    <ng-container *ngIf=\"header === 'Confidence'; else regularContent\">\r\n                                      {{ row[header] }}%\r\n                                    </ng-container>\r\n                                    <ng-template #regularContent>\r\n                                      {{ row[header] }}\r\n                                    </ng-template>\r\n                                  </td>\r\n                                  \r\n                                  <ng-template #categoriesCell>\r\n                                    <td>\r\n                                      <!-- Display categories as a tooltip or formatted text -->\r\n                                      <div class=\"categories-summary\" [title]=\"formatCategoriesForTooltip(row[header])\">\r\n                                        <span class=\"badge\" *ngFor=\"let cat of row[header].slice(0, 2)\" \r\n                                              [style.background-color]=\"getCategoryColor(cat.name)\"\r\n                                              style=\"margin-right: 3px; font-size: 0.7rem;\">\r\n                                          {{ cat.name }}: {{ cat.value }}%\r\n                                        </span>\r\n                                        <span *ngIf=\"row[header].length > 2\" style=\"font-size: 0.7rem;\">\r\n                                          +{{ row[header].length - 2 }} more\r\n                                        </span>\r\n                                      </div>\r\n                                    </td>\r\n                                    <td>\r\n                                      <span class=\"badge rounded-pill bg-primary\" (click)=\"showCategoriesModal(row[header])\" style=\"cursor: pointer;\">\r\n                                        View Details\r\n                                      </span>\r\n                                    </td>\r\n                                  </ng-template>\r\n                                </ng-container>\r\n                              </tr>                            \r\n                            </tbody>\r\n                          </table>\r\n                        </div> \r\n                        <!-- Pagination controls -->\r\n                        <div class=\"d-flex justify-content-between align-items-center mt-3\">\r\n                          <div>\r\n                            <small class=\"text-muted\">\r\n                              Showing {{ currentPage * pageSize + 1 }} to \r\n                              {{ Math.min((currentPage + 1) * pageSize, currentCsvFile.data.length) }} of \r\n                              {{ currentCsvFile.data.length }} rows\r\n                            </small>\r\n                          </div>\r\n                          <c-pagination aria-label=\"Data table pages\" size=\"sm\">\r\n                            <c-page-item [disabled]=\"currentPage === 0\">\r\n                              <a cPageLink (click)=\"changePage(0, 'bulk')\" style=\"cursor: pointer;\">First</a>\r\n                            </c-page-item>\r\n                            <c-page-item [disabled]=\"currentPage === 0\">\r\n                              <a cPageLink (click)=\"changePage(currentPage - 1, 'bulk')\" style=\"cursor: pointer;\">\r\n                                <span aria-hidden=\"true\">&laquo;</span>\r\n                              </a>\r\n                            </c-page-item>\r\n                            \r\n                            <c-page-item *ngFor=\"let page of getVisiblePageNumbers(currentCsvFile.data.length, pageSize, currentPage)\" \r\n                                        [active]=\"currentPage === page\">\r\n                              <a cPageLink (click)=\"changePage(page, 'bulk')\" style=\"cursor: pointer;\">\r\n                                {{ page + 1 }}\r\n                              </a>\r\n                            </c-page-item>\r\n                            \r\n                            <c-page-item [disabled]=\"currentPage >= Math.ceil(currentCsvFile.data.length / pageSize) - 1\">\r\n                              <a cPageLink (click)=\"changePage(currentPage + 1, 'bulk')\" style=\"cursor: pointer;\">\r\n                                <span aria-hidden=\"true\">&raquo;</span>\r\n                              </a>\r\n                            </c-page-item>\r\n                            <c-page-item [disabled]=\"currentPage >= Math.ceil(currentCsvFile.data.length / pageSize) - 1\">\r\n                              <a cPageLink (click)=\"changePage(Math.ceil(currentCsvFile.data.length / pageSize) - 1, 'bulk')\" style=\"cursor: pointer;\">Last</a>\r\n                            </c-page-item>\r\n                          </c-pagination>\r\n                          \r\n                          <div>\r\n                            <select \r\n                              cSelect \r\n                              size=\"sm\" \r\n                              [(ngModel)]=\"pageSize\" \r\n                              (change)=\"onPageSizeChange('bulk')\" \r\n                              style=\"width: auto;\"\r\n                              [ngModelOptions]=\"{standalone: true}\">\r\n                              <option [value]=\"10\">10 rows</option>\r\n                              <option [value]=\"25\">25 rows</option>\r\n                              <option [value]=\"50\">50 rows</option>\r\n                              <option [value]=\"100\">100 rows</option>\r\n                            </select>\r\n                          </div>\r\n                        </div>\r\n                      </c-card-body>\r\n                    </c-card>\r\n                  </c-card-body>\r\n                  <c-card-body *ngIf=\"!currentCsvFile\" class=\"text-center py-5\">\r\n                    <p class=\"text-muted\">No files selected. Please select a file from \"My Files\".</p>\r\n                  </c-card-body>\r\n                </c-card>\r\n              </c-col>\r\n\r\n              <!-- Right Column: File Management -->\r\n              <c-col md=\"4\">\r\n                <!-- File Upload Card - MOVED HERE from left column -->\r\n                <c-card class=\"mb-4\">\r\n                  <c-card-header>\r\n                    <strong>Upload CSV File</strong>\r\n                  </c-card-header>\r\n                  <c-card-body>\r\n                    <form cForm [formGroup]=\"fileUploadForm\">\r\n                      <div class=\"mb-3\">\r\n                        <label cLabel for=\"formFile\">Choose CSV file</label>\r\n                        <input cFormControl type=\"file\" id=\"formFile\" accept=\".csv\" (change)=\"onFileSelected($event)\">\r\n                        <p *ngIf=\"fileUploadForm.get('fileName')?.value\" class=\"mt-2 mb-0\">\r\n                          Selected: {{ fileUploadForm.get('fileName')?.value }}\r\n                        </p>\r\n                      </div>\r\n                      <div class=\"d-grid\">\r\n                        <button cButton color=\"primary\" type=\"button\" (click)=\"predictCsvFile()\"\r\n                          [disabled]=\"!fileUploadForm.get('csvFile')?.value\">\r\n                          Predict\r\n                        </button>\r\n                      </div>\r\n                    </form>\r\n                  </c-card-body>\r\n                </c-card>\r\n                <!-- Update the Pending Files section -->\r\n                <c-card class=\"mb-4\">\r\n                  <c-card-header>\r\n                    <strong>Pending Files</strong>\r\n                  </c-card-header>\r\n                  <c-card-body>\r\n                    <div *ngIf=\"pendingFiles.length === 0\" class=\"text-center py-3\">\r\n                      <p class=\"text-muted mb-0\">No pending files</p>\r\n                    </div>\r\n                    <div style=\"max-height: 200px; overflow-y: auto;\" *ngIf=\"pendingFiles.length > 0\">\r\n                      <ul cListGroup>\r\n                        <li cListGroupItem *ngFor=\"let file of pendingFiles\" class=\"d-flex align-items-center\">\r\n                          <div class=\"spinner-border spinner-border-sm text-primary me-2\" role=\"status\">\r\n                            <span class=\"visually-hidden\">Processing...</span>\r\n                          </div>\r\n                          <span class=\"text-truncate\">{{ file.name }}</span>\r\n                          <small class=\"text-muted ms-auto\">processing...</small>\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                    <div *ngIf=\"pendingFiles.length > 5\" class=\"text-end mt-2\">\r\n                      <small class=\"text-muted\">Showing {{ pendingFiles.length }} files</small>\r\n                    </div>\r\n                  </c-card-body>\r\n                </c-card>\r\n\r\n                <!-- Update the My Files section with search -->\r\n                <c-card>\r\n                  <c-card-header>\r\n                    <strong>My Files</strong>\r\n                  </c-card-header>\r\n                  <c-card-body>\r\n                    <!-- Add search input -->\r\n                    <div class=\"mb-3\">\r\n                      <div class=\"input-group\">\r\n                        <!-- <svg cIcon name=\"cil-search\"></svg> -->\r\n                        <input \r\n                          cFormControl \r\n                          type=\"text\" \r\n                          placeholder=\"Search files...\" \r\n                          [(ngModel)]=\"fileSearchQuery\"\r\n                          [ngModelOptions]=\"{standalone: true}\"\r\n                          (input)=\"filterFiles()\">\r\n                        <button \r\n                          *ngIf=\"fileSearchQuery\" \r\n                          cButton \r\n                          color=\"secondary\" \r\n                          variant=\"outline\" \r\n                          type=\"button\"\r\n                          (click)=\"clearFileSearch()\">\r\n                          &times;\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div *ngIf=\"filteredFiles.length === 0\" class=\"text-center py-3\">\r\n                      <p class=\"text-muted mb-0\">\r\n                        {{ myFiles.length === 0 ? 'No files available' : 'No matching files' }}\r\n                      </p>\r\n                    </div>\r\n                    \r\n                    <div style=\"max-height: 240px; overflow-y: auto;\" *ngIf=\"filteredFiles.length > 0\">\r\n                      <ul cListGroup>\r\n                        <li cListGroupItem \r\n                          *ngFor=\"let file of filteredFiles\"\r\n                          [active]=\"activeCsvFile === file.id\"\r\n                          style=\"cursor: pointer;\"\r\n                          (click)=\"loadFileToVisualization(file.id)\">\r\n                          <div class=\"d-flex align-items-center\">\r\n                            <span class=\"text-truncate\">{{ file.name }}</span>\r\n                            <small class=\"text-muted ms-auto\">\r\n                              {{ file.timestamp | date:'short' }}\r\n                            </small>\r\n                          </div>\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                    \r\n                    <div *ngIf=\"!fileSearchQuery && myFiles.length > 5\" class=\"text-end mt-2\">\r\n                      <small class=\"text-muted\">\r\n                        Showing {{ filteredFiles.length }} of {{ myFiles.length }} files\r\n                      </small>\r\n                    </div>\r\n                    <div *ngIf=\"fileSearchQuery && filteredFiles.length > 0\" class=\"text-end mt-2\">\r\n                      <small class=\"text-muted\">\r\n                        Found {{ filteredFiles.length }} {{ filteredFiles.length === 1 ? 'match' : 'matches' }}\r\n                      </small>\r\n                    </div>\r\n                  </c-card-body>\r\n                </c-card>\r\n              </c-col>\r\n            </c-row>\r\n          </div>\r\n        </c-card-body>\r\n      </c-card>\r\n    </c-card-body>\r\n  </c-card>\r\n\r\n  <!-- Simple Categories Modal -->\r\n  <c-card *ngIf=\"showCategoryModal\" class=\"position-fixed\" \r\n          style=\"top: 50%; left: 50%; transform: translate(-50%, -50%); z-index: 1050; max-width: 500px;\">\r\n    <c-card-header class=\"d-flex justify-content-between align-items-center\">\r\n      <strong>Category Details</strong>\r\n      <button cButton color=\"secondary\" variant=\"ghost\" size=\"sm\" (click)=\"showCategoryModal = false\">\r\n        &times;\r\n      </button>\r\n    </c-card-header>\r\n    <c-card-body>\r\n      <table cTable striped>\r\n        <thead>\r\n          <tr>\r\n            <th>Category</th>\r\n            <th>Confidence</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let category of selectedCategories\">\r\n            <td>\r\n              <span class=\"badge\" [style.background-color]=\"getCategoryColor(category.name)\">\r\n                {{ category.name }}\r\n              </span>\r\n            </td>\r\n            <td>{{ category.value }}%</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </c-card-body>\r\n  </c-card>\r\n\r\n  <!-- Modal backdrop -->\r\n  <div *ngIf=\"showCategoryModal\" class=\"position-fixed top-0 start-0 w-100 h-100\" \r\n      style=\"background-color: rgba(0,0,0,0.5); z-index: 1040;\"\r\n      (click)=\"showCategoryModal = false\">\r\n  </div>\r\n</div>"
        }
    ]
}