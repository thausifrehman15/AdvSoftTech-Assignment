{
    "sourceFile": "Frontend/src/app/views/dashboard/datafiles.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 9,
            "patches": [
                {
                    "date": 1747822458288,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1747822525170,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -770,9 +770,9 @@\n   // Only add if not a duplicate\r\n   if (!isDuplicate) {\r\n     userPredictionHistory.unshift({\r\n       text: prediction.text,\r\n-      sentiment: prediction.sentiment,\r\n+      result: prediction.sentiment || prediction.result,\r\n       confidence: prediction.confidence || prediction.score || 'NaN%',\r\n       timestamp: prediction.timestamp,\r\n       categories: prediction.categories || [],\r\n     });\r\n"
                },
                {
                    "date": 1747822538120,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -770,9 +770,9 @@\n   // Only add if not a duplicate\r\n   if (!isDuplicate) {\r\n     userPredictionHistory.unshift({\r\n       text: prediction.text,\r\n-      result: prediction.sentiment || prediction.result,\r\n+      sentiment: prediction.sentiment,\r\n       confidence: prediction.confidence || prediction.score || 'NaN%',\r\n       timestamp: prediction.timestamp,\r\n       categories: prediction.categories || [],\r\n     });\r\n"
                },
                {
                    "date": 1747822661543,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -770,12 +770,12 @@\n   // Only add if not a duplicate\r\n   if (!isDuplicate) {\r\n     userPredictionHistory.unshift({\r\n       text: prediction.text,\r\n-      sentiment: prediction.sentiment,\r\n-      confidence: prediction.confidence || prediction.score || 'NaN%',\r\n-      timestamp: prediction.timestamp,\r\n+      result: prediction.result || prediction.sentiment || 'Neutral',\r\n+      confidence: prediction.confidence || 0,\r\n       categories: prediction.categories || [],\r\n+      timestamp: prediction.timestamp || new Date()\r\n     });\r\n   }\r\n }\r\n \r\n"
                },
                {
                    "date": 1747823221590,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -760,26 +760,27 @@\n  * @param prediction Prediction to add\r\n  */\r\n export function addPredictionToHistory(prediction: any): void {\r\n   // Check if this exact prediction is already in the history\r\n-  const isDuplicate = userPredictionHistory.some(\r\n-    (p) =>\r\n-      p.text === prediction.text &&\r\n-      new Date(p.timestamp).getTime() === new Date(prediction.timestamp).getTime()\r\n+  const isDuplicate = mockData.predictionHistory.some(p => \r\n+    p.text === prediction.text && \r\n+    ((p.timestamp instanceof Date && prediction.timestamp instanceof Date && \r\n+      p.timestamp.getTime() === prediction.timestamp.getTime()) ||\r\n+     (typeof p.timestamp === 'string' && typeof prediction.timestamp === 'string' &&\r\n+      p.timestamp === prediction.timestamp))\r\n   );\r\n-\r\n+  \r\n   // Only add if not a duplicate\r\n   if (!isDuplicate) {\r\n-    userPredictionHistory.unshift({\r\n+    mockData.predictionHistory.unshift({\r\n       text: prediction.text,\r\n-      result: prediction.result || prediction.sentiment || 'Neutral',\r\n-      confidence: prediction.confidence || 0,\r\n+      result: prediction.result,\r\n+      confidence: prediction.confidence,\r\n       categories: prediction.categories || [],\r\n-      timestamp: prediction.timestamp || new Date()\r\n+      timestamp: prediction.timestamp\r\n     });\r\n   }\r\n }\r\n-\r\n /**\r\n  * UTILITY FUNCTIONS\r\n  */\r\n \r\n"
                },
                {
                    "date": 1747823282277,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -760,9 +760,9 @@\n  * @param prediction Prediction to add\r\n  */\r\n export function addPredictionToHistory(prediction: any): void {\r\n   // Check if this exact prediction is already in the history\r\n-  const isDuplicate = mockData.predictionHistory.some(p => \r\n+  const isDuplicate = userPredictionHistory.some((p: any) => \r\n     p.text === prediction.text && \r\n     ((p.timestamp instanceof Date && prediction.timestamp instanceof Date && \r\n       p.timestamp.getTime() === prediction.timestamp.getTime()) ||\r\n      (typeof p.timestamp === 'string' && typeof prediction.timestamp === 'string' &&\r\n@@ -770,9 +770,9 @@\n   );\r\n   \r\n   // Only add if not a duplicate\r\n   if (!isDuplicate) {\r\n-    mockData.predictionHistory.unshift({\r\n+    userPredictionHistory.unshift({\r\n       text: prediction.text,\r\n       result: prediction.result,\r\n       confidence: prediction.confidence,\r\n       categories: prediction.categories || [],\r\n"
                },
                {
                    "date": 1748182537520,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,11 +7,11 @@\n  */\r\n export const SAMPLE_PREDICTION_HISTORY = [\r\n   {\r\n     text: 'Great customer service experience with your team today!',\r\n-    result: 'Very Positive',\r\n+    final_prediction: 'Very Positive',\r\n     confidence: 45,\r\n-    categories: [\r\n+    sentiment_scores: [\r\n       { name: 'Very Negative', value: 5 },\r\n       { name: 'Slightly Negative', value: 7 },\r\n       { name: 'Neutral', value: 13 },\r\n       { name: 'Slightly Positive', value: 30 },\r\n@@ -20,11 +20,11 @@\n     timestamp: new Date('2025-05-20T17:13:00'),\r\n   },\r\n   {\r\n     text: 'Product arrived damaged and missing parts.',\r\n-    result: 'Very Negative',\r\n+    final_prediction: 'Very Negative',\r\n     confidence: 42,\r\n-    categories: [\r\n+    sentiment_scores: [\r\n       { name: 'Very Negative', value: 42 },\r\n       { name: 'Slightly Negative', value: 28 },\r\n       { name: 'Neutral', value: 15 },\r\n       { name: 'Slightly Positive', value: 10 },\r\n@@ -33,11 +33,11 @@\n     timestamp: new Date('2025-05-20T16:13:00'),\r\n   },\r\n   {\r\n     text: 'The documentation was clear and helpful.',\r\n-    result: 'Slightly Positive',\r\n+    final_prediction: 'Slightly Positive',\r\n     confidence: 38,\r\n-    categories: [\r\n+    sentiment_scores: [\r\n       { name: 'Very Negative', value: 8 },\r\n       { name: 'Slightly Negative', value: 12 },\r\n       { name: 'Neutral', value: 20 },\r\n       { name: 'Slightly Positive', value: 38 },\r\n@@ -46,11 +46,11 @@\n     timestamp: new Date('2025-05-20T15:13:00'),\r\n   },\r\n   {\r\n     text: 'Waiting for my refund for over 2 weeks now.',\r\n-    result: 'Slightly Negative',\r\n+    final_prediction: 'Slightly Negative',\r\n     confidence: 35,\r\n-    categories: [\r\n+    sentiment_scores: [\r\n       { name: 'Very Negative', value: 25 },\r\n       { name: 'Slightly Negative', value: 35 },\r\n       { name: 'Neutral', value: 20 },\r\n       { name: 'Slightly Positive', value: 15 },\r\n@@ -59,11 +59,11 @@\n     timestamp: new Date('2025-05-20T14:13:00'),\r\n   },\r\n   {\r\n     text: 'Neutral review, does what it says.',\r\n-    result: 'Neutral',\r\n+    final_prediction: 'Neutral',\r\n     confidence: 40,\r\n-    categories: [\r\n+    sentiment_scores: [\r\n       { name: 'Very Negative', value: 12 },\r\n       { name: 'Slightly Negative', value: 18 },\r\n       { name: 'Neutral', value: 40 },\r\n       { name: 'Slightly Positive', value: 20 },\r\n@@ -72,11 +72,11 @@\n     timestamp: new Date('2025-05-20T13:13:00'),\r\n   },\r\n   {\r\n     text: 'The product exceeded my expectations in every way.',\r\n-    result: 'Very Positive',\r\n+    final_prediction: 'Very Positive',\r\n     confidence: 45,\r\n-    categories: [\r\n+    sentiment_scores: [\r\n       { name: 'Very Negative', value: 5 },\r\n       { name: 'Slightly Negative', value: 7 },\r\n       { name: 'Neutral', value: 13 },\r\n       { name: 'Slightly Positive', value: 30 },\r\n@@ -85,11 +85,11 @@\n     timestamp: new Date('2025-05-20T12:13:00'),\r\n   },\r\n   {\r\n     text: 'This was a complete waste of money.',\r\n-    result: 'Very Negative',\r\n+    final_prediction: 'Very Negative',\r\n     confidence: 42,\r\n-    categories: [\r\n+    sentiment_scores: [\r\n       { name: 'Very Negative', value: 42 },\r\n       { name: 'Slightly Negative', value: 28 },\r\n       { name: 'Neutral', value: 15 },\r\n       { name: 'Slightly Positive', value: 10 },\r\n@@ -98,11 +98,11 @@\n     timestamp: new Date('2025-05-20T11:13:00'),\r\n   },\r\n   {\r\n     text: 'Average product, nothing special but works fine.',\r\n-    result: 'Slightly Positive',\r\n+    final_prediction: 'Slightly Positive',\r\n     confidence: 38,\r\n-    categories: [\r\n+    sentiment_scores: [\r\n       { name: 'Very Negative', value: 8 },\r\n       { name: 'Slightly Negative', value: 12 },\r\n       { name: 'Neutral', value: 20 },\r\n       { name: 'Slightly Positive', value: 38 },\r\n@@ -111,11 +111,11 @@\n     timestamp: new Date('2025-05-20T10:13:00'),\r\n   },\r\n   {\r\n     text: 'The customer support team was very responsive.',\r\n-    result: 'Slightly Negative',\r\n+    final_prediction: 'Slightly Negative',\r\n     confidence: 35,\r\n-    categories: [\r\n+    sentiment_scores: [\r\n       { name: 'Very Negative', value: 25 },\r\n       { name: 'Slightly Negative', value: 35 },\r\n       { name: 'Neutral', value: 20 },\r\n       { name: 'Slightly Positive', value: 15 },\r\n@@ -124,11 +124,11 @@\n     timestamp: new Date('2025-05-20T09:13:00'),\r\n   },\r\n   {\r\n     text: 'Software is buggy and crashes frequently.',\r\n-    result: 'Neutral',\r\n+    final_prediction: 'Neutral',\r\n     confidence: 40,\r\n-    categories: [\r\n+    sentiment_scores: [\r\n       { name: 'Very Negative', value: 12 },\r\n       { name: 'Slightly Negative', value: 18 },\r\n       { name: 'Neutral', value: 40 },\r\n       { name: 'Slightly Positive', value: 20 },\r\n@@ -137,11 +137,11 @@\n     timestamp: new Date('2025-05-20T08:13:00'),\r\n   },\r\n   {\r\n     text: 'Thank you for the prompt delivery!',\r\n-    result: 'Very Positive',\r\n+    final_prediction: 'Very Positive',\r\n     confidence: 45,\r\n-    categories: [\r\n+    sentiment_scores: [\r\n       { name: 'Very Negative', value: 5 },\r\n       { name: 'Slightly Negative', value: 7 },\r\n       { name: 'Neutral', value: 13 },\r\n       { name: 'Slightly Positive', value: 30 },\r\n@@ -150,11 +150,11 @@\n     timestamp: new Date('2025-05-20T07:13:00'),\r\n   },\r\n   {\r\n     text: 'Will definitely recommend to my friends.',\r\n-    result: 'Very Negative',\r\n+    final_prediction: 'Very Negative',\r\n     confidence: 42,\r\n-    categories: [\r\n+    sentiment_scores: [\r\n       { name: 'Very Negative', value: 42 },\r\n       { name: 'Slightly Negative', value: 28 },\r\n       { name: 'Neutral', value: 15 },\r\n       { name: 'Slightly Positive', value: 10 },\r\n@@ -163,11 +163,11 @@\n     timestamp: new Date('2025-05-20T06:13:00'),\r\n   },\r\n   {\r\n     text: 'Not what I expected based on the description.',\r\n-    result: 'Slightly Positive',\r\n+    final_prediction: 'Slightly Positive',\r\n     confidence: 38,\r\n-    categories: [\r\n+    sentiment_scores: [\r\n       { name: 'Very Negative', value: 8 },\r\n       { name: 'Slightly Negative', value: 12 },\r\n       { name: 'Neutral', value: 20 },\r\n       { name: 'Slightly Positive', value: 38 },\r\n@@ -186,120 +186,130 @@\n     name: 'Customer Feedback',\r\n     isDefault: false,\r\n     data: [\r\n       {\r\n-        Text: \"The service was exceptional and I'm very satisfied.\",\r\n-        Prediction: 'Very Positive',\r\n-        Confidence: 85,\r\n-        categories: [\r\n+        text: \"The service was exceptional and I'm very satisfied.\",\r\n+        final_prediction: 'Very Positive',\r\n+        confidence: 85,\r\n+        timestamp: new Date('2025-05-18T15:00:00'),\r\n+        sentiment_scores: [\r\n           { name: 'Very Negative', value: 3 },\r\n           { name: 'Slightly Negative', value: 2 },\r\n           { name: 'Neutral', value: 4 },\r\n           { name: 'Slightly Positive', value: 6 },\r\n           { name: 'Very Positive', value: 85 },\r\n         ],\r\n       },\r\n       {\r\n-        Text: \"Staff was rude and the product didn't work at all.\",\r\n-        Prediction: 'Very Negative',\r\n-        Confidence: 72,\r\n-        categories: [\r\n+        text: \"Staff was rude and the product didn't work at all.\",\r\n+        final_prediction: 'Very Negative',\r\n+        confidence: 72,\r\n+        timestamp: new Date('2025-05-18T15:00:00'),\r\n+        sentiment_scores: [\r\n           { name: 'Very Negative', value: 72 },\r\n           { name: 'Slightly Negative', value: 18 },\r\n           { name: 'Neutral', value: 5 },\r\n           { name: 'Slightly Positive', value: 3 },\r\n           { name: 'Very Positive', value: 2 },\r\n         ],\r\n       },\r\n       {\r\n-        Text: 'It functions as expected, no issues so far.',\r\n-        Prediction: 'Neutral',\r\n-        Confidence: 65,\r\n-        categories: [\r\n+        text: 'It functions as expected, no issues so far.',\r\n+        final_prediction: 'Neutral',\r\n+        confidence: 65,\r\n+        timestamp: new Date('2025-05-18T15:00:00'),\r\n+        sentiment_scores: [\r\n           { name: 'Very Negative', value: 5 },\r\n           { name: 'Slightly Negative', value: 8 },\r\n           { name: 'Neutral', value: 65 },\r\n           { name: 'Slightly Positive', value: 15 },\r\n           { name: 'Very Positive', value: 7 },\r\n         ],\r\n       },\r\n       {\r\n-        Text: 'The online experience could be improved.',\r\n-        Prediction: 'Slightly Negative',\r\n-        Confidence: 55,\r\n-        categories: [\r\n+        text: 'The online experience could be improved.',\r\n+        final_prediction: 'Slightly Negative',\r\n+        confidence: 55,\r\n+        timestamp: new Date('2025-05-18T15:00:00'),\r\n+        sentiment_scores: [\r\n           { name: 'Very Negative', value: 15 },\r\n           { name: 'Slightly Negative', value: 55 },\r\n           { name: 'Neutral', value: 20 },\r\n           { name: 'Slightly Positive', value: 7 },\r\n           { name: 'Very Positive', value: 3 },\r\n         ],\r\n       },\r\n       {\r\n-        Text: \"I'm mostly happy with my purchase.\",\r\n-        Prediction: 'Slightly Positive',\r\n-        Confidence: 68,\r\n-        categories: [\r\n+        text: \"I'm mostly happy with my purchase.\",\r\n+        final_prediction: 'Slightly Positive',\r\n+        confidence: 68,\r\n+        timestamp: new Date('2025-05-18T15:00:00'),\r\n+        sentiment_scores: [\r\n           { name: 'Very Negative', value: 5 },\r\n           { name: 'Slightly Negative', value: 7 },\r\n           { name: 'Neutral', value: 10 },\r\n           { name: 'Slightly Positive', value: 68 },\r\n           { name: 'Very Positive', value: 10 },\r\n         ],\r\n       },\r\n       {\r\n-        Text: 'Product is amazing but delivery was slow.',\r\n-        Prediction: 'Slightly Positive',\r\n-        Confidence: 62,\r\n-        categories: [\r\n+        text: 'Product is amazing but delivery was slow.',\r\n+        final_prediction: 'Slightly Positive',\r\n+        confidence: 62,\r\n+        timestamp: new Date('2025-05-18T15:00:00'),\r\n+        sentiment_scores: [\r\n           { name: 'Very Negative', value: 8 },\r\n           { name: 'Slightly Negative', value: 15 },\r\n           { name: 'Neutral', value: 5 },\r\n           { name: 'Slightly Positive', value: 62 },\r\n           { name: 'Very Positive', value: 10 },\r\n         ],\r\n       },\r\n       {\r\n-        Text: 'I returned the item immediately.',\r\n-        Prediction: 'Slightly Negative',\r\n-        Confidence: 58,\r\n-        categories: [\r\n+        text: 'I returned the item immediately.',\r\n+        final_prediction: 'Slightly Negative',\r\n+        confidence: 58,\r\n+        timestamp: new Date('2025-05-18T15:00:00'),\r\n+        sentiment_scores: [\r\n           { name: 'Very Negative', value: 25 },\r\n           { name: 'Slightly Negative', value: 58 },\r\n           { name: 'Neutral', value: 12 },\r\n           { name: 'Slightly Positive', value: 3 },\r\n           { name: 'Very Positive', value: 2 },\r\n         ],\r\n       },\r\n       {\r\n-        Text: \"It's ok I guess, nothing special.\",\r\n-        Prediction: 'Neutral',\r\n-        Confidence: 70,\r\n-        categories: [\r\n+        text: \"It's ok I guess, nothing special.\",\r\n+        final_prediction: 'Neutral',\r\n+        confidence: 70,\r\n+        timestamp: new Date('2025-05-18T15:00:00'),\r\n+        sentiment_scores: [\r\n           { name: 'Very Negative', value: 5 },\r\n           { name: 'Slightly Negative', value: 10 },\r\n           { name: 'Neutral', value: 70 },\r\n           { name: 'Slightly Positive', value: 10 },\r\n           { name: 'Very Positive', value: 5 },\r\n         ],\r\n       },\r\n       {\r\n-        Text: 'Great value for money, highly recommended!',\r\n-        Prediction: 'Very Positive',\r\n-        Confidence: 80,\r\n-        categories: [\r\n+        text: 'Great value for money, highly recommended!',\r\n+        final_prediction: 'Very Positive',\r\n+        confidence: 80,\r\n+        timestamp: new Date('2025-05-18T15:00:00'),\r\n+        sentiment_scores: [\r\n           { name: 'Very Negative', value: 2 },\r\n           { name: 'Slightly Negative', value: 3 },\r\n           { name: 'Neutral', value: 5 },\r\n           { name: 'Slightly Positive', value: 10 },\r\n           { name: 'Very Positive', value: 80 },\r\n         ],\r\n       },\r\n       {\r\n-        Text: 'The website crashed during checkout.',\r\n-        Prediction: 'Very Negative',\r\n-        Confidence: 75,\r\n-        categories: [\r\n+        text: 'The website crashed during checkout.',\r\n+        final_prediction: 'Very Negative',\r\n+        confidence: 75,\r\n+        timestamp: new Date('2025-05-18T15:00:00'),\r\n+        sentiment_scores: [\r\n           { name: 'Very Negative', value: 75 },\r\n           { name: 'Slightly Negative', value: 15 },\r\n           { name: 'Neutral', value: 5 },\r\n           { name: 'Slightly Positive', value: 3 },\r\n@@ -307,24 +317,26 @@\n         ],\r\n       },\r\n       // Add more rows to demonstrate pagination\r\n       {\r\n-        Text: 'Not worth the price I paid.',\r\n-        Prediction: 'Slightly Negative',\r\n-        Confidence: 60,\r\n-        categories: [\r\n+        text: 'Not worth the price I paid.',\r\n+        final_prediction: 'Slightly Negative',\r\n+        confidence: 60,\r\n+        timestamp: new Date('2025-05-18T15:00:00'),\r\n+        sentiment_scores: [\r\n           { name: 'Very Negative', value: 25 },\r\n           { name: 'Slightly Negative', value: 60 },\r\n           { name: 'Neutral', value: 10 },\r\n           { name: 'Slightly Positive', value: 3 },\r\n           { name: 'Very Positive', value: 2 },\r\n         ],\r\n       },\r\n       {\r\n-        Text: 'The shipping was incredibly fast!',\r\n-        Prediction: 'Very Positive',\r\n-        Confidence: 78,\r\n-        categories: [\r\n+        text: 'The shipping was incredibly fast!',\r\n+        final_prediction: 'Very Positive',\r\n+        confidence: 78,\r\n+        timestamp: new Date('2025-05-18T15:00:00'),\r\n+        sentiment_scores: [\r\n           { name: 'Very Negative', value: 2 },\r\n           { name: 'Slightly Negative', value: 5 },\r\n           { name: 'Neutral', value: 5 },\r\n           { name: 'Slightly Positive', value: 10 },\r\n@@ -341,36 +353,39 @@\n     name: 'Product Reviews',\r\n     isDefault: false,\r\n     data: [\r\n       {\r\n-        Text: 'This product changed my life!',\r\n-        Prediction: 'Very Positive',\r\n-        Confidence: 88,\r\n-        categories: [\r\n+        text: 'This product changed my life!',\r\n+        final_prediction: 'Very Positive',\r\n+        confidence: 88,\r\n+        timestamp: new Date('2025-05-18T15:00:00'),\r\n+        sentiment_scores: [\r\n           { name: 'Very Negative', value: 2 },\r\n           { name: 'Slightly Negative', value: 2 },\r\n           { name: 'Neutral', value: 3 },\r\n           { name: 'Slightly Positive', value: 5 },\r\n           { name: 'Very Positive', value: 88 },\r\n         ],\r\n       },\r\n       {\r\n-        Text: 'It broke after two days of use.',\r\n-        Prediction: 'Very Negative',\r\n-        Confidence: 76,\r\n-        categories: [\r\n+        text: 'It broke after two days of use.',\r\n+        final_prediction: 'Very Negative',\r\n+        confidence: 76,\r\n+        timestamp: new Date('2025-05-18T15:00:00'),\r\n+        sentiment_scores: [\r\n           { name: 'Very Negative', value: 76 },\r\n           { name: 'Slightly Negative', value: 15 },\r\n           { name: 'Neutral', value: 5 },\r\n           { name: 'Slightly Positive', value: 2 },\r\n           { name: 'Very Positive', value: 2 },\r\n         ],\r\n       },\r\n       {\r\n-        Text: 'Works as described, average performance.',\r\n-        Prediction: 'Neutral',\r\n-        Confidence: 65,\r\n-        categories: [\r\n+        text: 'Works as described, average performance.',\r\n+        final_prediction: 'Neutral',\r\n+        confidence: 65,\r\n+        timestamp: new Date('2025-05-18T15:00:00'),\r\n+        sentiment_scores: [\r\n           { name: 'Very Negative', value: 5 },\r\n           { name: 'Slightly Negative', value: 10 },\r\n           { name: 'Neutral', value: 65 },\r\n           { name: 'Slightly Positive', value: 15 },\r\n@@ -407,46 +422,49 @@\n   {\r\n     id: 'my1',\r\n     name: 'customer_segmentation.csv',\r\n     status: 'completed',\r\n-    timestamp: new Date(Date.now() - 2 * 24 * 60 * 60000), // 2 days ago\r\n+    timestamp: new Date(Date.now() - 2 * 24 * 60 * 60000),\r\n     isDefault: false,\r\n     data: [\r\n       {\r\n-        Text: 'I love your products and will keep buying them!',\r\n-        Prediction: 'Very Positive',\r\n-        Confidence: 90,\r\n-        categories: [\r\n+        text: 'I love your products and will keep buying them!',\r\n+        final_prediction: 'Very Positive',\r\n+        confidence: 90,\r\n+        sentiment_scores: [\r\n           { name: 'Very Negative', value: 2 },\r\n           { name: 'Slightly Negative', value: 2 },\r\n           { name: 'Neutral', value: 1 },\r\n           { name: 'Slightly Positive', value: 5 },\r\n           { name: 'Very Positive', value: 90 },\r\n         ],\r\n+        timestamp: new Date(),\r\n       },\r\n       {\r\n-        Text: 'Service was average, could be improved.',\r\n-        Prediction: 'Neutral',\r\n-        Confidence: 62,\r\n-        categories: [\r\n+        text: 'Service was average, could be improved.',\r\n+        final_prediction: 'Neutral',\r\n+        confidence: 62,\r\n+        sentiment_scores: [\r\n           { name: 'Very Negative', value: 8 },\r\n           { name: 'Slightly Negative', value: 15 },\r\n           { name: 'Neutral', value: 62 },\r\n           { name: 'Slightly Positive', value: 10 },\r\n           { name: 'Very Positive', value: 5 },\r\n         ],\r\n+        timestamp: new Date(),\r\n       },\r\n       {\r\n-        Text: 'I was very disappointed with my experience.',\r\n-        Prediction: 'Slightly Negative',\r\n-        Confidence: 68,\r\n-        categories: [\r\n+        text: 'I was very disappointed with my experience.',\r\n+        final_prediction: 'Slightly Negative',\r\n+        confidence: 68,\r\n+        sentiment_scores: [\r\n           { name: 'Very Negative', value: 20 },\r\n           { name: 'Slightly Negative', value: 68 },\r\n           { name: 'Neutral', value: 5 },\r\n           { name: 'Slightly Positive', value: 5 },\r\n           { name: 'Very Positive', value: 2 },\r\n         ],\r\n+        timestamp: new Date(),\r\n       },\r\n     ],\r\n     chartData: generateChartData('Customer Segmentation'),\r\n   },\r\n@@ -457,30 +475,32 @@\n     timestamp: new Date(Date.now() - 1 * 24 * 60 * 60000), // 1 day ago\r\n     isDefault: false,\r\n     data: [\r\n       {\r\n-        Text: 'Your promotional email was very informative.',\r\n-        Prediction: 'Slightly Positive',\r\n-        Confidence: 72,\r\n-        categories: [\r\n+        text: 'Your promotional email was very informative.',\r\n+        final_prediction: 'Slightly Positive',\r\n+        confidence: 72,\r\n+        sentiment_scores: [\r\n           { name: 'Very Negative', value: 3 },\r\n           { name: 'Slightly Negative', value: 5 },\r\n           { name: 'Neutral', value: 10 },\r\n           { name: 'Slightly Positive', value: 72 },\r\n           { name: 'Very Positive', value: 10 },\r\n         ],\r\n+        timestamp: new Date(),\r\n       },\r\n       {\r\n-        Text: 'I find these marketing emails annoying.',\r\n-        Prediction: 'Slightly Negative',\r\n-        Confidence: 65,\r\n-        categories: [\r\n+        text: 'I find these marketing emails annoying.',\r\n+        final_prediction: 'Slightly Negative',\r\n+        confidence: 65,\r\n+        sentiment_scores: [\r\n           { name: 'Very Negative', value: 20 },\r\n           { name: 'Slightly Negative', value: 65 },\r\n           { name: 'Neutral', value: 10 },\r\n           { name: 'Slightly Positive', value: 3 },\r\n           { name: 'Very Positive', value: 2 },\r\n         ],\r\n+        timestamp: new Date(),\r\n       },\r\n     ],\r\n     chartData: generateChartData('Marketing Campaign Results'),\r\n   },\r\n@@ -590,42 +610,45 @@\n         timestamp: new Date(),\r\n         isDefault: false,\r\n         data: [\r\n           {\r\n-            Text: 'We love your customer service approach!',\r\n-            Prediction: 'Very Positive',\r\n-            Confidence: 92,\r\n-            categories: [\r\n+            text: 'We love your customer service approach!',\r\n+            final_prediction: 'Very Positive',\r\n+            confidence: 92,\r\n+            sentiment_scores: [\r\n               { name: 'Very Negative', value: 1 },\r\n               { name: 'Slightly Negative', value: 2 },\r\n               { name: 'Neutral', value: 1 },\r\n               { name: 'Slightly Positive', value: 4 },\r\n               { name: 'Very Positive', value: 92 },\r\n             ],\r\n+            timestamp: new Date()\r\n           },\r\n           {\r\n-            Text: 'The product is okay but delivery was slow.',\r\n-            Prediction: 'Neutral',\r\n-            Confidence: 68,\r\n-            categories: [\r\n+            text: 'The product is okay but delivery was slow.',\r\n+            final_prediction: 'Neutral',\r\n+            confidence: 68,\r\n+            sentiment_scores: [\r\n               { name: 'Very Negative', value: 5 },\r\n               { name: 'Slightly Negative', value: 12 },\r\n               { name: 'Neutral', value: 68 },\r\n               { name: 'Slightly Positive', value: 10 },\r\n               { name: 'Very Positive', value: 5 },\r\n             ],\r\n+            timestamp: new Date()\r\n           },\r\n           {\r\n-            Text: 'I was disappointed with the quality.',\r\n-            Prediction: 'Slightly Negative',\r\n-            Confidence: 75,\r\n-            categories: [\r\n+            text: 'I was disappointed with the quality.',\r\n+            final_prediction: 'Slightly Negative',\r\n+            confidence: 75,\r\n+            sentiment_scores: [\r\n               { name: 'Very Negative', value: 15 },\r\n               { name: 'Slightly Negative', value: 75 },\r\n               { name: 'Neutral', value: 5 },\r\n               { name: 'Slightly Positive', value: 3 },\r\n               { name: 'Very Positive', value: 2 },\r\n             ],\r\n+            timestamp: new Date()\r\n           },\r\n         ],\r\n         chartData: {\r\n           labels: [\r\n@@ -772,15 +795,16 @@\n   // Only add if not a duplicate\r\n   if (!isDuplicate) {\r\n     userPredictionHistory.unshift({\r\n       text: prediction.text,\r\n-      result: prediction.result,\r\n+      final_prediction: prediction.final_prediction,\r\n       confidence: prediction.confidence,\r\n-      categories: prediction.categories || [],\r\n+      sentiment_scores: prediction.sentiment_scores || [],\r\n       timestamp: prediction.timestamp\r\n     });\r\n   }\r\n }\r\n+\r\n /**\r\n  * UTILITY FUNCTIONS\r\n  */\r\n \r\n"
                },
                {
                    "date": 1748187565072,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -557,9 +557,9 @@\n  * Mock API call to predict text sentiment\r\n  * @param text Text to analyze\r\n  * @returns Observable with prediction result\r\n  */\r\n-export function mockPredictText(text: string): Observable<any> {\r\n+export function mockPredictText(text: string): Predc {\r\n   // Simulate API processing time\r\n   return of({\r\n     text: text,\r\n     category: 'review',\r\n"
                },
                {
                    "date": 1748187624133,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n import { ChartData } from 'chart.js';\r\n import { Observable, of, throwError } from 'rxjs';\r\n import { delay } from 'rxjs/operators';\r\n+import { PredictionResponse } from './prediction.interface';\r\n \r\n /**\r\n  * Sample prediction history data for single prediction view\r\n  */\r\n@@ -557,13 +558,12 @@\n  * Mock API call to predict text sentiment\r\n  * @param text Text to analyze\r\n  * @returns Observable with prediction result\r\n  */\r\n-export function mockPredictText(text: string): Predc {\r\n+export function mockPredictText(text: string): PredictionResponse {\r\n   // Simulate API processing time\r\n   return of({\r\n     text: text,\r\n-    category: 'review',\r\n     final_prediction: getRandomPrediction(),\r\n     sentiment_scores: generateRandomSentimentScores(),\r\n     text_analysis: {\r\n       avg_word_length: (text.length / (text.split(' ').length || 1)).toFixed(1),\r\n"
                },
                {
                    "date": 1748187639070,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -560,20 +560,43 @@\n  * @returns Observable with prediction result\r\n  */\r\n export function mockPredictText(text: string): PredictionResponse {\r\n   // Simulate API processing time\r\n-  return of({\r\n+  // Generate random confidence value between 30 and 95\r\n+  const confidence = Math.floor(Math.random() * 65) + 30;\r\n+  \r\n+  // Get prediction category\r\n+  const final_prediction = getRandomPrediction();\r\n+  \r\n+  // Generate sentiment scores with highest value matching prediction\r\n+  const sentimentScores = [\r\n+    { name: 'Very Negative', value: Math.floor(Math.random() * 25) + 5 },\r\n+    { name: 'Slightly Negative', value: Math.floor(Math.random() * 25) + 5 },\r\n+    { name: 'Neutral', value: Math.floor(Math.random() * 25) + 5 },\r\n+    { name: 'Slightly Positive', value: Math.floor(Math.random() * 25) + 5 },\r\n+    { name: 'Very Positive', value: Math.floor(Math.random() * 25) + 5 },\r\n+  ];\r\n+  \r\n+  // Ensure the predicted category has the highest confidence\r\n+  const predictedCategoryIndex = sentimentScores.findIndex(\r\n+    (c) => c.name === final_prediction\r\n+  );\r\n+  if (predictedCategoryIndex >= 0) {\r\n+    sentimentScores[predictedCategoryIndex].value = confidence;\r\n+  }\r\n+  \r\n+  const prediction = {\r\n     text: text,\r\n-    final_prediction: getRandomPrediction(),\r\n-    sentiment_scores: generateRandomSentimentScores(),\r\n-    text_analysis: {\r\n-      avg_word_length: (text.length / (text.split(' ').length || 1)).toFixed(1),\r\n-      has_exclamation: text.includes('!'),\r\n-      has_question: text.includes('?'),\r\n-      length: text.length,\r\n-      word_count: text.split(' ').length,\r\n-    },\r\n-  }).pipe(delay(1500)); // Simulate network delay\r\n+    final_prediction: final_prediction,\r\n+    confidence: confidence,\r\n+    sentiment_scores: sentimentScores,\r\n+    timestamp: new Date()\r\n+  };\r\n+  \r\n+  // Add to prediction history\r\n+  addPredictionToHistory(prediction);\r\n+  \r\n+  return prediction;\r\n }\r\n \r\n /**\r\n  * Mock API call to upload and process CSV file\r\n"
                }
            ],
            "date": 1747822458288,
            "name": "Commit-0",
            "content": "import { ChartData } from 'chart.js';\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { delay } from 'rxjs/operators';\r\n\r\n/**\r\n * Sample prediction history data for single prediction view\r\n */\r\nexport const SAMPLE_PREDICTION_HISTORY = [\r\n  {\r\n    text: 'Great customer service experience with your team today!',\r\n    result: 'Very Positive',\r\n    confidence: 45,\r\n    categories: [\r\n      { name: 'Very Negative', value: 5 },\r\n      { name: 'Slightly Negative', value: 7 },\r\n      { name: 'Neutral', value: 13 },\r\n      { name: 'Slightly Positive', value: 30 },\r\n      { name: 'Very Positive', value: 45 },\r\n    ],\r\n    timestamp: new Date('2025-05-20T17:13:00'),\r\n  },\r\n  {\r\n    text: 'Product arrived damaged and missing parts.',\r\n    result: 'Very Negative',\r\n    confidence: 42,\r\n    categories: [\r\n      { name: 'Very Negative', value: 42 },\r\n      { name: 'Slightly Negative', value: 28 },\r\n      { name: 'Neutral', value: 15 },\r\n      { name: 'Slightly Positive', value: 10 },\r\n      { name: 'Very Positive', value: 5 },\r\n    ],\r\n    timestamp: new Date('2025-05-20T16:13:00'),\r\n  },\r\n  {\r\n    text: 'The documentation was clear and helpful.',\r\n    result: 'Slightly Positive',\r\n    confidence: 38,\r\n    categories: [\r\n      { name: 'Very Negative', value: 8 },\r\n      { name: 'Slightly Negative', value: 12 },\r\n      { name: 'Neutral', value: 20 },\r\n      { name: 'Slightly Positive', value: 38 },\r\n      { name: 'Very Positive', value: 22 },\r\n    ],\r\n    timestamp: new Date('2025-05-20T15:13:00'),\r\n  },\r\n  {\r\n    text: 'Waiting for my refund for over 2 weeks now.',\r\n    result: 'Slightly Negative',\r\n    confidence: 35,\r\n    categories: [\r\n      { name: 'Very Negative', value: 25 },\r\n      { name: 'Slightly Negative', value: 35 },\r\n      { name: 'Neutral', value: 20 },\r\n      { name: 'Slightly Positive', value: 15 },\r\n      { name: 'Very Positive', value: 5 },\r\n    ],\r\n    timestamp: new Date('2025-05-20T14:13:00'),\r\n  },\r\n  {\r\n    text: 'Neutral review, does what it says.',\r\n    result: 'Neutral',\r\n    confidence: 40,\r\n    categories: [\r\n      { name: 'Very Negative', value: 12 },\r\n      { name: 'Slightly Negative', value: 18 },\r\n      { name: 'Neutral', value: 40 },\r\n      { name: 'Slightly Positive', value: 20 },\r\n      { name: 'Very Positive', value: 10 },\r\n    ],\r\n    timestamp: new Date('2025-05-20T13:13:00'),\r\n  },\r\n  {\r\n    text: 'The product exceeded my expectations in every way.',\r\n    result: 'Very Positive',\r\n    confidence: 45,\r\n    categories: [\r\n      { name: 'Very Negative', value: 5 },\r\n      { name: 'Slightly Negative', value: 7 },\r\n      { name: 'Neutral', value: 13 },\r\n      { name: 'Slightly Positive', value: 30 },\r\n      { name: 'Very Positive', value: 45 },\r\n    ],\r\n    timestamp: new Date('2025-05-20T12:13:00'),\r\n  },\r\n  {\r\n    text: 'This was a complete waste of money.',\r\n    result: 'Very Negative',\r\n    confidence: 42,\r\n    categories: [\r\n      { name: 'Very Negative', value: 42 },\r\n      { name: 'Slightly Negative', value: 28 },\r\n      { name: 'Neutral', value: 15 },\r\n      { name: 'Slightly Positive', value: 10 },\r\n      { name: 'Very Positive', value: 5 },\r\n    ],\r\n    timestamp: new Date('2025-05-20T11:13:00'),\r\n  },\r\n  {\r\n    text: 'Average product, nothing special but works fine.',\r\n    result: 'Slightly Positive',\r\n    confidence: 38,\r\n    categories: [\r\n      { name: 'Very Negative', value: 8 },\r\n      { name: 'Slightly Negative', value: 12 },\r\n      { name: 'Neutral', value: 20 },\r\n      { name: 'Slightly Positive', value: 38 },\r\n      { name: 'Very Positive', value: 22 },\r\n    ],\r\n    timestamp: new Date('2025-05-20T10:13:00'),\r\n  },\r\n  {\r\n    text: 'The customer support team was very responsive.',\r\n    result: 'Slightly Negative',\r\n    confidence: 35,\r\n    categories: [\r\n      { name: 'Very Negative', value: 25 },\r\n      { name: 'Slightly Negative', value: 35 },\r\n      { name: 'Neutral', value: 20 },\r\n      { name: 'Slightly Positive', value: 15 },\r\n      { name: 'Very Positive', value: 5 },\r\n    ],\r\n    timestamp: new Date('2025-05-20T09:13:00'),\r\n  },\r\n  {\r\n    text: 'Software is buggy and crashes frequently.',\r\n    result: 'Neutral',\r\n    confidence: 40,\r\n    categories: [\r\n      { name: 'Very Negative', value: 12 },\r\n      { name: 'Slightly Negative', value: 18 },\r\n      { name: 'Neutral', value: 40 },\r\n      { name: 'Slightly Positive', value: 20 },\r\n      { name: 'Very Positive', value: 10 },\r\n    ],\r\n    timestamp: new Date('2025-05-20T08:13:00'),\r\n  },\r\n  {\r\n    text: 'Thank you for the prompt delivery!',\r\n    result: 'Very Positive',\r\n    confidence: 45,\r\n    categories: [\r\n      { name: 'Very Negative', value: 5 },\r\n      { name: 'Slightly Negative', value: 7 },\r\n      { name: 'Neutral', value: 13 },\r\n      { name: 'Slightly Positive', value: 30 },\r\n      { name: 'Very Positive', value: 45 },\r\n    ],\r\n    timestamp: new Date('2025-05-20T07:13:00'),\r\n  },\r\n  {\r\n    text: 'Will definitely recommend to my friends.',\r\n    result: 'Very Negative',\r\n    confidence: 42,\r\n    categories: [\r\n      { name: 'Very Negative', value: 42 },\r\n      { name: 'Slightly Negative', value: 28 },\r\n      { name: 'Neutral', value: 15 },\r\n      { name: 'Slightly Positive', value: 10 },\r\n      { name: 'Very Positive', value: 5 },\r\n    ],\r\n    timestamp: new Date('2025-05-20T06:13:00'),\r\n  },\r\n  {\r\n    text: 'Not what I expected based on the description.',\r\n    result: 'Slightly Positive',\r\n    confidence: 38,\r\n    categories: [\r\n      { name: 'Very Negative', value: 8 },\r\n      { name: 'Slightly Negative', value: 12 },\r\n      { name: 'Neutral', value: 20 },\r\n      { name: 'Slightly Positive', value: 38 },\r\n      { name: 'Very Positive', value: 22 },\r\n    ],\r\n    timestamp: new Date('2025-05-20T05:13:00'),\r\n  },\r\n];\r\n\r\n/**\r\n * Sample CSV files for bulk prediction view\r\n */\r\nexport const SAMPLE_CSV_FILES = [\r\n  {\r\n    id: 'csv1',\r\n    name: 'Customer Feedback',\r\n    isDefault: false,\r\n    data: [\r\n      {\r\n        Text: \"The service was exceptional and I'm very satisfied.\",\r\n        Prediction: 'Very Positive',\r\n        Confidence: 85,\r\n        categories: [\r\n          { name: 'Very Negative', value: 3 },\r\n          { name: 'Slightly Negative', value: 2 },\r\n          { name: 'Neutral', value: 4 },\r\n          { name: 'Slightly Positive', value: 6 },\r\n          { name: 'Very Positive', value: 85 },\r\n        ],\r\n      },\r\n      {\r\n        Text: \"Staff was rude and the product didn't work at all.\",\r\n        Prediction: 'Very Negative',\r\n        Confidence: 72,\r\n        categories: [\r\n          { name: 'Very Negative', value: 72 },\r\n          { name: 'Slightly Negative', value: 18 },\r\n          { name: 'Neutral', value: 5 },\r\n          { name: 'Slightly Positive', value: 3 },\r\n          { name: 'Very Positive', value: 2 },\r\n        ],\r\n      },\r\n      {\r\n        Text: 'It functions as expected, no issues so far.',\r\n        Prediction: 'Neutral',\r\n        Confidence: 65,\r\n        categories: [\r\n          { name: 'Very Negative', value: 5 },\r\n          { name: 'Slightly Negative', value: 8 },\r\n          { name: 'Neutral', value: 65 },\r\n          { name: 'Slightly Positive', value: 15 },\r\n          { name: 'Very Positive', value: 7 },\r\n        ],\r\n      },\r\n      {\r\n        Text: 'The online experience could be improved.',\r\n        Prediction: 'Slightly Negative',\r\n        Confidence: 55,\r\n        categories: [\r\n          { name: 'Very Negative', value: 15 },\r\n          { name: 'Slightly Negative', value: 55 },\r\n          { name: 'Neutral', value: 20 },\r\n          { name: 'Slightly Positive', value: 7 },\r\n          { name: 'Very Positive', value: 3 },\r\n        ],\r\n      },\r\n      {\r\n        Text: \"I'm mostly happy with my purchase.\",\r\n        Prediction: 'Slightly Positive',\r\n        Confidence: 68,\r\n        categories: [\r\n          { name: 'Very Negative', value: 5 },\r\n          { name: 'Slightly Negative', value: 7 },\r\n          { name: 'Neutral', value: 10 },\r\n          { name: 'Slightly Positive', value: 68 },\r\n          { name: 'Very Positive', value: 10 },\r\n        ],\r\n      },\r\n      {\r\n        Text: 'Product is amazing but delivery was slow.',\r\n        Prediction: 'Slightly Positive',\r\n        Confidence: 62,\r\n        categories: [\r\n          { name: 'Very Negative', value: 8 },\r\n          { name: 'Slightly Negative', value: 15 },\r\n          { name: 'Neutral', value: 5 },\r\n          { name: 'Slightly Positive', value: 62 },\r\n          { name: 'Very Positive', value: 10 },\r\n        ],\r\n      },\r\n      {\r\n        Text: 'I returned the item immediately.',\r\n        Prediction: 'Slightly Negative',\r\n        Confidence: 58,\r\n        categories: [\r\n          { name: 'Very Negative', value: 25 },\r\n          { name: 'Slightly Negative', value: 58 },\r\n          { name: 'Neutral', value: 12 },\r\n          { name: 'Slightly Positive', value: 3 },\r\n          { name: 'Very Positive', value: 2 },\r\n        ],\r\n      },\r\n      {\r\n        Text: \"It's ok I guess, nothing special.\",\r\n        Prediction: 'Neutral',\r\n        Confidence: 70,\r\n        categories: [\r\n          { name: 'Very Negative', value: 5 },\r\n          { name: 'Slightly Negative', value: 10 },\r\n          { name: 'Neutral', value: 70 },\r\n          { name: 'Slightly Positive', value: 10 },\r\n          { name: 'Very Positive', value: 5 },\r\n        ],\r\n      },\r\n      {\r\n        Text: 'Great value for money, highly recommended!',\r\n        Prediction: 'Very Positive',\r\n        Confidence: 80,\r\n        categories: [\r\n          { name: 'Very Negative', value: 2 },\r\n          { name: 'Slightly Negative', value: 3 },\r\n          { name: 'Neutral', value: 5 },\r\n          { name: 'Slightly Positive', value: 10 },\r\n          { name: 'Very Positive', value: 80 },\r\n        ],\r\n      },\r\n      {\r\n        Text: 'The website crashed during checkout.',\r\n        Prediction: 'Very Negative',\r\n        Confidence: 75,\r\n        categories: [\r\n          { name: 'Very Negative', value: 75 },\r\n          { name: 'Slightly Negative', value: 15 },\r\n          { name: 'Neutral', value: 5 },\r\n          { name: 'Slightly Positive', value: 3 },\r\n          { name: 'Very Positive', value: 2 },\r\n        ],\r\n      },\r\n      // Add more rows to demonstrate pagination\r\n      {\r\n        Text: 'Not worth the price I paid.',\r\n        Prediction: 'Slightly Negative',\r\n        Confidence: 60,\r\n        categories: [\r\n          { name: 'Very Negative', value: 25 },\r\n          { name: 'Slightly Negative', value: 60 },\r\n          { name: 'Neutral', value: 10 },\r\n          { name: 'Slightly Positive', value: 3 },\r\n          { name: 'Very Positive', value: 2 },\r\n        ],\r\n      },\r\n      {\r\n        Text: 'The shipping was incredibly fast!',\r\n        Prediction: 'Very Positive',\r\n        Confidence: 78,\r\n        categories: [\r\n          { name: 'Very Negative', value: 2 },\r\n          { name: 'Slightly Negative', value: 5 },\r\n          { name: 'Neutral', value: 5 },\r\n          { name: 'Slightly Positive', value: 10 },\r\n          { name: 'Very Positive', value: 78 },\r\n        ],\r\n      },\r\n    ],\r\n    status: 'completed',\r\n    timestamp: new Date('2025-05-18T14:30:00'),\r\n    chartData: generateChartData('Customer Feedback'),\r\n  },\r\n  {\r\n    id: 'csv2',\r\n    name: 'Product Reviews',\r\n    isDefault: false,\r\n    data: [\r\n      {\r\n        Text: 'This product changed my life!',\r\n        Prediction: 'Very Positive',\r\n        Confidence: 88,\r\n        categories: [\r\n          { name: 'Very Negative', value: 2 },\r\n          { name: 'Slightly Negative', value: 2 },\r\n          { name: 'Neutral', value: 3 },\r\n          { name: 'Slightly Positive', value: 5 },\r\n          { name: 'Very Positive', value: 88 },\r\n        ],\r\n      },\r\n      {\r\n        Text: 'It broke after two days of use.',\r\n        Prediction: 'Very Negative',\r\n        Confidence: 76,\r\n        categories: [\r\n          { name: 'Very Negative', value: 76 },\r\n          { name: 'Slightly Negative', value: 15 },\r\n          { name: 'Neutral', value: 5 },\r\n          { name: 'Slightly Positive', value: 2 },\r\n          { name: 'Very Positive', value: 2 },\r\n        ],\r\n      },\r\n      {\r\n        Text: 'Works as described, average performance.',\r\n        Prediction: 'Neutral',\r\n        Confidence: 65,\r\n        categories: [\r\n          { name: 'Very Negative', value: 5 },\r\n          { name: 'Slightly Negative', value: 10 },\r\n          { name: 'Neutral', value: 65 },\r\n          { name: 'Slightly Positive', value: 15 },\r\n          { name: 'Very Positive', value: 5 },\r\n        ],\r\n      },\r\n    ],\r\n    status: 'completed',\r\n    timestamp: new Date('2025-05-19T09:45:00'),\r\n    chartData: generateChartData('Product Reviews'),\r\n  },\r\n];\r\n\r\n/**\r\n * Sample pending files\r\n */\r\nexport const SAMPLE_PENDING_FILES = [\r\n  {\r\n    id: 'pending1',\r\n    name: 'large_dataset_processing.csv',\r\n    timestamp: new Date(Date.now() - 15 * 60000), // 15 minutes ago\r\n  },\r\n  {\r\n    id: 'pending2',\r\n    name: 'financial_predictions_2025.csv',\r\n    timestamp: new Date(Date.now() - 5 * 60000), // 5 minutes ago\r\n  },\r\n];\r\n\r\n/**\r\n * Sample \"My Files\" for file management\r\n */\r\nexport const SAMPLE_MY_FILES = [\r\n  {\r\n    id: 'my1',\r\n    name: 'customer_segmentation.csv',\r\n    status: 'completed',\r\n    timestamp: new Date(Date.now() - 2 * 24 * 60 * 60000), // 2 days ago\r\n    isDefault: false,\r\n    data: [\r\n      {\r\n        Text: 'I love your products and will keep buying them!',\r\n        Prediction: 'Very Positive',\r\n        Confidence: 90,\r\n        categories: [\r\n          { name: 'Very Negative', value: 2 },\r\n          { name: 'Slightly Negative', value: 2 },\r\n          { name: 'Neutral', value: 1 },\r\n          { name: 'Slightly Positive', value: 5 },\r\n          { name: 'Very Positive', value: 90 },\r\n        ],\r\n      },\r\n      {\r\n        Text: 'Service was average, could be improved.',\r\n        Prediction: 'Neutral',\r\n        Confidence: 62,\r\n        categories: [\r\n          { name: 'Very Negative', value: 8 },\r\n          { name: 'Slightly Negative', value: 15 },\r\n          { name: 'Neutral', value: 62 },\r\n          { name: 'Slightly Positive', value: 10 },\r\n          { name: 'Very Positive', value: 5 },\r\n        ],\r\n      },\r\n      {\r\n        Text: 'I was very disappointed with my experience.',\r\n        Prediction: 'Slightly Negative',\r\n        Confidence: 68,\r\n        categories: [\r\n          { name: 'Very Negative', value: 20 },\r\n          { name: 'Slightly Negative', value: 68 },\r\n          { name: 'Neutral', value: 5 },\r\n          { name: 'Slightly Positive', value: 5 },\r\n          { name: 'Very Positive', value: 2 },\r\n        ],\r\n      },\r\n    ],\r\n    chartData: generateChartData('Customer Segmentation'),\r\n  },\r\n  {\r\n    id: 'my2',\r\n    name: 'marketing_campaign_results.csv',\r\n    status: 'completed',\r\n    timestamp: new Date(Date.now() - 1 * 24 * 60 * 60000), // 1 day ago\r\n    isDefault: false,\r\n    data: [\r\n      {\r\n        Text: 'Your promotional email was very informative.',\r\n        Prediction: 'Slightly Positive',\r\n        Confidence: 72,\r\n        categories: [\r\n          { name: 'Very Negative', value: 3 },\r\n          { name: 'Slightly Negative', value: 5 },\r\n          { name: 'Neutral', value: 10 },\r\n          { name: 'Slightly Positive', value: 72 },\r\n          { name: 'Very Positive', value: 10 },\r\n        ],\r\n      },\r\n      {\r\n        Text: 'I find these marketing emails annoying.',\r\n        Prediction: 'Slightly Negative',\r\n        Confidence: 65,\r\n        categories: [\r\n          { name: 'Very Negative', value: 20 },\r\n          { name: 'Slightly Negative', value: 65 },\r\n          { name: 'Neutral', value: 10 },\r\n          { name: 'Slightly Positive', value: 3 },\r\n          { name: 'Very Positive', value: 2 },\r\n        ],\r\n      },\r\n    ],\r\n    chartData: generateChartData('Marketing Campaign Results'),\r\n  },\r\n];\r\n\r\n/**\r\n * Helper function to generate chart data for a sample dataset\r\n */\r\nfunction generateChartData(datasetName: string): ChartData {\r\n  // This would normally be generated from the actual data\r\n  // Here we're just creating dummy chart data\r\n  return {\r\n    labels: [\r\n      'Very Negative',\r\n      'Slightly Negative',\r\n      'Neutral',\r\n      'Slightly Positive',\r\n      'Very Positive',\r\n    ],\r\n    datasets: [\r\n      {\r\n        label: datasetName + ' Sentiment Analysis',\r\n        backgroundColor: [\r\n          'rgba(220, 53, 69, 0.8)', // Very Negative - red\r\n          'rgba(255, 193, 7, 0.8)', // Slightly Negative - amber\r\n          'rgba(108, 117, 125, 0.8)', // Neutral - gray\r\n          'rgba(13, 202, 240, 0.8)', // Slightly Positive - info blue\r\n          'rgba(25, 135, 84, 0.8)', // Very Positive - green\r\n        ],\r\n        borderColor: 'rgba(179,181,198,1)',\r\n        data: [\r\n          Math.floor(Math.random() * 20 + 5), // Very Negative\r\n          Math.floor(Math.random() * 25 + 10), // Slightly Negative\r\n          Math.floor(Math.random() * 30 + 15), // Neutral\r\n          Math.floor(Math.random() * 35 + 10), // Slightly Positive\r\n          Math.floor(Math.random() * 25 + 10), // Very Positive\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n}\r\n\r\nlet userPredictionHistory = [...SAMPLE_PREDICTION_HISTORY];\r\nlet pendingFiles = [...SAMPLE_PENDING_FILES];\r\nlet completedFiles = [...SAMPLE_MY_FILES];\r\nlet csvFilesData = [...SAMPLE_CSV_FILES];\r\n\r\n/**\r\n * MOCK API FUNCTIONS\r\n * These functions simulate API endpoints\r\n */\r\n\r\n/**\r\n * Mock API call to predict text sentiment\r\n * @param text Text to analyze\r\n * @returns Observable with prediction result\r\n */\r\nexport function mockPredictText(text: string): Observable<any> {\r\n  // Simulate API processing time\r\n  return of({\r\n    text: text,\r\n    category: 'review',\r\n    final_prediction: getRandomPrediction(),\r\n    sentiment_scores: generateRandomSentimentScores(),\r\n    text_analysis: {\r\n      avg_word_length: (text.length / (text.split(' ').length || 1)).toFixed(1),\r\n      has_exclamation: text.includes('!'),\r\n      has_question: text.includes('?'),\r\n      length: text.length,\r\n      word_count: text.split(' ').length,\r\n    },\r\n  }).pipe(delay(1500)); // Simulate network delay\r\n}\r\n\r\n/**\r\n * Mock API call to upload and process CSV file\r\n * @param file File to process\r\n * @returns Observable with file details\r\n */\r\nexport function mockUploadCsvFile(\r\n  file: File\r\n): Observable<{ fileId: string; name: string; timestamp: Date }> {\r\n  // Generate a unique ID\r\n  const fileId = 'file_' + Date.now();\r\n  const timestamp = new Date();\r\n\r\n  // Add to pending files\r\n  const pendingFile = {\r\n    id: fileId,\r\n    name: file.name,\r\n    timestamp: timestamp,\r\n  };\r\n  pendingFiles.push(pendingFile);\r\n\r\n  // Schedule automatic completion after 8 seconds\r\n  setTimeout(() => {\r\n    // Find and remove the file from pending\r\n    const pendingIndex = pendingFiles.findIndex((f) => f.id === fileId);\r\n    if (pendingIndex !== -1) {\r\n      pendingFiles.splice(pendingIndex, 1);\r\n\r\n      // Create completed file with sample data\r\n      const newCompletedFile = {\r\n        id: fileId,\r\n        name: file.name,\r\n        status: 'completed' as 'completed' | 'pending' | 'error',\r\n        timestamp: new Date(),\r\n        isDefault: false,\r\n        data: [\r\n          {\r\n            Text: 'We love your customer service approach!',\r\n            Prediction: 'Very Positive',\r\n            Confidence: 92,\r\n            categories: [\r\n              { name: 'Very Negative', value: 1 },\r\n              { name: 'Slightly Negative', value: 2 },\r\n              { name: 'Neutral', value: 1 },\r\n              { name: 'Slightly Positive', value: 4 },\r\n              { name: 'Very Positive', value: 92 },\r\n            ],\r\n          },\r\n          {\r\n            Text: 'The product is okay but delivery was slow.',\r\n            Prediction: 'Neutral',\r\n            Confidence: 68,\r\n            categories: [\r\n              { name: 'Very Negative', value: 5 },\r\n              { name: 'Slightly Negative', value: 12 },\r\n              { name: 'Neutral', value: 68 },\r\n              { name: 'Slightly Positive', value: 10 },\r\n              { name: 'Very Positive', value: 5 },\r\n            ],\r\n          },\r\n          {\r\n            Text: 'I was disappointed with the quality.',\r\n            Prediction: 'Slightly Negative',\r\n            Confidence: 75,\r\n            categories: [\r\n              { name: 'Very Negative', value: 15 },\r\n              { name: 'Slightly Negative', value: 75 },\r\n              { name: 'Neutral', value: 5 },\r\n              { name: 'Slightly Positive', value: 3 },\r\n              { name: 'Very Positive', value: 2 },\r\n            ],\r\n          },\r\n        ],\r\n        chartData: {\r\n          labels: [\r\n            'Very Negative',\r\n            'Slightly Negative',\r\n            'Neutral',\r\n            'Slightly Positive',\r\n            'Very Positive',\r\n          ],\r\n          datasets: [\r\n            {\r\n              label: 'Sentiment Analysis Results',\r\n              backgroundColor: [\r\n                'rgba(220, 53, 69, 0.8)', // Very Negative - red\r\n                'rgba(255, 193, 7, 0.8)', // Slightly Negative - amber\r\n                'rgba(108, 117, 125, 0.8)', // Neutral - gray\r\n                'rgba(13, 202, 240, 0.8)', // Slightly Positive - info blue\r\n                'rgba(25, 135, 84, 0.8)', // Very Positive - green\r\n              ],\r\n              borderColor: 'rgba(179,181,198,1)',\r\n              data: [7, 29, 25, 14, 31],\r\n            },\r\n          ],\r\n        },\r\n      };\r\n\r\n      // Add to completed files\r\n      completedFiles.push(newCompletedFile);\r\n\r\n      // Add to CSV files data for visualization\r\n      csvFilesData.push(newCompletedFile);\r\n    }\r\n  }, 8000); // Process after 8 seconds\r\n\r\n  // Return the file details immediately\r\n  return of({\r\n    fileId: fileId,\r\n    name: file.name,\r\n    timestamp: timestamp,\r\n  }).pipe(delay(800)); // Simulate upload delay\r\n}\r\n\r\n/**\r\n * Mock API call to get all files (pending and completed)\r\n * @returns Observable with file lists\r\n */\r\nexport function mockGetFiles(): Observable<{\r\n  pendingFiles: any[];\r\n  completedFiles: any[];\r\n}> {\r\n  return of({\r\n    pendingFiles: pendingFiles,\r\n    completedFiles: completedFiles,\r\n  }).pipe(delay(600));\r\n}\r\n\r\n/**\r\n * Mock API call to get file details\r\n * @param fileId ID of the file to retrieve\r\n * @returns Observable with file data\r\n */\r\nexport function mockGetFileDetails(fileId: string): Observable<any> {\r\n  // Check if file exists in CSV files\r\n  const existingFile = csvFilesData.find((file) => file.id === fileId);\r\n  if (existingFile) {\r\n    return of(existingFile).pipe(delay(700));\r\n  }\r\n\r\n  // Check if file exists in completed files\r\n  const completedFile = completedFiles.find((file) => file.id === fileId);\r\n  if (completedFile) {\r\n    return of(completedFile).pipe(delay(700));\r\n  }\r\n\r\n  // File not found\r\n  return throwError(() => new Error('File not found'));\r\n}\r\n\r\n/**\r\n * Mock API call to check file processing status\r\n * @param fileId ID of file to check\r\n * @returns Observable with status information\r\n */\r\nexport function mockCheckFileStatus(\r\n  fileId: string\r\n): Observable<{ status: string; progress?: number }> {\r\n  // Find if file is in pending\r\n  const pendingIndex = pendingFiles.findIndex((file) => file.id === fileId);\r\n\r\n  if (pendingIndex === -1) {\r\n    // File not in pending - either completed or doesn't exist\r\n    const completedFile = completedFiles.find((file) => file.id === fileId);\r\n    if (completedFile) {\r\n      return of({ status: 'completed' }).pipe(delay(300));\r\n    }\r\n    return of({ status: 'error', progress: 0 }).pipe(delay(300));\r\n  }\r\n\r\n  // File is still pending - calculate a progress percentage based on time elapsed\r\n  // We know it will complete after 8 seconds\r\n  const pendingFile = pendingFiles[pendingIndex];\r\n  const timeElapsed = Date.now() - pendingFile.timestamp.getTime();\r\n  const progressPercentage = Math.min(\r\n    Math.floor((timeElapsed / 8000) * 100),\r\n    99\r\n  );\r\n\r\n  return of({\r\n    status: 'pending',\r\n    progress: progressPercentage,\r\n  }).pipe(delay(300));\r\n}\r\n\r\n/**\r\n * Mock API call to get user data including prediction history and files\r\n * @returns Observable with user data\r\n */\r\nexport function mockGetUserData(): Observable<{\r\n  predictionHistory: any[];\r\n  pendingFiles: any[];\r\n  completedFiles: any[];\r\n}> {\r\n  return of({\r\n    predictionHistory: userPredictionHistory,\r\n    pendingFiles: pendingFiles,\r\n    completedFiles: completedFiles,\r\n  }).pipe(delay(800));\r\n}\r\n\r\n/**\r\n * Helper function to add a prediction to history\r\n * @param prediction Prediction to add\r\n */\r\nexport function addPredictionToHistory(prediction: any): void {\r\n  // Check if this exact prediction is already in the history\r\n  const isDuplicate = userPredictionHistory.some(\r\n    (p) =>\r\n      p.text === prediction.text &&\r\n      new Date(p.timestamp).getTime() === new Date(prediction.timestamp).getTime()\r\n  );\r\n\r\n  // Only add if not a duplicate\r\n  if (!isDuplicate) {\r\n    userPredictionHistory.unshift({\r\n      text: prediction.text,\r\n      sentiment: prediction.sentiment,\r\n      confidence: prediction.confidence || prediction.score || 'NaN%',\r\n      timestamp: prediction.timestamp,\r\n      categories: prediction.categories || [],\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * UTILITY FUNCTIONS\r\n */\r\n\r\n/**\r\n * Generate random prediction category\r\n */\r\nfunction getRandomPrediction(): string {\r\n  const predictions = [\r\n    'Very Positive',\r\n    'Slightly Positive',\r\n    'Neutral',\r\n    'Slightly Negative',\r\n    'Very Negative',\r\n  ];\r\n  return predictions[Math.floor(Math.random() * predictions.length)];\r\n}\r\n\r\n/**\r\n * Generate random sentiment scores\r\n */\r\nfunction generateRandomSentimentScores(): Record<string, number> {\r\n  // Generate base values that will sum to roughly 1\r\n  const veryPositive = Math.random() * 0.3;\r\n  const slightlyPositive = Math.random() * 0.3;\r\n  const neutral = Math.random() * 0.2;\r\n  const slightlyNegative = Math.random() * 0.2;\r\n  const negative = Math.random() * 0.2;\r\n\r\n  // Calculate total\r\n  const total =\r\n    veryPositive + slightlyPositive + neutral + slightlyNegative + negative;\r\n\r\n  // Normalize to sum to 1\r\n  return {\r\n    'Very Positive': parseFloat((veryPositive / total).toFixed(4)),\r\n    'Slightly Positive': parseFloat((slightlyPositive / total).toFixed(4)),\r\n    Neutral: parseFloat((neutral / total).toFixed(4)),\r\n    'Slightly Negative': parseFloat((slightlyNegative / total).toFixed(4)),\r\n    Negative: parseFloat((negative / total).toFixed(4)),\r\n  };\r\n}\r\n\r\n/**\r\n * Generate random file data with predictions\r\n * @param rowCount Number of rows to generate\r\n */\r\nfunction generateRandomFileData(rowCount: number): any[] {\r\n  const sampleTexts = [\r\n    'The customer service was exceptional.',\r\n    'I had a terrible experience with this product.',\r\n    'It was okay, nothing special.',\r\n    \"I can't believe how amazing this is!\",\r\n    \"This doesn't work as advertised.\",\r\n    'Average product, does what it says.',\r\n    'Slightly disappointed with quality.',\r\n    'Good value for money.',\r\n    'Would recommend to others.',\r\n    \"Wouldn't buy again.\",\r\n  ];\r\n\r\n  const result: any[] = [];\r\n\r\n  for (let i = 0; i < rowCount; i++) {\r\n    const text = sampleTexts[Math.floor(Math.random() * sampleTexts.length)];\r\n    const prediction = getRandomPrediction();\r\n    const confidence = Math.floor(Math.random() * 40) + 60; // 60-99%\r\n\r\n    // Generate categories with the predicted category having the highest value\r\n    const categories = [\r\n      { name: 'Very Negative', value: Math.floor(Math.random() * 20) },\r\n      { name: 'Slightly Negative', value: Math.floor(Math.random() * 20) },\r\n      { name: 'Neutral', value: Math.floor(Math.random() * 20) },\r\n      { name: 'Slightly Positive', value: Math.floor(Math.random() * 20) },\r\n      { name: 'Very Positive', value: Math.floor(Math.random() * 20) },\r\n    ];\r\n\r\n    // Make sure predicted category has highest confidence\r\n    const predictedCategoryIndex = categories.findIndex(\r\n      (c) => c.name === prediction\r\n    );\r\n    if (predictedCategoryIndex >= 0) {\r\n      categories[predictedCategoryIndex].value = confidence;\r\n    }\r\n\r\n    result.push({\r\n      Text: text,\r\n      Prediction: prediction,\r\n      Confidence: confidence,\r\n      categories: categories,\r\n    });\r\n  }\r\n\r\n  return result;\r\n}\r\n"
        }
    ]
}