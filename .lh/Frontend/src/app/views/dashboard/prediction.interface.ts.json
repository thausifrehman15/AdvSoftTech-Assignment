{
    "sourceFile": "Frontend/src/app/views/dashboard/prediction.interface.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 43,
            "patches": [
                {
                    "date": 1748182596040,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1748380037332,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,133 +1,45 @@\n-import { ChartData } from \"chart.js\";\r\n-\r\n-export interface LoginRequest {\r\n-  username: string;\r\n-  password: string;\r\n+export interface SentimentScore {\r\n+  name: string;\r\n+  value: number;\r\n }\r\n \r\n-export interface LoginResponse {\r\n-  token: string;\r\n-  user?: {\r\n-    id: string;\r\n-    username: string;\r\n-    email: string;\r\n-  };\r\n-  message?: string;\r\n-}\r\n-\r\n-export interface RegisterRequest {\r\n-  email: string;\r\n-  username: string;\r\n-  password: string;\r\n-}\r\n-\r\n-export interface RegisterResponse {\r\n-  success: boolean;\r\n-  message: string;\r\n-  user?: {\r\n-    id: string;\r\n-    username: string;\r\n-    email: string;\r\n-  };\r\n-}\r\n-\r\n-export interface PredictionRequest {\r\n-  text: string;\r\n-}\r\n-\r\n export interface PredictionResponse {\r\n   text: string;\r\n+  final_prediction: string;\r\n   confidence: number;\r\n-  final_prediction?: string;\r\n-  sentiment_scores?: {name:string,value:number}[];\r\n-  timestamp?: Date;\r\n+  sentiment_scores: SentimentScore[];\r\n+  timestamp: Date;\r\n }\r\n \r\n-export interface FileUploadResponse {\r\n-  fileId: string;\r\n-  name: string;\r\n-  status: string;\r\n-  message?: string;\r\n-  timestamp: Date;\r\n+export interface UserData {\r\n+  predictionHistory: PredictionResponse[];\r\n+  pendingFiles: FileDetails[];\r\n+  completedFiles: FileDetails[];\r\n }\r\n \r\n-export interface FileListItem {\r\n+export interface FileDetails {\r\n   id: string;\r\n   name: string;\r\n-  data: any[];\r\n-  chartData?: ChartData;\r\n+  timestamp: string | Date;\r\n+  status?: string;\r\n   isDefault?: boolean;\r\n-  status: string;\r\n-  timestamp: Date; \r\n+  data?: any[];\r\n+  chartData?: any;\r\n }\r\n \r\n-// Make the data property optional in CompletedFile\r\n-export interface CompletedFile {\r\n-  id: string;\r\n-  name: string;\r\n-  status: string;\r\n-  timestamp: Date;\r\n-  data?: PredictionResponse[]; // Use PredictionResponse for data\r\n-}\r\n-\r\n-// Use FileListItem for completedFiles since your mock data matches that structure\r\n-export interface FileListResponse {\r\n-  pendingFiles: Array<{\r\n-    id: string;\r\n-    name: string;\r\n-    timestamp: string;\r\n-  }>;\r\n-  completedFiles: Array<{\r\n-    id: string;\r\n-    name: string;\r\n-    status: string;\r\n-    timestamp: string;\r\n-    data?: PredictionResponse[];\r\n-  }>;\r\n-  count: number;\r\n-}\r\n-\r\n-export interface FileDetailResponse {\r\n-  id: string;\r\n-  name: string;\r\n-  status: string;\r\n-  timestamp: Date;\r\n-  uploadedAt?: string;\r\n-  data?: PredictionResponse[]; // Use PredictionResponse for data\r\n-}\r\n-\r\n-export interface FileStatusResponse {\r\n-  id: string;\r\n-  status: string;\r\n-  progress?: number;\r\n+export interface ApiResponse<T> {\r\n+  success: boolean;\r\n   message?: string;\r\n+  data?: T;\r\n+  error?: string;\r\n }\r\n \r\n-// Update the UserDataResponse to match your mock data structure\r\n-export interface UserDataResponse {\r\n-  username: string;\r\n-  email: string;\r\n-  totalPredictions: number;\r\n-  totalFiles: number;\r\n-  predictionHistory: Array<{\r\n-    text: string;\r\n-    final_prediction: string;\r\n-    confidence: number;\r\n-    sentiment_scores: { name: string; value: number; }[];\r\n-    timestamp: string;\r\n-  }>;\r\n-  pendingFiles: Array<{\r\n+export interface AuthResponse {\r\n+  token: string;\r\n+  message: string;\r\n+  user?: {\r\n     id: string;\r\n-    name: string;\r\n-    timestamp: string;\r\n-  }>;\r\n-  completedFiles: Array<{\r\n-    id: string;\r\n-    name: string;\r\n-    status: string;\r\n-    timestamp: string;\r\n-    data?: PredictionResponse[];\r\n-  }>;\r\n+    username: string;\r\n+    email: string;\r\n+  };\r\n }\r\n-\r\n-// Add additional interfaces if needed...\r\n"
                },
                {
                    "date": 1748381458608,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,45 +1,46 @@\n+export interface FileDetails {\r\n+  id: string;\r\n+  name: string;\r\n+  timestamp: string;\r\n+  data: any[];\r\n+}\r\n+\r\n export interface SentimentScore {\r\n   name: string;\r\n   value: number;\r\n }\r\n \r\n-export interface PredictionResponse {\r\n-  text: string;\r\n-  final_prediction: string;\r\n-  confidence: number;\r\n-  sentiment_scores: SentimentScore[];\r\n-  timestamp: Date;\r\n+export interface PredictionResult {\r\n+  prediction: string;\r\n+  categories: SentimentScore[];\r\n }\r\n \r\n-export interface UserData {\r\n-  predictionHistory: PredictionResponse[];\r\n-  pendingFiles: FileDetails[];\r\n-  completedFiles: FileDetails[];\r\n+export interface ApiResponse<T = any> {\r\n+  success: boolean;\r\n+  data?: T;\r\n+  error?: string;\r\n }\r\n \r\n-export interface FileDetails {\r\n-  id: string;\r\n+export interface FileUploadResponse {\r\n+  fileId: string;\r\n   name: string;\r\n-  timestamp: string | Date;\r\n-  status?: string;\r\n-  isDefault?: boolean;\r\n-  data?: any[];\r\n-  chartData?: any;\r\n+  timestamp: string;\r\n }\r\n \r\n-export interface ApiResponse<T> {\r\n-  success: boolean;\r\n+export interface FileStatus {\r\n+  status: 'processing' | 'completed' | 'error';\r\n   message?: string;\r\n-  data?: T;\r\n-  error?: string;\r\n }\r\n \r\n-export interface AuthResponse {\r\n-  token: string;\r\n-  message: string;\r\n-  user?: {\r\n-    id: string;\r\n-    username: string;\r\n-    email: string;\r\n-  };\r\n+export interface FileListResponse {\r\n+  completedFiles: FileDetails[];\r\n+  pendingFiles: FileDetails[];\r\n }\r\n+\r\n+export interface PredictionHistory {\r\n+  id: string;\r\n+  text: string;\r\n+  prediction: string;\r\n+  categories: SentimentScore[];\r\n+  timestamp: string;\r\n+}\r\n"
                },
                {
                    "date": 1748381484443,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,9 @@\n   id: string;\r\n   name: string;\r\n   timestamp: string;\r\n   data: any[];\r\n+  status?: 'processing' | 'completed' | 'error';\r\n }\r\n \r\n export interface SentimentScore {\r\n   name: string;\r\n@@ -43,4 +44,23 @@\n   prediction: string;\r\n   categories: SentimentScore[];\r\n   timestamp: string;\r\n }\r\n+\r\n+export interface PredictionResponse {\r\n+  text: string;\r\n+  prediction: string;\r\n+  categories: SentimentScore[];\r\n+  timestamp: string;\r\n+}\r\n+\r\n+export interface UserData {\r\n+  pendingFiles: FileDetails[];\r\n+  completedFiles: FileDetails[];\r\n+  predictionHistory: PredictionHistory[];\r\n+}\r\n+\r\n+export interface PredictionRequest {\r\n+  text: string;\r\n+  language?: string;\r\n+  saveToHistory?: boolean;\r\n+}\r\n"
                },
                {
                    "date": 1748381512701,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,16 +42,19 @@\n   id: string;\r\n   text: string;\r\n   prediction: string;\r\n   categories: SentimentScore[];\r\n-  timestamp: string;\r\n+  timestamp: Date;\r\n }\r\n \r\n export interface PredictionResponse {\r\n   text: string;\r\n-  prediction: string;\r\n-  categories: SentimentScore[];\r\n-  timestamp: string;\r\n+  final_prediction: string;\r\n+  confidence: number;\r\n+  sentiment_scores: {\r\n+    [key: string]: number;\r\n+  };\r\n+  timestamp: Date;\r\n }\r\n \r\n export interface UserData {\r\n   pendingFiles: FileDetails[];\r\n@@ -63,4 +66,12 @@\n   text: string;\r\n   language?: string;\r\n   saveToHistory?: boolean;\r\n }\r\n+\r\n+// Helper function to convert timestamp string to Date\r\n+export function toDate(timestamp: string | Date): Date {\r\n+  if (timestamp instanceof Date) {\r\n+    return timestamp;\r\n+  }\r\n+  return new Date(timestamp);\r\n+}\r\n"
                },
                {
                    "date": 1748381539193,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,8 +12,9 @@\n }\r\n \r\n export interface PredictionResult {\r\n   prediction: string;\r\n+  confidence?: number;\r\n   categories: SentimentScore[];\r\n }\r\n \r\n export interface ApiResponse<T = any> {\r\n@@ -37,24 +38,23 @@\n   completedFiles: FileDetails[];\r\n   pendingFiles: FileDetails[];\r\n }\r\n \r\n-export interface PredictionHistory {\r\n-  id: string;\r\n+export interface BasePrediction {\r\n   text: string;\r\n+  timestamp: Date;\r\n   prediction: string;\r\n+  confidence: number;\r\n   categories: SentimentScore[];\r\n-  timestamp: Date;\r\n }\r\n \r\n-export interface PredictionResponse {\r\n-  text: string;\r\n+export interface PredictionHistory extends BasePrediction {\r\n+  id: string;\r\n+}\r\n+\r\n+export interface PredictionResponse extends BasePrediction {\r\n+  sentiment_scores: Record<string, number>;\r\n   final_prediction: string;\r\n-  confidence: number;\r\n-  sentiment_scores: {\r\n-    [key: string]: number;\r\n-  };\r\n-  timestamp: Date;\r\n }\r\n \r\n export interface UserData {\r\n   pendingFiles: FileDetails[];\r\n"
                },
                {
                    "date": 1748381545022,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,11 +67,53 @@\n   language?: string;\r\n   saveToHistory?: boolean;\r\n }\r\n \r\n-// Helper function to convert timestamp string to Date\r\n+// Helper functions for type conversion\r\n export function toDate(timestamp: string | Date): Date {\r\n   if (timestamp instanceof Date) {\r\n     return timestamp;\r\n   }\r\n   return new Date(timestamp);\r\n }\r\n+\r\n+export function sentimentScoresToCategories(scores: Record<string, number>): SentimentScore[] {\r\n+  return Object.entries(scores).map(([name, value]) => ({\r\n+    name,\r\n+    value: Math.round(value * 100)\r\n+  }));\r\n+}\r\n+\r\n+export function categoriesToSentimentScores(categories: SentimentScore[]): Record<string, number> {\r\n+  return categories.reduce((acc, { name, value }) => {\r\n+    acc[name] = value / 100;\r\n+    return acc;\r\n+  }, {} as Record<string, number>);\r\n+}\r\n+\r\n+export function convertPredictionResponseToHistory(\r\n+  response: PredictionResponse,\r\n+  id: string\r\n+): PredictionHistory {\r\n+  return {\r\n+    id,\r\n+    text: response.text,\r\n+    timestamp: response.timestamp,\r\n+    prediction: response.final_prediction,\r\n+    confidence: response.confidence,\r\n+    categories: sentimentScoresToCategories(response.sentiment_scores)\r\n+  };\r\n+}\r\n+\r\n+export function convertHistoryToPredictionResponse(\r\n+  history: PredictionHistory\r\n+): PredictionResponse {\r\n+  return {\r\n+    text: history.text,\r\n+    timestamp: history.timestamp,\r\n+    final_prediction: history.prediction,\r\n+    prediction: history.prediction,\r\n+    confidence: history.confidence,\r\n+    categories: history.categories,\r\n+    sentiment_scores: categoriesToSentimentScores(history.categories)\r\n+  };\r\n+}\r\n"
                },
                {
                    "date": 1748470987610,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,119 +1,135 @@\n-export interface FileDetails {\r\n-  id: string;\r\n-  name: string;\r\n-  timestamp: string;\r\n-  data: any[];\r\n-  status?: 'processing' | 'completed' | 'error';\r\n+import { ChartData } from \"chart.js\";\r\n+\r\n+export interface LoginRequest {\r\n+  username: string;\r\n+  password: string;\r\n }\r\n \r\n-export interface SentimentScore {\r\n-  name: string;\r\n-  value: number;\r\n+export interface LoginResponse {\r\n+  token: string;\r\n+  user?: {\r\n+    id: string;\r\n+    username: string;\r\n+    email: string;\r\n+  };\r\n+  message?: string;\r\n }\r\n \r\n-export interface PredictionResult {\r\n-  prediction: string;\r\n-  confidence?: number;\r\n-  categories: SentimentScore[];\r\n+export interface RegisterRequest {\r\n+  email: string;\r\n+  username: string;\r\n+  password: string;\r\n }\r\n \r\n-export interface ApiResponse<T = any> {\r\n+export interface RegisterResponse {\r\n   success: boolean;\r\n-  data?: T;\r\n-  error?: string;\r\n+  message: string;\r\n+  user?: {\r\n+    id: string;\r\n+    username: string;\r\n+    email: string;\r\n+  };\r\n }\r\n \r\n+export interface PredictionRequest {\r\n+  text: string;\r\n+}\r\n+\r\n+export interface PredictionResponse {\r\n+  text: string;\r\n+  confidence: number;\r\n+  final_prediction?: string;\r\n+  sentiment_scores?: {name:string,value:number}[];\r\n+  timestamp?: Date;\r\n+}\r\n+\r\n export interface FileUploadResponse {\r\n   fileId: string;\r\n   name: string;\r\n-  timestamp: string;\r\n-}\r\n-\r\n-export interface FileStatus {\r\n-  status: 'processing' | 'completed' | 'error';\r\n+  status: string;\r\n   message?: string;\r\n-}\r\n-\r\n-export interface FileListResponse {\r\n-  completedFiles: FileDetails[];\r\n-  pendingFiles: FileDetails[];\r\n-}\r\n-\r\n-export interface BasePrediction {\r\n-  text: string;\r\n   timestamp: Date;\r\n-  prediction: string;\r\n-  confidence: number;\r\n-  categories: SentimentScore[];\r\n }\r\n \r\n-export interface PredictionHistory extends BasePrediction {\r\n+export interface FileListItem {\r\n   id: string;\r\n+  name: string;\r\n+  data: any[];\r\n+  chartData?: ChartData;\r\n+  isDefault?: boolean;\r\n+  status: string;\r\n+  timestamp: Date; \r\n }\r\n \r\n-export interface PredictionResponse extends BasePrediction {\r\n-  sentiment_scores: Record<string, number>;\r\n-  final_prediction: string;\r\n+// Make the data property optional in CompletedFile\r\n+export interface CompletedFile {\r\n+  id: string;\r\n+  name: string;\r\n+  status: string;\r\n+  timestamp: Date;\r\n+  data?: PredictionResponse[]; // Use PredictionResponse for data\r\n }\r\n \r\n-export interface UserData {\r\n-  pendingFiles: FileDetails[];\r\n-  completedFiles: FileDetails[];\r\n-  predictionHistory: PredictionHistory[];\r\n+// Use FileListItem for completedFiles since your mock data matches that structure\r\n+export interface FileListResponse {\r\n+  pendingFiles: Array<{\r\n+    id: string;\r\n+    name: string;\r\n+    timestamp: string;\r\n+  }>;\r\n+  completedFiles: Array<{\r\n+    id: string;\r\n+    name: string;\r\n+    status: string;\r\n+    timestamp: string;\r\n+    data?: PredictionResponse[];\r\n+  }>;\r\n+  count: number;\r\n }\r\n \r\n-export interface PredictionRequest {\r\n-  text: string;\r\n-  language?: string;\r\n-  saveToHistory?: boolean;\r\n+export interface FileDetailResponse {\r\n+  id: string;\r\n+  name: string;\r\n+  status: string;\r\n+  timestamp: Date;\r\n+  uploadedAt?: string;\r\n+  data?: PredictionResponse[]; // Use PredictionResponse for data\r\n }\r\n \r\n-// Helper functions for type conversion\r\n-export function toDate(timestamp: string | Date): Date {\r\n-  if (timestamp instanceof Date) {\r\n-    return timestamp;\r\n-  }\r\n-  return new Date(timestamp);\r\n+export interface FileStatusResponse {\r\n+  id: string;\r\n+  status: string;\r\n+  progress?: number;\r\n+  message?: string;\r\n }\r\n \r\n-export function sentimentScoresToCategories(scores: Record<string, number>): SentimentScore[] {\r\n-  return Object.entries(scores).map(([name, value]) => ({\r\n-    name,\r\n-    value: Math.round(value * 100)\r\n-  }));\r\n-}\r\n \r\n-export function categoriesToSentimentScores(categories: SentimentScore[]): Record<string, number> {\r\n-  return categories.reduce((acc, { name, value }) => {\r\n-    acc[name] = value / 100;\r\n-    return acc;\r\n-  }, {} as Record<string, number>);\r\n-}\r\n \r\n-export function convertPredictionResponseToHistory(\r\n-  response: PredictionResponse,\r\n-  id: string\r\n-): PredictionHistory {\r\n-  return {\r\n-    id,\r\n-    text: response.text,\r\n-    timestamp: response.timestamp,\r\n-    prediction: response.final_prediction,\r\n-    confidence: response.confidence,\r\n-    categories: sentimentScoresToCategories(response.sentiment_scores)\r\n-  };\r\n+// Update the UserDataResponse to match your mock data structure\r\n+export interface UserDataResponse {\r\n+  username: string;\r\n+  email: string;\r\n+  totalPredictions: number;\r\n+  totalFiles: number;\r\n+  predictionHistory: Array<{\r\n+    text: string;\r\n+    final_prediction: string;\r\n+    confidence: number;\r\n+    sentiment_scores: { name: string; value: number; }[];\r\n+    timestamp: string;\r\n+  }>;\r\n+  pendingFiles: Array<{\r\n+    id: string;\r\n+    name: string;\r\n+    timestamp: string;\r\n+  }>;\r\n+  completedFiles: Array<{\r\n+    id: string;\r\n+    name: string;\r\n+    status: string;\r\n+    timestamp: string;\r\n+    data?: PredictionResponse[];\r\n+  }>;\r\n }\r\n \r\n-export function convertHistoryToPredictionResponse(\r\n-  history: PredictionHistory\r\n-): PredictionResponse {\r\n-  return {\r\n-    text: history.text,\r\n-    timestamp: history.timestamp,\r\n-    final_prediction: history.prediction,\r\n-    prediction: history.prediction,\r\n-    confidence: history.confidence,\r\n-    categories: history.categories,\r\n-    sentiment_scores: categoriesToSentimentScores(history.categories)\r\n-  };\r\n-}\r\n+// Add additional interfaces if needed...\r\n"
                },
                {
                    "date": 1748470995501,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -102,10 +102,10 @@\n   progress?: number;\r\n   message?: string;\r\n }\r\n \r\n+export interface  Pendingfiles\r\n \r\n-\r\n // Update the UserDataResponse to match your mock data structure\r\n export interface UserDataResponse {\r\n   username: string;\r\n   email: string;\r\n"
                },
                {
                    "date": 1748471001715,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -102,9 +102,10 @@\n   progress?: number;\r\n   message?: string;\r\n }\r\n \r\n-export interface  Pendingfiles\r\n+export interface  PendingFilesResponse {\r\n+}\r\n \r\n // Update the UserDataResponse to match your mock data structure\r\n export interface UserDataResponse {\r\n   username: string;\r\n"
                },
                {
                    "date": 1748471013365,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -103,8 +103,12 @@\n   message?: string;\r\n }\r\n \r\n export interface  PendingFilesResponse {\r\n+      id: string;\r\n+    name: string;\r\n+    timestamp: string;\r\n+\r\n }\r\n \r\n // Update the UserDataResponse to match your mock data structure\r\n export interface UserDataResponse {\r\n"
                },
                {
                    "date": 1748471021828,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -103,12 +103,11 @@\n   message?: string;\r\n }\r\n \r\n export interface  PendingFilesResponse {\r\n-      id: string;\r\n+    id: string;\r\n     name: string;\r\n     timestamp: string;\r\n-\r\n }\r\n \r\n // Update the UserDataResponse to match your mock data structure\r\n export interface UserDataResponse {\r\n@@ -122,10 +121,9 @@\n     confidence: number;\r\n     sentiment_scores: { name: string; value: number; }[];\r\n     timestamp: string;\r\n   }>;\r\n-  pendingFiles: Array<{\r\n-    id: string;\r\n+  pendingFiles: Array<{id: string;\r\n     name: string;\r\n     timestamp: string;\r\n   }>;\r\n   completedFiles: Array<{\r\n"
                },
                {
                    "date": 1748471027797,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -121,12 +121,9 @@\n     confidence: number;\r\n     sentiment_scores: { name: string; value: number; }[];\r\n     timestamp: string;\r\n   }>;\r\n-  pendingFiles: Array<{id: string;\r\n-    name: string;\r\n-    timestamp: string;\r\n-  }>;\r\n+  pendingFiles: Array<{PendingFilesResponse>;\r\n   completedFiles: Array<{\r\n     id: string;\r\n     name: string;\r\n     status: string;\r\n"
                },
                {
                    "date": 1748471033430,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -121,9 +121,9 @@\n     confidence: number;\r\n     sentiment_scores: { name: string; value: number; }[];\r\n     timestamp: string;\r\n   }>;\r\n-  pendingFiles: Array<{PendingFilesResponse>;\r\n+  pendingFiles: PendingFilesResponse[];\r\n   completedFiles: Array<{\r\n     id: string;\r\n     name: string;\r\n     status: string;\r\n"
                },
                {
                    "date": 1748471042024,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -107,9 +107,9 @@\n     id: string;\r\n     name: string;\r\n     timestamp: string;\r\n }\r\n-\r\n+export interface PredictionHistoryResponse {\r\n // Update the UserDataResponse to match your mock data structure\r\n export interface UserDataResponse {\r\n   username: string;\r\n   email: string;\r\n"
                },
                {
                    "date": 1748471048969,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -108,8 +108,14 @@\n     name: string;\r\n     timestamp: string;\r\n }\r\n export interface PredictionHistoryResponse {\r\n+  text: string;\r\n+  final_prediction: string;\r\n+  confidence: number;\r\n+  sentiment_scores: { name: string; value: number; }[];\r\n+  timestamp: string;\r\n+}\r\n // Update the UserDataResponse to match your mock data structure\r\n export interface UserDataResponse {\r\n   username: string;\r\n   email: string;\r\n"
                },
                {
                    "date": 1748471056062,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -114,8 +114,11 @@\n   confidence: number;\r\n   sentiment_scores: { name: string; value: number; }[];\r\n   timestamp: string;\r\n }\r\n+\r\n+\r\n+\r\n // Update the UserDataResponse to match your mock data structure\r\n export interface UserDataResponse {\r\n   username: string;\r\n   email: string;\r\n"
                },
                {
                    "date": 1748471066275,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -123,15 +123,9 @@\n   username: string;\r\n   email: string;\r\n   totalPredictions: number;\r\n   totalFiles: number;\r\n-  predictionHistory: Array<{\r\n-    text: string;\r\n-    final_prediction: string;\r\n-    confidence: number;\r\n-    sentiment_scores: { name: string; value: number; }[];\r\n-    timestamp: string;\r\n-  }>;\r\n+  predictionHistory: PredictionHistoryResponse[];\r\n   pendingFiles: PendingFilesResponse[];\r\n   completedFiles: Array<{\r\n     id: string;\r\n     name: string;\r\n"
                },
                {
                    "date": 1748471071955,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -115,10 +115,10 @@\n   sentiment_scores: { name: string; value: number; }[];\r\n   timestamp: string;\r\n }\r\n \r\n+export \r\n \r\n-\r\n // Update the UserDataResponse to match your mock data structure\r\n export interface UserDataResponse {\r\n   username: string;\r\n   email: string;\r\n"
                },
                {
                    "date": 1748471082670,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -115,10 +115,14 @@\n   sentiment_scores: { name: string; value: number; }[];\r\n   timestamp: string;\r\n }\r\n \r\n-export \r\n+export interface CompletedFilesResponse {\r\n \r\n+\r\n+}\r\n+\r\n+\r\n // Update the UserDataResponse to match your mock data structure\r\n export interface UserDataResponse {\r\n   username: string;\r\n   email: string;\r\n"
                },
                {
                    "date": 1748471095401,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -117,9 +117,13 @@\n }\r\n \r\n export interface CompletedFilesResponse {\r\n \r\n-\r\n+  id: string;\r\n+  name: string;\r\n+  status: string;\r\n+  timestamp: string;\r\n+  data?: PredictionResponse[];\r\n }\r\n \r\n \r\n // Update the UserDataResponse to match your mock data structure\r\n@@ -129,14 +133,8 @@\n   totalPredictions: number;\r\n   totalFiles: number;\r\n   predictionHistory: PredictionHistoryResponse[];\r\n   pendingFiles: PendingFilesResponse[];\r\n-  completedFiles: Array<{\r\n-    id: string;\r\n-    name: string;\r\n-    status: string;\r\n-    timestamp: string;\r\n-    data?: PredictionResponse[];\r\n-  }>;\r\n+  completedFiles: CompletedFilesResponse[];\r\n }\r\n \r\n // Add additional interfaces if needed...\r\n"
                },
                {
                    "date": 1748471709340,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -116,9 +116,8 @@\n   timestamp: string;\r\n }\r\n \r\n export interface CompletedFilesResponse {\r\n-\r\n   id: string;\r\n   name: string;\r\n   status: string;\r\n   timestamp: string;\r\n@@ -135,6 +134,4 @@\n   predictionHistory: PredictionHistoryResponse[];\r\n   pendingFiles: PendingFilesResponse[];\r\n   completedFiles: CompletedFilesResponse[];\r\n }\r\n-\r\n-// Add additional interfaces if needed...\r\n"
                },
                {
                    "date": 1748471726830,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -118,9 +118,8 @@\n \r\n export interface CompletedFilesResponse {\r\n   id: string;\r\n   name: string;\r\n-  status: string;\r\n   timestamp: string;\r\n   data?: PredictionResponse[];\r\n }\r\n \r\n"
                },
                {
                    "date": 1748471754104,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -119,9 +119,8 @@\n export interface CompletedFilesResponse {\r\n   id: string;\r\n   name: string;\r\n   timestamp: string;\r\n-  data?: PredictionResponse[];\r\n }\r\n \r\n \r\n // Update the UserDataResponse to match your mock data structure\r\n"
                },
                {
                    "date": 1748471775579,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -102,9 +102,9 @@\n   progress?: number;\r\n   message?: string;\r\n }\r\n \r\n-export interface  PendingFilesResponse {\r\n+export interface  PendingFilesResponse|  {\r\n     id: string;\r\n     name: string;\r\n     timestamp: string;\r\n }\r\n"
                },
                {
                    "date": 1748471787587,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -102,9 +102,9 @@\n   progress?: number;\r\n   message?: string;\r\n }\r\n \r\n-export interface  PendingFilesResponse|  {\r\n+export interface  PendingFilesResponse|| CompletedFilesResponse {\r\n     id: string;\r\n     name: string;\r\n     timestamp: string;\r\n }\r\n"
                },
                {
                    "date": 1748471803365,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -102,9 +102,9 @@\n   progress?: number;\r\n   message?: string;\r\n }\r\n \r\n-export interface  PendingFilesResponse|| CompletedFilesResponse {\r\n+export interface PendingFilesResponse {\r\n     id: string;\r\n     name: string;\r\n     timestamp: string;\r\n }\r\n"
                },
                {
                    "date": 1748471830447,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -103,11 +103,11 @@\n   message?: string;\r\n }\r\n \r\n export interface PendingFilesResponse {\r\n-    id: string;\r\n-    name: string;\r\n-    timestamp: string;\r\n+  id: string;\r\n+  name: string;\r\n+  timestamp: string;\r\n }\r\n export interface PredictionHistoryResponse {\r\n   text: string;\r\n   final_prediction: string;\r\n"
                },
                {
                    "date": 1748471840615,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -102,9 +102,9 @@\n   progress?: number;\r\n   message?: string;\r\n }\r\n \r\n-export interface PendingFilesResponse {\r\n+export interface FilesResponse {\r\n   id: string;\r\n   name: string;\r\n   timestamp: string;\r\n }\r\n"
                },
                {
                    "date": 1748471846340,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -115,15 +115,8 @@\n   sentiment_scores: { name: string; value: number; }[];\r\n   timestamp: string;\r\n }\r\n \r\n-export interface CompletedFilesResponse {\r\n-  id: string;\r\n-  name: string;\r\n-  timestamp: string;\r\n-}\r\n-\r\n-\r\n // Update the UserDataResponse to match your mock data structure\r\n export interface UserDataResponse {\r\n   username: string;\r\n   email: string;\r\n"
                },
                {
                    "date": 1748471862682,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -95,14 +95,8 @@\n   uploadedAt?: string;\r\n   data?: PredictionResponse[]; // Use PredictionResponse for data\r\n }\r\n \r\n-export interface FileStatusResponse {\r\n-  id: string;\r\n-  status: string;\r\n-  progress?: number;\r\n-  message?: string;\r\n-}\r\n \r\n export interface FilesResponse {\r\n   id: string;\r\n   name: string;\r\n@@ -122,7 +116,7 @@\n   email: string;\r\n   totalPredictions: number;\r\n   totalFiles: number;\r\n   predictionHistory: PredictionHistoryResponse[];\r\n-  pendingFiles: PendingFilesResponse[];\r\n-  completedFiles: CompletedFilesResponse[];\r\n+  pendingFiles: FilesResponse[];\r\n+  completedFiles: FilesResponse[];\r\n }\r\n"
                },
                {
                    "date": 1748471872252,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,15 +89,13 @@\n \r\n export interface FileDetailResponse {\r\n   id: string;\r\n   name: string;\r\n-  status: string;\r\n   timestamp: Date;\r\n   uploadedAt?: string;\r\n   data?: PredictionResponse[]; // Use PredictionResponse for data\r\n }\r\n \r\n-\r\n export interface FilesResponse {\r\n   id: string;\r\n   name: string;\r\n   timestamp: string;\r\n"
                },
                {
                    "date": 1748471914036,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,103 @@\n+import { ChartData } from \"chart.js\";\r\n+\r\n+export interface LoginRequest {\r\n+  username: string;\r\n+  password: string;\r\n+}\r\n+\r\n+export interface LoginResponse {\r\n+  token: string;\r\n+  user?: {\r\n+    id: string;\r\n+    username: string;\r\n+    email: string;\r\n+  };\r\n+  message?: string;\r\n+}\r\n+\r\n+export interface RegisterRequest {\r\n+  email: string;\r\n+  username: string;\r\n+  password: string;\r\n+}\r\n+\r\n+export interface RegisterResponse {\r\n+  success: boolean;\r\n+  message: string;\r\n+  user?: {\r\n+    id: string;\r\n+    username: string;\r\n+    email: string;\r\n+  };\r\n+}\r\n+\r\n+export interface PredictionRequest {\r\n+  text: string;\r\n+}\r\n+\r\n+export interface PredictionResponse {\r\n+  text: string;\r\n+  confidence: number;\r\n+  final_prediction?: string;\r\n+  sentiment_scores?: {name:string,value:number}[];\r\n+  timestamp?: Date;\r\n+}\r\n+\r\n+export interface FileUploadResponse {\r\n+  fileId: string;\r\n+  name: string;\r\n+  status: string;\r\n+  message?: string;\r\n+  timestamp: Date;\r\n+}\r\n+\r\n+export interface FileListItem {\r\n+  id: string;\r\n+  name: string;\r\n+  data: any[];\r\n+  chartData?: ChartData;\r\n+  isDefault?: boolean;\r\n+  status: string;\r\n+  timestamp: Date; \r\n+}\r\n+\r\n+// Make the data property optional in CompletedFile\r\n+export interface CompletedFile {\r\n+  id: string;\r\n+  name: string;\r\n+  status: string;\r\n+  timestamp: Date;\r\n+  data?: PredictionResponse[]; // Use PredictionResponse for data\r\n+}\r\n+\r\n+\r\n+export interface FileDetailResponse {\r\n+  id: string;\r\n+  name: string;\r\n+  timestamp: Date;\r\n+  data?: PredictionResponse[]; // Use PredictionResponse for data\r\n+}\r\n+\r\n+export interface FilesResponse {\r\n+  id: string;\r\n+  name: string;\r\n+  timestamp: string;\r\n+}\r\n+export interface PredictionHistoryResponse {\r\n+  text: string;\r\n+  final_prediction: string;\r\n+  confidence: number;\r\n+  sentiment_scores: { name: string; value: number; }[];\r\n+  timestamp: string;\r\n+}\r\n+\r\n+// Update the UserDataResponse to match your mock data structure\r\n+export interface UserDataResponse {\r\n+  username: string;\r\n+  email: string;\r\n+  totalPredictions: number;\r\n+  totalFiles: number;\r\n+  predictionHistory: PredictionHistoryResponse[];\r\n+  pendingFiles: FilesResponse[];\r\n+  completedFiles: FilesResponse[];\r\n+}\r\n"
                },
                {
                    "date": 1748471920272,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,142 +60,15 @@\n   status: string;\r\n   timestamp: Date; \r\n }\r\n \r\n-// Make the data property optional in CompletedFile\r\n-export interface CompletedFile {\r\n-  id: string;\r\n-  name: string;\r\n-  status: string;\r\n-  timestamp: Date;\r\n-  data?: PredictionResponse[]; // Use PredictionResponse for data\r\n-}\r\n \r\n \r\n-export interface FileDetailResponse {\r\n-  id: string;\r\n-  name: string;\r\n-  timestamp: Date;\r\n-  data?: PredictionResponse[]; // Use PredictionResponse for data\r\n-}\r\n \r\n-export interface FilesResponse {\r\n-  id: string;\r\n-  name: string;\r\n-  timestamp: string;\r\n-}\r\n-export interface PredictionHistoryResponse {\r\n-  text: string;\r\n-  final_prediction: string;\r\n-  confidence: number;\r\n-  sentiment_scores: { name: string; value: number; }[];\r\n-  timestamp: string;\r\n-}\r\n-\r\n-// Update the UserDataResponse to match your mock data structure\r\n-export interface UserDataResponse {\r\n-  username: string;\r\n-  email: string;\r\n-  totalPredictions: number;\r\n-  totalFiles: number;\r\n-  predictionHistory: PredictionHistoryResponse[];\r\n-  pendingFiles: FilesResponse[];\r\n-  completedFiles: FilesResponse[];\r\n-}\r\n-import { ChartData } from \"chart.js\";\r\n-\r\n-export interface LoginRequest {\r\n-  username: string;\r\n-  password: string;\r\n-}\r\n-\r\n-export interface LoginResponse {\r\n-  token: string;\r\n-  user?: {\r\n-    id: string;\r\n-    username: string;\r\n-    email: string;\r\n-  };\r\n-  message?: string;\r\n-}\r\n-\r\n-export interface RegisterRequest {\r\n-  email: string;\r\n-  username: string;\r\n-  password: string;\r\n-}\r\n-\r\n-export interface RegisterResponse {\r\n-  success: boolean;\r\n-  message: string;\r\n-  user?: {\r\n-    id: string;\r\n-    username: string;\r\n-    email: string;\r\n-  };\r\n-}\r\n-\r\n-export interface PredictionRequest {\r\n-  text: string;\r\n-}\r\n-\r\n-export interface PredictionResponse {\r\n-  text: string;\r\n-  confidence: number;\r\n-  final_prediction?: string;\r\n-  sentiment_scores?: {name:string,value:number}[];\r\n-  timestamp?: Date;\r\n-}\r\n-\r\n-export interface FileUploadResponse {\r\n-  fileId: string;\r\n-  name: string;\r\n-  status: string;\r\n-  message?: string;\r\n-  timestamp: Date;\r\n-}\r\n-\r\n-export interface FileListItem {\r\n-  id: string;\r\n-  name: string;\r\n-  data: any[];\r\n-  chartData?: ChartData;\r\n-  isDefault?: boolean;\r\n-  status: string;\r\n-  timestamp: Date; \r\n-}\r\n-\r\n-// Make the data property optional in CompletedFile\r\n-export interface CompletedFile {\r\n-  id: string;\r\n-  name: string;\r\n-  status: string;\r\n-  timestamp: Date;\r\n-  data?: PredictionResponse[]; // Use PredictionResponse for data\r\n-}\r\n-\r\n-// Use FileListItem for completedFiles since your mock data matches that structure\r\n-export interface FileListResponse {\r\n-  pendingFiles: Array<{\r\n-    id: string;\r\n-    name: string;\r\n-    timestamp: string;\r\n-  }>;\r\n-  completedFiles: Array<{\r\n-    id: string;\r\n-    name: string;\r\n-    status: string;\r\n-    timestamp: string;\r\n-    data?: PredictionResponse[];\r\n-  }>;\r\n-  count: number;\r\n-}\r\n-\r\n export interface FileDetailResponse {\r\n   id: string;\r\n   name: string;\r\n   timestamp: Date;\r\n-  uploadedAt?: string;\r\n   data?: PredictionResponse[]; // Use PredictionResponse for data\r\n }\r\n \r\n export interface FilesResponse {\r\n"
                },
                {
                    "date": 1748471927304,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,21 +50,8 @@\n   message?: string;\r\n   timestamp: Date;\r\n }\r\n \r\n-export interface FileListItem {\r\n-  id: string;\r\n-  name: string;\r\n-  data: any[];\r\n-  chartData?: ChartData;\r\n-  isDefault?: boolean;\r\n-  status: string;\r\n-  timestamp: Date; \r\n-}\r\n-\r\n-\r\n-\r\n-\r\n export interface FileDetailResponse {\r\n   id: string;\r\n   name: string;\r\n   timestamp: Date;\r\n"
                },
                {
                    "date": 1748471954948,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,15 +34,8 @@\n export interface PredictionRequest {\r\n   text: string;\r\n }\r\n \r\n-export interface PredictionResponse {\r\n-  text: string;\r\n-  confidence: number;\r\n-  final_prediction?: string;\r\n-  sentiment_scores?: {name:string,value:number}[];\r\n-  timestamp?: Date;\r\n-}\r\n \r\n export interface FileUploadResponse {\r\n   fileId: string;\r\n   name: string;\r\n"
                },
                {
                    "date": 1748471964750,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,9 @@\n export interface FileDetailResponse {\r\n   id: string;\r\n   name: string;\r\n   timestamp: Date;\r\n-  data?: PredictionResponse[]; // Use PredictionResponse for data\r\n+  data?: PredictionHistoryResponse[]; // Use PredictionResponse for data\r\n }\r\n \r\n export interface FilesResponse {\r\n   id: string;\r\n"
                },
                {
                    "date": 1748471972065,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,8 +34,15 @@\n export interface PredictionRequest {\r\n   text: string;\r\n }\r\n \r\n+export interface PredictionResponse {\r\n+  text: string;\r\n+  confidence: number;\r\n+  final_prediction?: string;\r\n+  sentiment_scores?: {name:string,value:number}[];\r\n+  timestamp?: Date;\r\n+}\r\n \r\n export interface FileUploadResponse {\r\n   fileId: string;\r\n   name: string;\r\n@@ -47,9 +54,9 @@\n export interface FileDetailResponse {\r\n   id: string;\r\n   name: string;\r\n   timestamp: Date;\r\n-  data?: PredictionHistoryResponse[]; // Use PredictionResponse for data\r\n+  data?: PredictionResponse[]; // Use PredictionResponse for data\r\n }\r\n \r\n export interface FilesResponse {\r\n   id: string;\r\n"
                },
                {
                    "date": 1748472005515,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,15 +34,8 @@\n export interface PredictionRequest {\r\n   text: string;\r\n }\r\n \r\n-export interface PredictionResponse {\r\n-  text: string;\r\n-  confidence: number;\r\n-  final_prediction?: string;\r\n-  sentiment_scores?: {name:string,value:number}[];\r\n-  timestamp?: Date;\r\n-}\r\n \r\n export interface FileUploadResponse {\r\n   fileId: string;\r\n   name: string;\r\n"
                },
                {
                    "date": 1748472013752,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,9 @@\n export interface FileDetailResponse {\r\n   id: string;\r\n   name: string;\r\n   timestamp: Date;\r\n-  data?: PredictionResponse[]; // Use PredictionResponse for data\r\n+  data?: PredictionHistoryResponse[];\r\n }\r\n \r\n export interface FilesResponse {\r\n   id: string;\r\n"
                },
                {
                    "date": 1748472159563,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,9 +60,9 @@\n   text: string;\r\n   final_prediction: string;\r\n   confidence: number;\r\n   sentiment_scores: { name: string; value: number; }[];\r\n-  timestamp: string;\r\n+  timestamp: Date;\r\n }\r\n \r\n // Update the UserDataResponse to match your mock data structure\r\n export interface UserDataResponse {\r\n"
                },
                {
                    "date": 1748472543564,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,9 @@\n \r\n export interface FilesResponse {\r\n   id: string;\r\n   name: string;\r\n-  timestamp: string;\r\n+  timestamp: Date;\r\n }\r\n export interface PredictionHistoryResponse {\r\n   text: string;\r\n   final_prediction: string;\r\n"
                },
                {
                    "date": 1748474274957,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,4 +73,19 @@\n   predictionHistory: PredictionHistoryResponse[];\r\n   pendingFiles: FilesResponse[];\r\n   completedFiles: FilesResponse[];\r\n }\r\n+\r\n+export interface FilesResponseWithChart extends FilesResponse {\r\n+  chartData?: ChartData;\r\n+  data?: any[]; // Raw prediction data\r\n+}\r\n+\r\n+export interface UserDataResponseWithChart {\r\n+  username: string;\r\n+  email: string;\r\n+  totalPredictions: number;\r\n+  totalFiles: number;\r\n+  predictionHistory: PredictionHistoryResponse[];\r\n+  pendingFiles: FilesResponse[];\r\n+  completedFiles: FilesResponseWithChart[]; // Use the new interface\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1748476721677,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,9 +76,9 @@\n }\r\n \r\n export interface FilesResponseWithChart extends FilesResponse {\r\n   chartData?: ChartData;\r\n-  data?: any[]; // Raw prediction data\r\n+  data: any[]; // Raw prediction data\r\n }\r\n \r\n export interface UserDataResponseWithChart {\r\n   username: string;\r\n"
                }
            ],
            "date": 1748182596040,
            "name": "Commit-0",
            "content": "import { ChartData } from \"chart.js\";\r\n\r\nexport interface LoginRequest {\r\n  username: string;\r\n  password: string;\r\n}\r\n\r\nexport interface LoginResponse {\r\n  token: string;\r\n  user?: {\r\n    id: string;\r\n    username: string;\r\n    email: string;\r\n  };\r\n  message?: string;\r\n}\r\n\r\nexport interface RegisterRequest {\r\n  email: string;\r\n  username: string;\r\n  password: string;\r\n}\r\n\r\nexport interface RegisterResponse {\r\n  success: boolean;\r\n  message: string;\r\n  user?: {\r\n    id: string;\r\n    username: string;\r\n    email: string;\r\n  };\r\n}\r\n\r\nexport interface PredictionRequest {\r\n  text: string;\r\n}\r\n\r\nexport interface PredictionResponse {\r\n  text: string;\r\n  confidence: number;\r\n  final_prediction?: string;\r\n  sentiment_scores?: {name:string,value:number}[];\r\n  timestamp?: Date;\r\n}\r\n\r\nexport interface FileUploadResponse {\r\n  fileId: string;\r\n  name: string;\r\n  status: string;\r\n  message?: string;\r\n  timestamp: Date;\r\n}\r\n\r\nexport interface FileListItem {\r\n  id: string;\r\n  name: string;\r\n  data: any[];\r\n  chartData?: ChartData;\r\n  isDefault?: boolean;\r\n  status: string;\r\n  timestamp: Date; \r\n}\r\n\r\n// Make the data property optional in CompletedFile\r\nexport interface CompletedFile {\r\n  id: string;\r\n  name: string;\r\n  status: string;\r\n  timestamp: Date;\r\n  data?: PredictionResponse[]; // Use PredictionResponse for data\r\n}\r\n\r\n// Use FileListItem for completedFiles since your mock data matches that structure\r\nexport interface FileListResponse {\r\n  pendingFiles: Array<{\r\n    id: string;\r\n    name: string;\r\n    timestamp: string;\r\n  }>;\r\n  completedFiles: Array<{\r\n    id: string;\r\n    name: string;\r\n    status: string;\r\n    timestamp: string;\r\n    data?: PredictionResponse[];\r\n  }>;\r\n  count: number;\r\n}\r\n\r\nexport interface FileDetailResponse {\r\n  id: string;\r\n  name: string;\r\n  status: string;\r\n  timestamp: Date;\r\n  uploadedAt?: string;\r\n  data?: PredictionResponse[]; // Use PredictionResponse for data\r\n}\r\n\r\nexport interface FileStatusResponse {\r\n  id: string;\r\n  status: string;\r\n  progress?: number;\r\n  message?: string;\r\n}\r\n\r\n// Update the UserDataResponse to match your mock data structure\r\nexport interface UserDataResponse {\r\n  username: string;\r\n  email: string;\r\n  totalPredictions: number;\r\n  totalFiles: number;\r\n  predictionHistory: Array<{\r\n    text: string;\r\n    final_prediction: string;\r\n    confidence: number;\r\n    sentiment_scores: { name: string; value: number; }[];\r\n    timestamp: string;\r\n  }>;\r\n  pendingFiles: Array<{\r\n    id: string;\r\n    name: string;\r\n    timestamp: string;\r\n  }>;\r\n  completedFiles: Array<{\r\n    id: string;\r\n    name: string;\r\n    status: string;\r\n    timestamp: string;\r\n    data?: PredictionResponse[];\r\n  }>;\r\n}\r\n\r\n// Add additional interfaces if needed...\r\n"
        }
    ]
}